{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"tags/","text":"Tags \u00b6 Following is a list of relevant tags: ESKF \u00b6 ESKF\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u8bef\u5dee\u72b6\u6001\u6ee4\u6ce2\u5668","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#eskf","text":"ESKF\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u8bef\u5dee\u72b6\u6001\u6ee4\u6ce2\u5668","title":"ESKF"},{"location":"MPC/testpage/","text":"test \u00b6","title":"Testpage"},{"location":"MPC/testpage/#test","text":"","title":"test"},{"location":"MPC/%E5%9F%BA%E4%BA%8E%E9%98%B6%E8%B7%83%E5%93%8D%E5%BA%94%E7%9A%84%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%8E%A7%E5%88%B6/","text":"\u57fa\u4e8e\u9636\u8dc3\u54cd\u5e94\u7684\u65e0\u7ea6\u675f\u63a7\u5236 \u00b6 k\u65f6\u523b\u540e\u8f93\u5165u\u4e0d\u53d8\uff0c\u5373 \\(\\Delta u(k+i) =0, (i=0,1,\\dots)\\) \u7a33\u5b9aSISO\u7cfb\u7edf\u7684\u4e0d\u53d8\u8f93\u5165\u975e\u96f6\u521d\u59cb\u72b6\u6001\u54cd\u5e94: $$ \\begin{align} \\begin{bmatrix} y(k)\\\\y(k+1)\\\\ \\vdots\\\\y(k+N-1) \\end{bmatrix}&= \\begin{bmatrix} 0&1&0&\\dots&0&0\\\\ 0&0&1&\\dots&0&0\\\\ \\vdots&\\vdots&\\vdots&&\\vdots&\\vdots\\\\ 0&0&0&\\dots&0&1\\\\ 0&0&0&\\dots&0&1\\\\ \\end{bmatrix} \\begin{bmatrix} y(k-1)\\\\y(k)\\\\ \\vdots\\\\y(k+N-2) \\end{bmatrix} \\\\ Y(k)\\qquad &=\\qquad \\qquad M_{ss}\\qquad \\qquad \\qquad Y(k-1) \\end{align} $$ \u96f6\u521d\u59cb\u72b6\u6001\u4e0b \\(y(k-1)=0\\) \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94\uff1a $$ \\begin{align} y(k) &=s_1 \\Delta u(k-1)\\\\ y(k+1) &=s_2 \\Delta u(k-1)\\\\ &\\vdots \\\\ y(k+N-1) &=s_N \\Delta u(k-1)\\\\ y(k+N) &=s_N \\Delta u(k-1)\\\\ \\end{align} $$ \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94\u7cfb\u6570\u77e9\u9635\u4e3a \\(S=[s_1,s_2,\\dots,s_N]^\\top\\) \uff0c\u7531\u7ebf\u6027\u7cfb\u7edf\u53e0\u52a0\u6027\uff1a $$ Y(k)=M_{ss}Y(k-1)+S \\Delta u (k-1) $$ SISO \u7cfb\u7edf\u7684\u52a8\u6001\u77e9\u9635\u63a7\u5236\uff08DMC\uff09 \u00b6 \u72b6\u6001\u4f30\u8ba1\uff1a \\(Y(k)=M_{ss}Y(k-1)+S_u \\Delta u (k-1) +S_d \\Delta d (k-1)\\) \u9884\u6d4b\u65b9\u7a0b\uff1a \\(Y_p(k+1)=M Y(k)+S_u \\Delta U (k) +S_d \\Delta d (k)\\) \u4f18\u5316\u95ee\u9898\uff1a $$\\min_{\\Delta U} J(y(k),\\Delta(k),m,p)=\\| \\Xi_y (Y_p-R)\\|^2 +\\| \\Xi_u \\Delta U\\|^2 $$ \u5c06\u89e3\u5f97\u7684\u4f18\u5316\u89e3\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u7528\u4e8e\u7cfb\u7edf \uff08\u6eda\u52a8\u65f6\u57df\uff0c\u91cd\u590d\u8fdb\u884c\uff09 SISO \u65f6\u6ede\u7cfb\u7edf\u7684\u52a8\u6001\u77e9\u9635\u63a7\u5236\uff08DMC\uff09 \u00b6 \\(Su=\\begin{bmatrix}0\\\\ 0\\\\ \\dots \\\\ s_{\\theta_u +1} \\\\\\ s_{\\theta_u +2} \\\\ \\dots \\\\ s_N \\end{bmatrix}\\) , \\(Sd=\\begin{bmatrix}0\\\\ 0\\\\ \\dots \\\\ s_{\\theta_d +1} \\\\\\ s_{\\theta_d +2} \\\\ \\dots \\\\ s_N \\end{bmatrix}\\) , \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94: \\(Y(k)=S_u \\Delta u(k-1) + S_d \\Delta d(k-1)\\) \u7ebf\u6027\u7cfb\u7edf\u4efb\u610f\u8f93\u5165\u54cd\u5e94: \\(Y(k)=M_{ss}Y(k-1)+ S_u \\Delta u(k-1) + S_d \\Delta d(k-1)\\) \u9884\u6d4b\u65b9\u7a0b\uff1a \\(Y_p(k+1)=M_{ss}Y(k)+ S_u \\Delta U(k) + S_d \\Delta d(k)\\) \u6a21\u578b\u9884\u6d4b\u63a7\u5236 \u9648\u8679 \u21a9","title":"\u57fa\u4e8e\u9636\u8dc3\u54cd\u5e94\u7684\u65e0\u7ea6\u675f\u63a7\u5236"},{"location":"MPC/%E5%9F%BA%E4%BA%8E%E9%98%B6%E8%B7%83%E5%93%8D%E5%BA%94%E7%9A%84%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%8E%A7%E5%88%B6/#_1","text":"k\u65f6\u523b\u540e\u8f93\u5165u\u4e0d\u53d8\uff0c\u5373 \\(\\Delta u(k+i) =0, (i=0,1,\\dots)\\) \u7a33\u5b9aSISO\u7cfb\u7edf\u7684\u4e0d\u53d8\u8f93\u5165\u975e\u96f6\u521d\u59cb\u72b6\u6001\u54cd\u5e94: $$ \\begin{align} \\begin{bmatrix} y(k)\\\\y(k+1)\\\\ \\vdots\\\\y(k+N-1) \\end{bmatrix}&= \\begin{bmatrix} 0&1&0&\\dots&0&0\\\\ 0&0&1&\\dots&0&0\\\\ \\vdots&\\vdots&\\vdots&&\\vdots&\\vdots\\\\ 0&0&0&\\dots&0&1\\\\ 0&0&0&\\dots&0&1\\\\ \\end{bmatrix} \\begin{bmatrix} y(k-1)\\\\y(k)\\\\ \\vdots\\\\y(k+N-2) \\end{bmatrix} \\\\ Y(k)\\qquad &=\\qquad \\qquad M_{ss}\\qquad \\qquad \\qquad Y(k-1) \\end{align} $$ \u96f6\u521d\u59cb\u72b6\u6001\u4e0b \\(y(k-1)=0\\) \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94\uff1a $$ \\begin{align} y(k) &=s_1 \\Delta u(k-1)\\\\ y(k+1) &=s_2 \\Delta u(k-1)\\\\ &\\vdots \\\\ y(k+N-1) &=s_N \\Delta u(k-1)\\\\ y(k+N) &=s_N \\Delta u(k-1)\\\\ \\end{align} $$ \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94\u7cfb\u6570\u77e9\u9635\u4e3a \\(S=[s_1,s_2,\\dots,s_N]^\\top\\) \uff0c\u7531\u7ebf\u6027\u7cfb\u7edf\u53e0\u52a0\u6027\uff1a $$ Y(k)=M_{ss}Y(k-1)+S \\Delta u (k-1) $$","title":"\u57fa\u4e8e\u9636\u8dc3\u54cd\u5e94\u7684\u65e0\u7ea6\u675f\u63a7\u5236"},{"location":"MPC/%E5%9F%BA%E4%BA%8E%E9%98%B6%E8%B7%83%E5%93%8D%E5%BA%94%E7%9A%84%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%8E%A7%E5%88%B6/#siso-dmc","text":"\u72b6\u6001\u4f30\u8ba1\uff1a \\(Y(k)=M_{ss}Y(k-1)+S_u \\Delta u (k-1) +S_d \\Delta d (k-1)\\) \u9884\u6d4b\u65b9\u7a0b\uff1a \\(Y_p(k+1)=M Y(k)+S_u \\Delta U (k) +S_d \\Delta d (k)\\) \u4f18\u5316\u95ee\u9898\uff1a $$\\min_{\\Delta U} J(y(k),\\Delta(k),m,p)=\\| \\Xi_y (Y_p-R)\\|^2 +\\| \\Xi_u \\Delta U\\|^2 $$ \u5c06\u89e3\u5f97\u7684\u4f18\u5316\u89e3\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u7528\u4e8e\u7cfb\u7edf \uff08\u6eda\u52a8\u65f6\u57df\uff0c\u91cd\u590d\u8fdb\u884c\uff09","title":"SISO \u7cfb\u7edf\u7684\u52a8\u6001\u77e9\u9635\u63a7\u5236\uff08DMC\uff09"},{"location":"MPC/%E5%9F%BA%E4%BA%8E%E9%98%B6%E8%B7%83%E5%93%8D%E5%BA%94%E7%9A%84%E6%97%A0%E7%BA%A6%E6%9D%9F%E6%8E%A7%E5%88%B6/#siso-dmc_1","text":"\\(Su=\\begin{bmatrix}0\\\\ 0\\\\ \\dots \\\\ s_{\\theta_u +1} \\\\\\ s_{\\theta_u +2} \\\\ \\dots \\\\ s_N \\end{bmatrix}\\) , \\(Sd=\\begin{bmatrix}0\\\\ 0\\\\ \\dots \\\\ s_{\\theta_d +1} \\\\\\ s_{\\theta_d +2} \\\\ \\dots \\\\ s_N \\end{bmatrix}\\) , \u5355\u4f4d\u9636\u8dc3\u54cd\u5e94: \\(Y(k)=S_u \\Delta u(k-1) + S_d \\Delta d(k-1)\\) \u7ebf\u6027\u7cfb\u7edf\u4efb\u610f\u8f93\u5165\u54cd\u5e94: \\(Y(k)=M_{ss}Y(k-1)+ S_u \\Delta u(k-1) + S_d \\Delta d(k-1)\\) \u9884\u6d4b\u65b9\u7a0b\uff1a \\(Y_p(k+1)=M_{ss}Y(k)+ S_u \\Delta U(k) + S_d \\Delta d(k)\\) \u6a21\u578b\u9884\u6d4b\u63a7\u5236 \u9648\u8679 \u21a9","title":"SISO \u65f6\u6ede\u7cfb\u7edf\u7684\u52a8\u6001\u77e9\u9635\u63a7\u5236\uff08DMC\uff09"},{"location":"Motion-Planning/B-spline/","text":"B-spline \u00b6 \u9009\u62e9B-spline\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u5176\u57fa\u51fd\u6570(Basis function)\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u6027\u8d28. \u57fa\u51fd\u6570(Basis function) \u00b6 \u4e09\u4e2a\u5143\u7d20\uff1a knots\u8282\u70b9\uff0ccontrol point \u63a7\u5236\u70b9\u548cdegree U\u662f\u4e00\u4e2a\u9012\u589e\u6570\u5217\uff0c \\([u_0,u_1,u_2,...u_m]\\) ,\u5176\u4e2d\u7684u\u53eb\u505aknots\uff0cU\u79f0\u4f5cknot vector\uff0c\u76f8\u90bbu\u6784\u6210\u7684\u534a\u5f00\u533a\u95f4 \\([u_i,u_{i+1})\\) \u79f0\u4e3a\u7b2ci\u4e2aknot span. \u4e3a\u4e86\u5b9a\u4e49B-spline \u6211\u4eec\u8fd8\u9700\u5440\u5b9a\u4e00\u4e2a\u989d\u5916\u53c2\u6570p\uff0c\u5373\u57fa\u51fd\u6570\u7684degree\uff0c\u7b2ci\u4e2a\u7b2cp\u9636\u7684B-spline \u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\[ \\begin{align} N_{i,0}(u)&= \\begin{cases} 1,& u_i \\leq u < u_{i+1}\\\\ 0,&otherwise \\end{cases}\\\\ N_{i,p}(u)&=\\dfrac{u-u_i}{u_{p+i}-u_i}N_{i,p-1}(u)+\\dfrac{u_{p+i+1}-u}{u_{p+i+1}-u_i}N_{i+1,p-1}(u) \\end{align} \\] A simple example \\[ \\begin{align} u_0=0,&u_1=1,u_2=2,u_3=3,u_4=4\\\\ N_{0,0}(u)&=1(u_0 \\leq u < u_{1}\\Rightarrow 0 \\leq u < 1)\\\\ N_{1,0}(u)&=1(1 \\leq u < 2)\\\\ N_{2,0}(u)&=1(2 \\leq u < 3)\\\\ N_{3,0}(u)&=1(3 \\leq u < 4)\\\\ \\end{align} \\] \\[ \\begin{align} u_0=0,&u_1=1,u_2=2,u_3=3,u_4=4\\\\ N_{0,1}(u)&=(u-0)N_{0,0}(u)+(2-u)N_{1,0}(u)\\\\ N_{1,1}(u)&=(u-1)N_{1,0}(u)+(3-u)N_{2,0}(u)\\\\ N_{2,1}(u)&=(u-2)N_{2,0}(u)+(4-u)N_{3,0}(u)\\\\ \\end{align} \\]","title":"B spline"},{"location":"Motion-Planning/B-spline/#b-spline","text":"\u9009\u62e9B-spline\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u5176\u57fa\u51fd\u6570(Basis function)\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u6027\u8d28.","title":"B-spline"},{"location":"Motion-Planning/B-spline/#basis-function","text":"\u4e09\u4e2a\u5143\u7d20\uff1a knots\u8282\u70b9\uff0ccontrol point \u63a7\u5236\u70b9\u548cdegree U\u662f\u4e00\u4e2a\u9012\u589e\u6570\u5217\uff0c \\([u_0,u_1,u_2,...u_m]\\) ,\u5176\u4e2d\u7684u\u53eb\u505aknots\uff0cU\u79f0\u4f5cknot vector\uff0c\u76f8\u90bbu\u6784\u6210\u7684\u534a\u5f00\u533a\u95f4 \\([u_i,u_{i+1})\\) \u79f0\u4e3a\u7b2ci\u4e2aknot span. \u4e3a\u4e86\u5b9a\u4e49B-spline \u6211\u4eec\u8fd8\u9700\u5440\u5b9a\u4e00\u4e2a\u989d\u5916\u53c2\u6570p\uff0c\u5373\u57fa\u51fd\u6570\u7684degree\uff0c\u7b2ci\u4e2a\u7b2cp\u9636\u7684B-spline \u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\[ \\begin{align} N_{i,0}(u)&= \\begin{cases} 1,& u_i \\leq u < u_{i+1}\\\\ 0,&otherwise \\end{cases}\\\\ N_{i,p}(u)&=\\dfrac{u-u_i}{u_{p+i}-u_i}N_{i,p-1}(u)+\\dfrac{u_{p+i+1}-u}{u_{p+i+1}-u_i}N_{i+1,p-1}(u) \\end{align} \\] A simple example \\[ \\begin{align} u_0=0,&u_1=1,u_2=2,u_3=3,u_4=4\\\\ N_{0,0}(u)&=1(u_0 \\leq u < u_{1}\\Rightarrow 0 \\leq u < 1)\\\\ N_{1,0}(u)&=1(1 \\leq u < 2)\\\\ N_{2,0}(u)&=1(2 \\leq u < 3)\\\\ N_{3,0}(u)&=1(3 \\leq u < 4)\\\\ \\end{align} \\] \\[ \\begin{align} u_0=0,&u_1=1,u_2=2,u_3=3,u_4=4\\\\ N_{0,1}(u)&=(u-0)N_{0,0}(u)+(2-u)N_{1,0}(u)\\\\ N_{1,1}(u)&=(u-1)N_{1,0}(u)+(3-u)N_{2,0}(u)\\\\ N_{2,1}(u)&=(u-2)N_{2,0}(u)+(4-u)N_{3,0}(u)\\\\ \\end{align} \\]","title":"\u57fa\u51fd\u6570(Basis function)"},{"location":"Motion-Planning/BCH-approximation/","text":"BCH \u8fd1\u4f3c \u00b6 cot \u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00 \u00b6 \\[ cot(x)=x^{-1}-\\frac{1}{3}x-\\frac{1}{45}x^3-\\dots--\\frac{2^{2n}B_n}{(2n)!}x^{2n-1}-\\dots \\] \\[ B_n\u4e3a\u4f2f\u52aa\u5229\u6570\uff0cB_0=1,B_1=-0.5,B_2=1/6\uff0c\\dots \\] \u4f2f\u52aa\u5229\u6570\u53ef\u4ee5\u7531\u591a\u9879\u5f0f\u65b9\u7a0b\u89e3\u51fa\uff0c\u7b2c\u4e00\u9879\u4e3a1, \u7b2c\u4e8c\u9879\u4e3a0.5\u6216-0.5,\u4e4b\u540e\u6240\u6709\u5947\u6570\u9879(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u90fd\u4e3a0: \\[ \\sum_{i=0}^{n}C_{n+1}^iB_i=0 \\] \u674e\u4ee3\u6570\u5fae\u6270\u76f4\u89c2\u5199\u6cd5 \u00b6 \\[ \\begin{align} &\\text{exp}(\\Delta \\phi^{\\wedge})\\text{exp}(\\phi^{\\wedge})\\approx \\text{exp}((\\phi+J_l^{-1}\\Delta \\phi)^{\\wedge})\\\\ &\\text{exp}(\\phi^{\\wedge})\\text{exp}(\\Delta \\phi^{\\wedge})\\approx \\text{exp}((\\phi+J_r^{-1}\\Delta \\phi)^{\\wedge})\\\\ &\\text{\u53cd\u4e4b\uff1a}\\\\ &\\text{exp}((\\phi+\\Delta \\phi)^{\\wedge})\\approx\\text{exp}((J_l\\Delta \\phi)^{\\wedge})\\text{exp}(\\phi^{\\wedge}) \\\\ &\\text{exp}((\\phi+\\Delta \\phi)^{\\wedge})\\approx\\text{exp}(\\phi^{\\wedge})\\text{exp}((J_r\\Delta \\phi)^{\\wedge}) \\end{align} \\]","title":"BCH approximation"},{"location":"Motion-Planning/BCH-approximation/#bch","text":"","title":"BCH \u8fd1\u4f3c"},{"location":"Motion-Planning/BCH-approximation/#cot","text":"\\[ cot(x)=x^{-1}-\\frac{1}{3}x-\\frac{1}{45}x^3-\\dots--\\frac{2^{2n}B_n}{(2n)!}x^{2n-1}-\\dots \\] \\[ B_n\u4e3a\u4f2f\u52aa\u5229\u6570\uff0cB_0=1,B_1=-0.5,B_2=1/6\uff0c\\dots \\] \u4f2f\u52aa\u5229\u6570\u53ef\u4ee5\u7531\u591a\u9879\u5f0f\u65b9\u7a0b\u89e3\u51fa\uff0c\u7b2c\u4e00\u9879\u4e3a1, \u7b2c\u4e8c\u9879\u4e3a0.5\u6216-0.5,\u4e4b\u540e\u6240\u6709\u5947\u6570\u9879(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u90fd\u4e3a0: \\[ \\sum_{i=0}^{n}C_{n+1}^iB_i=0 \\]","title":"cot \u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00"},{"location":"Motion-Planning/BCH-approximation/#_1","text":"\\[ \\begin{align} &\\text{exp}(\\Delta \\phi^{\\wedge})\\text{exp}(\\phi^{\\wedge})\\approx \\text{exp}((\\phi+J_l^{-1}\\Delta \\phi)^{\\wedge})\\\\ &\\text{exp}(\\phi^{\\wedge})\\text{exp}(\\Delta \\phi^{\\wedge})\\approx \\text{exp}((\\phi+J_r^{-1}\\Delta \\phi)^{\\wedge})\\\\ &\\text{\u53cd\u4e4b\uff1a}\\\\ &\\text{exp}((\\phi+\\Delta \\phi)^{\\wedge})\\approx\\text{exp}((J_l\\Delta \\phi)^{\\wedge})\\text{exp}(\\phi^{\\wedge}) \\\\ &\\text{exp}((\\phi+\\Delta \\phi)^{\\wedge})\\approx\\text{exp}(\\phi^{\\wedge})\\text{exp}((J_r\\Delta \\phi)^{\\wedge}) \\end{align} \\]","title":"\u674e\u4ee3\u6570\u5fae\u6270\u76f4\u89c2\u5199\u6cd5"},{"location":"Motion-Planning/ICP-realization/","text":"PCL\u5e93 \u51fd\u6570\u53c2\u8003\uff1a pcl::PointCloud< PointT > \u70b9\u4e91\u53d8\u6362: pcl::transformPointCloud(cloud_in, cloud_out, transform); KDtree\u641c\u7d22: nearestKSearch (Searchpoint, k, k_indices, k_sqr_distances);","title":"ICP realization"},{"location":"Motion-Planning/Polynomial-Trajectory-Planning-for-Aggressive-Quadrotor-Flight/","text":"Some Problem \u00b6 PLUGINLIB_DECLARE_CLASS(so3_control, SO3ControlNodelet, SO3ControlNodelet, nodelet::Nodelet); \u6539\u4e3a PLUGINLIB_EXPORT_CLASS(SO3ControlNodelet, nodelet::Nodelet); \u6d41\u7a0b \u00b6 _exec_timer = nh . createTimer ( ros :: Duration ( 0.01 ), execCallback ); _odom_sub = nh . subscribe ( \"odom\" , 10 , rcvOdomCallback ); _map_sub = nh . subscribe ( \"local_pointcloud\" , 1 , rcvPointCloudCallBack ); _pts_sub = nh . subscribe ( \"waypoints\" , 1 , rcvWaypointsCallBack ); _traj_pub = nh . advertise < quadrotor_msgs :: PolynomialTrajectory > ( \"trajectory\" , 50 ); _traj_vis_pub = nh . advertise < visualization_msgs :: Marker > ( \"vis_trajectory\" , 1 ); _path_vis_pub = nh . advertise < visualization_msgs :: Marker > ( \"vis_path\" , 1 ); vector \u622a\u53d6 vector < int >:: const_iterator First = Arrs . begin (); vector < int >:: const_iterator Second = Arrs . begin (); //\u521d\u59cb\u5316\u622a\u53d6 vector < int > Arrs2 ( First , Second ); //assign()\u51fd\u6570\u622a\u53d6 vector < int > Arr2 ; Arr2 . assign ( First , Second ); function DouglasPeucker ( PointList [], epsilon ) // Find the point with the maximum distance dmax = 0 index = 0 end = length ( PointList ) for i = 2 to ( end - 1 ) { d = perpendicularDistance ( PointList [ i ], Line ( PointList [ 1 ], PointList [ end ])) if ( d > dmax ) { index = i dmax = d } } ResultList [] = empty ; // If max distance is greater than epsilon, recursively simplify if ( dmax > epsilon ) { // Recursive call recResults1 [] = DouglasPeucker ( PointList [ 1. .. index ], epsilon ) recResults2 [] = DouglasPeucker ( PointList [ index ... end ], epsilon ) // Build the result list ResultList [] = { recResults1 [ 1. .. length ( recResults1 ) - 1 ], recResults2 [ 1. .. length ( recResults2 )]} } else { ResultList [] = { PointList [ 1 ], PointList [ end ]} } // Return the result return ResultList [] end \u65f6\u95f4\u5206\u914d \u00b6 \u4f7f\u7528\u68af\u5f62\u901f\u5ea6\u65b9\u6848\uff08trapezoidal velocity profile\uff09 \u7ed9\u5b9a\u6700\u5927\u901f\u5ea6\uff0c\u6700\u5927\u52a0\u901f\u5ea6\u548c\u8ddd\u79bb\uff0c\u53ef\u4ee5\u89e3\u5f97\u6700\u5c0f\u65f6\u95f4\u3002 \u8fbe\u5230\u6700\u5927\u901f\u5ea6\u5e76\u51cf\u901f\u52300\u6240\u9700\u8ddd\u79bb\uff1a \\(s_{min}=2 \\times \\frac{1}{2}a_{max}\\dfrac{v^2_{max}}{a^2_{max}}=\\dfrac{v^2_{max}}{a_{max}}\\) 1. \u4e24\u70b9\u8ddd\u79bb\u4e0d\u591f\u8fbe\u5230\u6700\u5927\u901f\u5ea6\u524d\u5e76\u51cf\u901f\u52300: \\(a_{max}t^2_{half}=s\\Rightarrow t_{half}=\\sqrt{\\dfrac{s}{a_{max}}}\\Rightarrow t = 2 t_{half}\\) 2. \u4e24\u70b9\u8ddd\u79bb\u8db3\u591f\u8fbe\u5230\u6700\u5927\u901f\u5ea6\u524d\u5e76\u51cf\u901f\u52300: \\(t=2\\dfrac{v_{max}}{a_{max}}+\\dfrac{s-s_{min}}{v_{max}}\\) const double t = vel / acc ; const double d = 0.5 * acc * t * t ; if ( dist < d + d ){ return 2.0 * sqrt ( dist / acc ); } else { return 2.0 * t + ( dist - 2.0 * d ) / vel ; } minimum snap \u89e3\u7b97 \u00b6 \u7ed9\u5b9an-1\u6bb5\u8f68\u8ff9\u4e2d\u7684n\u4e2a\u5fc5\u7ecf\u70b9\uff0c\u4ee5\u53can-1\u6bb5\u7684\u65f6\u95f4 BVP\u6c42\u89e3 state \\(\\bm{s}=[\\bm{p},\\bm{v},\\bm{a}]^\\top\\) , trajectory \\(\\bm{s}(t)=\\bm{M}(t)\\bm{c}\\) , in which \\(\\bm{c}=[\\bm{c_0},\\bm{c_1},\\bm{c_2},\\bm{c_3},\\bm{c_4},\\bm{c_5}]^\\top,\\bm{c_i}=[c_{ix},c_{iy},c_{iz}]\\) \\[ \\bm{M}(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3 \\end{bmatrix} \\] Given \\(\\bm{s}_0,\\bm{s}_T\\) , \\[ \\begin{bmatrix} \\bm{s}(0)\\\\ \\bm{s}(T) \\end{bmatrix}_{6\\times 3}= \\begin{bmatrix} \\bm{M}(0)\\\\ \\bm{M}(T) \\end{bmatrix}_{6\\times 6} \\begin{bmatrix} \\bm{c}_0 \\end{bmatrix}_{6\\times 3} \\Rightarrow \\begin{bmatrix} \\bm{c}_0 \\end{bmatrix} = \\begin{bmatrix} \\bm{M}(0)\\\\ \\bm{M}(T) \\end{bmatrix}^{-1} \\begin{bmatrix} \\bm{s}(0)\\\\ \\bm{s}(T) \\end{bmatrix} \\] BIVP\u6c42\u89e3 state \\(\\bm{s}=[\\bm{p},\\bm{v},\\bm{a}]^\\top\\) ,intermediate state \\(\\bm{s}_i=[\\bm{p},\\bm{v},\\bm{a},\\bm{j},\\bm{s}]^\\top\\) trajectory \\(\\bm{s}(t)=\\bm{M}(t)\\bm{c}\\) , in which \\(\\bm{c}=[\\bm{c_0},\\bm{c_1},\\bm{c_2},\\bm{c_3},\\bm{c_4},\\bm{c_5}]^\\top\\) Boundary M, $$ \\bm{M}(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3 \\end{bmatrix} $$ Intermediate M, $$ \\bm{M}_i(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3\\ 0 & 0 & 0 & 6 & 24t & 60t^2\\ 0 & 0 & 0 & 0 & 24 & 120t \\end{bmatrix} $$ Intermediate D, $$ \\bm{D}_i(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5 \\end{bmatrix} $$ Given \\(\\bm{s}_{start},\\bm{s}_{end}\\) , with \\(n_{int}\\) intermediate position landmarks \\(\\bm{s}_i\\) \\[ \\begin{align} \\bm{s}_{start}&=\\bm{M}(0)\\bm{c}_0\\\\ &\\vdots\\\\ \\underbrace{ \\begin{bmatrix} \\bm{p}_i\\\\ \\bm{0} \\end{bmatrix}}_{\\bm{b}_i} &= \\begin{bmatrix} \\bm{0}&{\\color{red}\\bm{D}_i(0)}\\\\ -\\bm{M}_i(T_i)&\\bm{M}_i(0) \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix}=\\begin{bmatrix} {\\color{blue}\\bm{D}_i(T_{i-1})}&\\bm{0}\\\\ -\\bm{M}_i(T_i)&\\bm{M}_i(0) \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix}=\\begin{bmatrix} \\bm{E}_i&\\bm{F}_i \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix} \\\\ &\\vdots\\\\ \\bm{s}_{end}&=\\bm{M}(T_{n_{int}})\\bm{c}_{end}\\\\ \\underbrace{ \\begin{bmatrix} \\bm{c}_0\\\\ \\bm{c}_1\\\\ \\bm{c}_2\\\\ \\vdots\\\\ \\bm{c}_{n_{int}} \\end{bmatrix} }_{\\bm{c}} &= \\underbrace{ \\begin{bmatrix} \\bm{M}(0)&\\bm{0}&\\bm{0}&\\dots&\\bm{0}\\\\ \\bm{E}_1&\\bm{F}_1&\\bm{0}&\\dots&\\bm{0}\\\\ \\bm{0}&\\bm{E}_2&\\bm{F}_2&\\dots&\\bm{0}\\\\ \\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\ \\bm{0}&\\bm{0}&\\bm{0}&\\dots&\\bm{F}_{n_{int}}\\\\ \\bm{0}&\\bm{0}&\\bm{0}&\\dots&\\bm{M}(T_{n_{int}}) \\end{bmatrix}^{-1}}_{A^{-1}} \\underbrace{ \\begin{bmatrix} \\bm{s}_{start}\\\\ \\bm{b}_1\\\\ \\bm{b}_2\\\\ \\vdots\\\\ \\bm{b}_{n_{int}}\\\\ \\bm{s}_{end} \\end{bmatrix} }_{\\bm{b}}\\\\ \\bm{c}_{6N\\times 3}&=\\bm{A}^{-1}_{6N\\times 6N}\\bm{b}_{6N\\times 3}\\quad, N=n_{int}+1 \\end{align} \\]","title":"Polynomial Trajectory Planning for Aggressive Quadrotor Flight"},{"location":"Motion-Planning/Polynomial-Trajectory-Planning-for-Aggressive-Quadrotor-Flight/#some-problem","text":"PLUGINLIB_DECLARE_CLASS(so3_control, SO3ControlNodelet, SO3ControlNodelet, nodelet::Nodelet); \u6539\u4e3a PLUGINLIB_EXPORT_CLASS(SO3ControlNodelet, nodelet::Nodelet);","title":"Some Problem"},{"location":"Motion-Planning/Polynomial-Trajectory-Planning-for-Aggressive-Quadrotor-Flight/#_1","text":"_exec_timer = nh . createTimer ( ros :: Duration ( 0.01 ), execCallback ); _odom_sub = nh . subscribe ( \"odom\" , 10 , rcvOdomCallback ); _map_sub = nh . subscribe ( \"local_pointcloud\" , 1 , rcvPointCloudCallBack ); _pts_sub = nh . subscribe ( \"waypoints\" , 1 , rcvWaypointsCallBack ); _traj_pub = nh . advertise < quadrotor_msgs :: PolynomialTrajectory > ( \"trajectory\" , 50 ); _traj_vis_pub = nh . advertise < visualization_msgs :: Marker > ( \"vis_trajectory\" , 1 ); _path_vis_pub = nh . advertise < visualization_msgs :: Marker > ( \"vis_path\" , 1 ); vector \u622a\u53d6 vector < int >:: const_iterator First = Arrs . begin (); vector < int >:: const_iterator Second = Arrs . begin (); //\u521d\u59cb\u5316\u622a\u53d6 vector < int > Arrs2 ( First , Second ); //assign()\u51fd\u6570\u622a\u53d6 vector < int > Arr2 ; Arr2 . assign ( First , Second ); function DouglasPeucker ( PointList [], epsilon ) // Find the point with the maximum distance dmax = 0 index = 0 end = length ( PointList ) for i = 2 to ( end - 1 ) { d = perpendicularDistance ( PointList [ i ], Line ( PointList [ 1 ], PointList [ end ])) if ( d > dmax ) { index = i dmax = d } } ResultList [] = empty ; // If max distance is greater than epsilon, recursively simplify if ( dmax > epsilon ) { // Recursive call recResults1 [] = DouglasPeucker ( PointList [ 1. .. index ], epsilon ) recResults2 [] = DouglasPeucker ( PointList [ index ... end ], epsilon ) // Build the result list ResultList [] = { recResults1 [ 1. .. length ( recResults1 ) - 1 ], recResults2 [ 1. .. length ( recResults2 )]} } else { ResultList [] = { PointList [ 1 ], PointList [ end ]} } // Return the result return ResultList [] end","title":"\u6d41\u7a0b"},{"location":"Motion-Planning/Polynomial-Trajectory-Planning-for-Aggressive-Quadrotor-Flight/#_2","text":"\u4f7f\u7528\u68af\u5f62\u901f\u5ea6\u65b9\u6848\uff08trapezoidal velocity profile\uff09 \u7ed9\u5b9a\u6700\u5927\u901f\u5ea6\uff0c\u6700\u5927\u52a0\u901f\u5ea6\u548c\u8ddd\u79bb\uff0c\u53ef\u4ee5\u89e3\u5f97\u6700\u5c0f\u65f6\u95f4\u3002 \u8fbe\u5230\u6700\u5927\u901f\u5ea6\u5e76\u51cf\u901f\u52300\u6240\u9700\u8ddd\u79bb\uff1a \\(s_{min}=2 \\times \\frac{1}{2}a_{max}\\dfrac{v^2_{max}}{a^2_{max}}=\\dfrac{v^2_{max}}{a_{max}}\\) 1. \u4e24\u70b9\u8ddd\u79bb\u4e0d\u591f\u8fbe\u5230\u6700\u5927\u901f\u5ea6\u524d\u5e76\u51cf\u901f\u52300: \\(a_{max}t^2_{half}=s\\Rightarrow t_{half}=\\sqrt{\\dfrac{s}{a_{max}}}\\Rightarrow t = 2 t_{half}\\) 2. \u4e24\u70b9\u8ddd\u79bb\u8db3\u591f\u8fbe\u5230\u6700\u5927\u901f\u5ea6\u524d\u5e76\u51cf\u901f\u52300: \\(t=2\\dfrac{v_{max}}{a_{max}}+\\dfrac{s-s_{min}}{v_{max}}\\) const double t = vel / acc ; const double d = 0.5 * acc * t * t ; if ( dist < d + d ){ return 2.0 * sqrt ( dist / acc ); } else { return 2.0 * t + ( dist - 2.0 * d ) / vel ; }","title":"\u65f6\u95f4\u5206\u914d"},{"location":"Motion-Planning/Polynomial-Trajectory-Planning-for-Aggressive-Quadrotor-Flight/#minimum-snap","text":"\u7ed9\u5b9an-1\u6bb5\u8f68\u8ff9\u4e2d\u7684n\u4e2a\u5fc5\u7ecf\u70b9\uff0c\u4ee5\u53can-1\u6bb5\u7684\u65f6\u95f4 BVP\u6c42\u89e3 state \\(\\bm{s}=[\\bm{p},\\bm{v},\\bm{a}]^\\top\\) , trajectory \\(\\bm{s}(t)=\\bm{M}(t)\\bm{c}\\) , in which \\(\\bm{c}=[\\bm{c_0},\\bm{c_1},\\bm{c_2},\\bm{c_3},\\bm{c_4},\\bm{c_5}]^\\top,\\bm{c_i}=[c_{ix},c_{iy},c_{iz}]\\) \\[ \\bm{M}(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3 \\end{bmatrix} \\] Given \\(\\bm{s}_0,\\bm{s}_T\\) , \\[ \\begin{bmatrix} \\bm{s}(0)\\\\ \\bm{s}(T) \\end{bmatrix}_{6\\times 3}= \\begin{bmatrix} \\bm{M}(0)\\\\ \\bm{M}(T) \\end{bmatrix}_{6\\times 6} \\begin{bmatrix} \\bm{c}_0 \\end{bmatrix}_{6\\times 3} \\Rightarrow \\begin{bmatrix} \\bm{c}_0 \\end{bmatrix} = \\begin{bmatrix} \\bm{M}(0)\\\\ \\bm{M}(T) \\end{bmatrix}^{-1} \\begin{bmatrix} \\bm{s}(0)\\\\ \\bm{s}(T) \\end{bmatrix} \\] BIVP\u6c42\u89e3 state \\(\\bm{s}=[\\bm{p},\\bm{v},\\bm{a}]^\\top\\) ,intermediate state \\(\\bm{s}_i=[\\bm{p},\\bm{v},\\bm{a},\\bm{j},\\bm{s}]^\\top\\) trajectory \\(\\bm{s}(t)=\\bm{M}(t)\\bm{c}\\) , in which \\(\\bm{c}=[\\bm{c_0},\\bm{c_1},\\bm{c_2},\\bm{c_3},\\bm{c_4},\\bm{c_5}]^\\top\\) Boundary M, $$ \\bm{M}(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3 \\end{bmatrix} $$ Intermediate M, $$ \\bm{M}_i(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5\\ 0 & 1 & 2t & 3t^2 & 4t^3 & 5t^4\\ 0 & 0 & 2 & 6t & 12t^2 & 20t^3\\ 0 & 0 & 0 & 6 & 24t & 60t^2\\ 0 & 0 & 0 & 0 & 24 & 120t \\end{bmatrix} $$ Intermediate D, $$ \\bm{D}_i(t)= \\begin{bmatrix} 1 & t & t^2 & t^3 & t^4 & t^5 \\end{bmatrix} $$ Given \\(\\bm{s}_{start},\\bm{s}_{end}\\) , with \\(n_{int}\\) intermediate position landmarks \\(\\bm{s}_i\\) \\[ \\begin{align} \\bm{s}_{start}&=\\bm{M}(0)\\bm{c}_0\\\\ &\\vdots\\\\ \\underbrace{ \\begin{bmatrix} \\bm{p}_i\\\\ \\bm{0} \\end{bmatrix}}_{\\bm{b}_i} &= \\begin{bmatrix} \\bm{0}&{\\color{red}\\bm{D}_i(0)}\\\\ -\\bm{M}_i(T_i)&\\bm{M}_i(0) \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix}=\\begin{bmatrix} {\\color{blue}\\bm{D}_i(T_{i-1})}&\\bm{0}\\\\ -\\bm{M}_i(T_i)&\\bm{M}_i(0) \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix}=\\begin{bmatrix} \\bm{E}_i&\\bm{F}_i \\end{bmatrix} \\begin{bmatrix} \\bm{c}_{i-1}\\\\ \\bm{c}_i \\end{bmatrix} \\\\ &\\vdots\\\\ \\bm{s}_{end}&=\\bm{M}(T_{n_{int}})\\bm{c}_{end}\\\\ \\underbrace{ \\begin{bmatrix} \\bm{c}_0\\\\ \\bm{c}_1\\\\ \\bm{c}_2\\\\ \\vdots\\\\ \\bm{c}_{n_{int}} \\end{bmatrix} }_{\\bm{c}} &= \\underbrace{ \\begin{bmatrix} \\bm{M}(0)&\\bm{0}&\\bm{0}&\\dots&\\bm{0}\\\\ \\bm{E}_1&\\bm{F}_1&\\bm{0}&\\dots&\\bm{0}\\\\ \\bm{0}&\\bm{E}_2&\\bm{F}_2&\\dots&\\bm{0}\\\\ \\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\ \\bm{0}&\\bm{0}&\\bm{0}&\\dots&\\bm{F}_{n_{int}}\\\\ \\bm{0}&\\bm{0}&\\bm{0}&\\dots&\\bm{M}(T_{n_{int}}) \\end{bmatrix}^{-1}}_{A^{-1}} \\underbrace{ \\begin{bmatrix} \\bm{s}_{start}\\\\ \\bm{b}_1\\\\ \\bm{b}_2\\\\ \\vdots\\\\ \\bm{b}_{n_{int}}\\\\ \\bm{s}_{end} \\end{bmatrix} }_{\\bm{b}}\\\\ \\bm{c}_{6N\\times 3}&=\\bm{A}^{-1}_{6N\\times 6N}\\bm{b}_{6N\\times 3}\\quad, N=n_{int}+1 \\end{align} \\]","title":"minimum snap \u89e3\u7b97"},{"location":"Motion-Planning/matrix_diff/","text":"\u51fd\u6570\u5bfc\u6570 \u00b6 x\u4e3a\u6807\u91cf \u00b6 F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a \u00b6 \\[ F=\\begin{Bmatrix} F_1(x)\\\\F_2(x)\\\\\\vdots\\\\F_n(x) \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial F_1}{\\partial X}\\\\\\frac{\\partial F_2}{\\partial X}\\\\\\vdots\\\\\\frac{\\partial F_n}{\\partial X} \\end{Bmatrix} \\] F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a \u00b6 \\[ F=\\begin{Bmatrix} f_{11}&\\dots&f_{1n}\\\\\\vdots&\\vdots&\\vdots\\\\f_{m1}&\\dots&f_{mn} \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial F_{11}}{\\partial X}&\\dots&\\frac{\\partial F_{1n}}{\\partial X}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F_{m1}}{\\partial X}&\\dots&\\frac{\\partial F_{mn}}{\\partial X} \\end{Bmatrix} \\] \u6c42\u5bfc\u6cd5\u5219\uff1a \u00b6 \\[ \\frac{d[F_1(x)\\pm F_2(x)]}{dx}=\\frac{dF_1(x)}{dx}\\pm \\frac{dF_2(x)}{dx}\\\\ \\text{F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a}\\frac{d[F_1^\\top(x) F_2(x)]}{dx}=\\frac{dF_1^\\top(x)}{dx}F_2(x)+ F_1^\\top(x)\\frac{dF_2(x)}{dx}\\\\ \\text{F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a}\\frac{d[F_1(x) F_2(x)]}{dx}=\\frac{dF_1(x)}{dx}F_2(x)+ F_1(x)\\frac{dF_2(x)}{dx} \\] x\u4e3an\u7ef4\u5411\u91cf \u00b6 F\u6807\u91cf\u51fd\u6570 \u00b6 \u6807\u91cf y \u5bf9 n \u7ef4\u5217\u5411\u91cf x (nx1) \u6c42\u5bfc\uff0c\u5176\u7ed3\u679c\u8fd8\u662f\u4e00\u4e2a *n*\u7ef4\u5217\u5411\u91cf\uff1a \u6807\u91cf y \u5bf9 n \u7ef4\u884c\u5411\u91cf x (1xn) \u6c42\u5bfc\uff0c\u5176\u7ed3\u679c\u8fd8\u662f\u4e00\u4e2a *n*\u7ef4\u884c\u5411\u91cf **\u5f62\u72b6\u89c4\u5219\uff1a**\u6807\u91cf y \u5bf9\u5411\u91cf x \u7684\u6bcf\u4e2a\u5143\u7d20\u6c42\u5bfc\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u6c42\u5bfc\u7ed3\u679c\u6309\u5411\u91cf x \u7684\u5f62\u72b6\u6392\u5217\u3002 F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a \u00b6 \\[ F=\\begin{Bmatrix} F_1(x)\\\\F_2(x)\\\\\\vdots\\\\F_m(x) \\end{Bmatrix} \\qquad x=\\begin{Bmatrix} x_1\\\\x_2\\\\\\vdots\\\\x_n \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_1}\\\\\\frac{\\partial F}{\\partial x_2}\\\\\\vdots\\\\\\frac{\\partial F}{\\partial x_n} \\end{Bmatrix}= \\begin{Bmatrix} \\frac{\\partial F_{1}}{\\partial x_1}&\\dots&\\frac{\\partial F_{1}}{\\partial x_1}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F_{m}}{\\partial x_n}&\\dots&\\frac{\\partial F_{m}}{\\partial x_n} \\end{Bmatrix} \\] \u540c\u65f6, \u6709: $$ \\frac{\\partial{F}}{\\partial{X}}=\\frac{\\partial{F}}{\\partial{X}^\\top}\\ \\frac{\\partial{F^\\top}}{\\partial{X}}= \\begin{Bmatrix} \\frac{\\partial F^\\top}{\\partial x_1}&\\frac{\\partial F^\\top}{\\partial x_2}&\\dots&\\frac{\\partial F^\\top}{\\partial x_n} \\end{Bmatrix}^\\top= \\begin{Bmatrix} \\frac{\\partial F_{1}}{\\partial x_1}&\\dots&\\frac{\\partial F_{m}}{\\partial x_1}\\\\vdots&\\vdots&\\vdots\\\\frac{\\partial F_{1}}{\\partial x_n}&\\dots&\\frac{\\partial F_{m}}{\\partial x_n} \\end{Bmatrix}=[\\frac{\\partial{F}}{\\partial{X \\top}}] \\top $$ 1\uff09\u5411\u91cf y \u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u6807\u91cf\uff0c\u5148\u505a y \u7684\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5411\u91cf *x*\u6c42\u5bfc\uff0c\u6309\u7167\u6807\u91cf\u5bf9\u5411\u91cf\u7684\u6c42\u5bfc\u89c4\u5219\u8fdb\u884c\u3002 2\uff09\u7b2c\u4e00\u6b65\u505a\u597d\u540e\uff0c\u5c06\u6c42\u5bfc\u7ed3\u679c\u6309 y \u7684\u5f62\u72b6\u6392\u5217\uff0c \u5373ny x nx\u3002 \u94fe\u5f0f\u6cd5\u5219 \u00b6 \u5411\u91cf\u5bf9\u5411\u91cf\u7684\u94fe\u5f0f\u6cd5\u5219\u4e0e\u666e\u901a\u6807\u91cf\u5bf9\u6807\u91cf\u7684\u76f8\u540c\uff1a $$ (\\frac{\\partial \\mathbf{z} {p\\times1}}{\\partial \\mathbf{x} }) {p\\times m}=(\\frac{\\partial \\mathbf{z}}{\\partial \\mathbf{y}}) (\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}}) {n\\times m} $$ \u6807\u91cf\u5bf9\u5411\u91cf\u7684\u94fe\u5f0f\u6cd5\u5219\u9700\u8981\u53d6\u4e00\u4e2a\u8f6c\u7f6e\uff1a $$ (\\frac{\\partial z }{\\partial \\mathbf{x} {m\\times1}}) =(\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}} {n\\times m})^\\top (\\frac{\\partial z}{\\partial \\mathbf{y}}) {n\\times 1}\\ (\\frac{\\partial z }{\\partial \\mathbf{a} {a\\times1}}) =(\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}} {y\\times x} \\dots \\frac{\\partial \\mathbf{c}}{\\partial \\mathbf{b}} \\frac{\\partial \\mathbf{b}}{\\partial \\mathbf{a}} {b\\times a} )^\\top (\\frac{\\partial z}{\\partial \\mathbf{y}})_{y\\times 1} $$ F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a \u00b6 \\[ F=\\{{f_{ij}}\\}_{nl}\\\\ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_1}\\\\\\frac{\\partial F}{\\partial x_2}\\\\\\vdots\\\\\\frac{\\partial F}{\\partial x_n} \\end{Bmatrix}_{mn\\times l} \\] X\u4e3aaxb\u7ef4\u77e9\u9635 \u00b6 \\[ X=\\begin{Bmatrix} x_{11}&\\dots&x_{1b}\\\\\\vdots&\\vdots&\\vdots\\\\x_{a1}&\\dots&x_{ab} \\end{Bmatrix} \\] F\u4e3a\u6807\u91cf\u51fd\u6570 \u00b6 \\[ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_{11}}&\\dots&\\frac{\\partial F}{\\partial x_{1b}}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F}{\\partial x_{a1}}&\\dots&\\frac{\\partial F}{\\partial x_{ab}} \\end{Bmatrix} \\] F\u4e3a\u51fd\u6570\u5411\u91cf \u00b6 \\[ F=\\{{f_{i}}\\}_{m\\times 1}\\\\ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F_1}{\\partial x}\\\\\\frac{\\partial F_2}{\\partial x}\\\\\\vdots\\\\\\frac{\\partial F_m}{\\partial x} \\end{Bmatrix}_{ma\\times b} \\] F\u4e3a\u51fd\u6570\u77e9\u9635 \u00b6 \\[ F=\\begin{Bmatrix} f_{11}&\\dots&f_{1n}\\\\\\vdots&\\vdots&\\vdots\\\\f_{m1}&\\dots&f_{mn} \\end{Bmatrix}\\\\ \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial f_{11}}{\\partial X}&\\dots&\\frac{\\partial f_{1n}}{\\partial X}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial f_{m1}}{\\partial X}&\\dots&\\frac{\\partial f_{mn}}{\\partial X} \\end{Bmatrix}_{am\\times bn} \\] \u590d\u5408\u51fd\u6570\u5bfc\u6570 \u00b6 x,y,z \u4e3a\u5411\u91cf\uff0ct\u4e3a\u6807\u91cf\uff0cf\u4e3a\u6807\u91cf\u51fd\u6570 z=z(y), y=y(t) \\[ \\frac{dz}{dt}=\\frac{dz}{dy^\\top}\\frac{dy}{dt} \\] z=z(y), y=y(x) $$ \\frac{dz}{dx}=\\frac{dz}{dx \\top}=\\frac{dz}{dy \\top}\\frac{dy}{dx^\\top}\\ \\frac{dz \\top}{dx}=\\frac{dy \\top}{dx}\\frac{dz^\\top}{dy} $$ z=z(y,x), y=y(x) $$ \\frac{dz}{dx}=\\frac{dz}{dx \\top}+\\frac{dz}{dy \\top}\\frac{dy}{dx^\\top}\\ \\frac{dz \\top}{dx}=\\frac{dy \\top}{dx}\\frac{dz^\\top}{dy} $$ ### \u6cf0\u52d2\u5c55\u5f00 x,u \u4e3a\u5411\u91cf, H(x,u)\u4e3a\u6807\u91cf\u51fd\u6570, \u5728(x0,u0)\u5904\u5c55\u5f00 $$ H(x,u)=H(x_0,u_0)+\\left(\\frac{\\partial H}{\\partial x}\\right)^\\top \\delta x + \\left(\\frac{\\partial H}{\\partial u}\\right)^\\top \\delta u + \\frac{1}{2} \\begin{bmatrix} \\delta x^\\top&\\delta u^\\top \\end{bmatrix} \\begin{bmatrix} \\frac{\\partial^2 H}{\\partial x^2} & \\frac{\\partial^2 H}{\\partial x \\partial u}\\ \\frac{\\partial^2 H}{\\partial u \\partial x} & \\frac{\\partial^2 H}{\\partial u^2} \\end{bmatrix}\\begin{bmatrix} \\delta x\\\\delta u \\end{bmatrix}\\ \\delta x=x-x_0 \\quad \\delta u=u-u_0\\ \\frac{\\partial^2 H}{\\partial u \\partial x}=\\left(\\frac{\\partial^2 H}{\\partial x \\partial u}\\right)^\\top $$ F(x,u)\u4e3a\u5411\u91cf\u51fd\u6570, \u5728(x0,u0)\u5904\u5c55\u5f00 $$ F(x,u)=F(x_0,u_0)+\\frac{\\partial F}{\\partial x} \\delta x +\\frac{\\partial F}{\\partial u} \\delta u $$","title":"Matrix diff"},{"location":"Motion-Planning/matrix_diff/#_1","text":"","title":"\u51fd\u6570\u5bfc\u6570"},{"location":"Motion-Planning/matrix_diff/#x","text":"","title":"x\u4e3a\u6807\u91cf"},{"location":"Motion-Planning/matrix_diff/#f","text":"\\[ F=\\begin{Bmatrix} F_1(x)\\\\F_2(x)\\\\\\vdots\\\\F_n(x) \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial F_1}{\\partial X}\\\\\\frac{\\partial F_2}{\\partial X}\\\\\\vdots\\\\\\frac{\\partial F_n}{\\partial X} \\end{Bmatrix} \\]","title":"F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a"},{"location":"Motion-Planning/matrix_diff/#f_1","text":"\\[ F=\\begin{Bmatrix} f_{11}&\\dots&f_{1n}\\\\\\vdots&\\vdots&\\vdots\\\\f_{m1}&\\dots&f_{mn} \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial F_{11}}{\\partial X}&\\dots&\\frac{\\partial F_{1n}}{\\partial X}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F_{m1}}{\\partial X}&\\dots&\\frac{\\partial F_{mn}}{\\partial X} \\end{Bmatrix} \\]","title":"F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a"},{"location":"Motion-Planning/matrix_diff/#_2","text":"\\[ \\frac{d[F_1(x)\\pm F_2(x)]}{dx}=\\frac{dF_1(x)}{dx}\\pm \\frac{dF_2(x)}{dx}\\\\ \\text{F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a}\\frac{d[F_1^\\top(x) F_2(x)]}{dx}=\\frac{dF_1^\\top(x)}{dx}F_2(x)+ F_1^\\top(x)\\frac{dF_2(x)}{dx}\\\\ \\text{F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a}\\frac{d[F_1(x) F_2(x)]}{dx}=\\frac{dF_1(x)}{dx}F_2(x)+ F_1(x)\\frac{dF_2(x)}{dx} \\]","title":"\u6c42\u5bfc\u6cd5\u5219\uff1a"},{"location":"Motion-Planning/matrix_diff/#xn","text":"","title":"x\u4e3an\u7ef4\u5411\u91cf"},{"location":"Motion-Planning/matrix_diff/#f_2","text":"\u6807\u91cf y \u5bf9 n \u7ef4\u5217\u5411\u91cf x (nx1) \u6c42\u5bfc\uff0c\u5176\u7ed3\u679c\u8fd8\u662f\u4e00\u4e2a *n*\u7ef4\u5217\u5411\u91cf\uff1a \u6807\u91cf y \u5bf9 n \u7ef4\u884c\u5411\u91cf x (1xn) \u6c42\u5bfc\uff0c\u5176\u7ed3\u679c\u8fd8\u662f\u4e00\u4e2a *n*\u7ef4\u884c\u5411\u91cf **\u5f62\u72b6\u89c4\u5219\uff1a**\u6807\u91cf y \u5bf9\u5411\u91cf x \u7684\u6bcf\u4e2a\u5143\u7d20\u6c42\u5bfc\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u6c42\u5bfc\u7ed3\u679c\u6309\u5411\u91cf x \u7684\u5f62\u72b6\u6392\u5217\u3002","title":"F\u6807\u91cf\u51fd\u6570"},{"location":"Motion-Planning/matrix_diff/#f_3","text":"\\[ F=\\begin{Bmatrix} F_1(x)\\\\F_2(x)\\\\\\vdots\\\\F_m(x) \\end{Bmatrix} \\qquad x=\\begin{Bmatrix} x_1\\\\x_2\\\\\\vdots\\\\x_n \\end{Bmatrix} \\qquad \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_1}\\\\\\frac{\\partial F}{\\partial x_2}\\\\\\vdots\\\\\\frac{\\partial F}{\\partial x_n} \\end{Bmatrix}= \\begin{Bmatrix} \\frac{\\partial F_{1}}{\\partial x_1}&\\dots&\\frac{\\partial F_{1}}{\\partial x_1}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F_{m}}{\\partial x_n}&\\dots&\\frac{\\partial F_{m}}{\\partial x_n} \\end{Bmatrix} \\] \u540c\u65f6, \u6709: $$ \\frac{\\partial{F}}{\\partial{X}}=\\frac{\\partial{F}}{\\partial{X}^\\top}\\ \\frac{\\partial{F^\\top}}{\\partial{X}}= \\begin{Bmatrix} \\frac{\\partial F^\\top}{\\partial x_1}&\\frac{\\partial F^\\top}{\\partial x_2}&\\dots&\\frac{\\partial F^\\top}{\\partial x_n} \\end{Bmatrix}^\\top= \\begin{Bmatrix} \\frac{\\partial F_{1}}{\\partial x_1}&\\dots&\\frac{\\partial F_{m}}{\\partial x_1}\\\\vdots&\\vdots&\\vdots\\\\frac{\\partial F_{1}}{\\partial x_n}&\\dots&\\frac{\\partial F_{m}}{\\partial x_n} \\end{Bmatrix}=[\\frac{\\partial{F}}{\\partial{X \\top}}] \\top $$ 1\uff09\u5411\u91cf y \u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u6807\u91cf\uff0c\u5148\u505a y \u7684\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5411\u91cf *x*\u6c42\u5bfc\uff0c\u6309\u7167\u6807\u91cf\u5bf9\u5411\u91cf\u7684\u6c42\u5bfc\u89c4\u5219\u8fdb\u884c\u3002 2\uff09\u7b2c\u4e00\u6b65\u505a\u597d\u540e\uff0c\u5c06\u6c42\u5bfc\u7ed3\u679c\u6309 y \u7684\u5f62\u72b6\u6392\u5217\uff0c \u5373ny x nx\u3002","title":"F\u4e3a\u51fd\u6570\u5411\u91cf\uff1a"},{"location":"Motion-Planning/matrix_diff/#_3","text":"\u5411\u91cf\u5bf9\u5411\u91cf\u7684\u94fe\u5f0f\u6cd5\u5219\u4e0e\u666e\u901a\u6807\u91cf\u5bf9\u6807\u91cf\u7684\u76f8\u540c\uff1a $$ (\\frac{\\partial \\mathbf{z} {p\\times1}}{\\partial \\mathbf{x} }) {p\\times m}=(\\frac{\\partial \\mathbf{z}}{\\partial \\mathbf{y}}) (\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}}) {n\\times m} $$ \u6807\u91cf\u5bf9\u5411\u91cf\u7684\u94fe\u5f0f\u6cd5\u5219\u9700\u8981\u53d6\u4e00\u4e2a\u8f6c\u7f6e\uff1a $$ (\\frac{\\partial z }{\\partial \\mathbf{x} {m\\times1}}) =(\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}} {n\\times m})^\\top (\\frac{\\partial z}{\\partial \\mathbf{y}}) {n\\times 1}\\ (\\frac{\\partial z }{\\partial \\mathbf{a} {a\\times1}}) =(\\frac{\\partial \\mathbf{y}}{\\partial \\mathbf{x}} {y\\times x} \\dots \\frac{\\partial \\mathbf{c}}{\\partial \\mathbf{b}} \\frac{\\partial \\mathbf{b}}{\\partial \\mathbf{a}} {b\\times a} )^\\top (\\frac{\\partial z}{\\partial \\mathbf{y}})_{y\\times 1} $$","title":"\u94fe\u5f0f\u6cd5\u5219"},{"location":"Motion-Planning/matrix_diff/#f_4","text":"\\[ F=\\{{f_{ij}}\\}_{nl}\\\\ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_1}\\\\\\frac{\\partial F}{\\partial x_2}\\\\\\vdots\\\\\\frac{\\partial F}{\\partial x_n} \\end{Bmatrix}_{mn\\times l} \\]","title":"F\u4e3a\u51fd\u6570\u77e9\u9635\uff1a"},{"location":"Motion-Planning/matrix_diff/#xaxb","text":"\\[ X=\\begin{Bmatrix} x_{11}&\\dots&x_{1b}\\\\\\vdots&\\vdots&\\vdots\\\\x_{a1}&\\dots&x_{ab} \\end{Bmatrix} \\]","title":"X\u4e3aaxb\u7ef4\u77e9\u9635"},{"location":"Motion-Planning/matrix_diff/#f_5","text":"\\[ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F}{\\partial x_{11}}&\\dots&\\frac{\\partial F}{\\partial x_{1b}}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial F}{\\partial x_{a1}}&\\dots&\\frac{\\partial F}{\\partial x_{ab}} \\end{Bmatrix} \\]","title":"F\u4e3a\u6807\u91cf\u51fd\u6570"},{"location":"Motion-Planning/matrix_diff/#f_6","text":"\\[ F=\\{{f_{i}}\\}_{m\\times 1}\\\\ \\frac{\\partial F}{\\partial X}= \\begin{Bmatrix} \\frac{\\partial F_1}{\\partial x}\\\\\\frac{\\partial F_2}{\\partial x}\\\\\\vdots\\\\\\frac{\\partial F_m}{\\partial x} \\end{Bmatrix}_{ma\\times b} \\]","title":"F\u4e3a\u51fd\u6570\u5411\u91cf"},{"location":"Motion-Planning/matrix_diff/#f_7","text":"\\[ F=\\begin{Bmatrix} f_{11}&\\dots&f_{1n}\\\\\\vdots&\\vdots&\\vdots\\\\f_{m1}&\\dots&f_{mn} \\end{Bmatrix}\\\\ \\frac{\\partial F}{\\partial X}=\\begin{Bmatrix} \\frac{\\partial f_{11}}{\\partial X}&\\dots&\\frac{\\partial f_{1n}}{\\partial X}\\\\\\vdots&\\vdots&\\vdots\\\\\\frac{\\partial f_{m1}}{\\partial X}&\\dots&\\frac{\\partial f_{mn}}{\\partial X} \\end{Bmatrix}_{am\\times bn} \\]","title":"F\u4e3a\u51fd\u6570\u77e9\u9635"},{"location":"Motion-Planning/matrix_diff/#_4","text":"x,y,z \u4e3a\u5411\u91cf\uff0ct\u4e3a\u6807\u91cf\uff0cf\u4e3a\u6807\u91cf\u51fd\u6570 z=z(y), y=y(t) \\[ \\frac{dz}{dt}=\\frac{dz}{dy^\\top}\\frac{dy}{dt} \\] z=z(y), y=y(x) $$ \\frac{dz}{dx}=\\frac{dz}{dx \\top}=\\frac{dz}{dy \\top}\\frac{dy}{dx^\\top}\\ \\frac{dz \\top}{dx}=\\frac{dy \\top}{dx}\\frac{dz^\\top}{dy} $$ z=z(y,x), y=y(x) $$ \\frac{dz}{dx}=\\frac{dz}{dx \\top}+\\frac{dz}{dy \\top}\\frac{dy}{dx^\\top}\\ \\frac{dz \\top}{dx}=\\frac{dy \\top}{dx}\\frac{dz^\\top}{dy} $$ ### \u6cf0\u52d2\u5c55\u5f00 x,u \u4e3a\u5411\u91cf, H(x,u)\u4e3a\u6807\u91cf\u51fd\u6570, \u5728(x0,u0)\u5904\u5c55\u5f00 $$ H(x,u)=H(x_0,u_0)+\\left(\\frac{\\partial H}{\\partial x}\\right)^\\top \\delta x + \\left(\\frac{\\partial H}{\\partial u}\\right)^\\top \\delta u + \\frac{1}{2} \\begin{bmatrix} \\delta x^\\top&\\delta u^\\top \\end{bmatrix} \\begin{bmatrix} \\frac{\\partial^2 H}{\\partial x^2} & \\frac{\\partial^2 H}{\\partial x \\partial u}\\ \\frac{\\partial^2 H}{\\partial u \\partial x} & \\frac{\\partial^2 H}{\\partial u^2} \\end{bmatrix}\\begin{bmatrix} \\delta x\\\\delta u \\end{bmatrix}\\ \\delta x=x-x_0 \\quad \\delta u=u-u_0\\ \\frac{\\partial^2 H}{\\partial u \\partial x}=\\left(\\frac{\\partial^2 H}{\\partial x \\partial u}\\right)^\\top $$ F(x,u)\u4e3a\u5411\u91cf\u51fd\u6570, \u5728(x0,u0)\u5904\u5c55\u5f00 $$ F(x,u)=F(x_0,u_0)+\\frac{\\partial F}{\\partial x} \\delta x +\\frac{\\partial F}{\\partial u} \\delta u $$","title":"\u590d\u5408\u51fd\u6570\u5bfc\u6570"},{"location":"Motion-Planning/trajectory-optimization/","text":"The Trajectory Optimization Problem \u00b6 single-phase continuous-time trajectory optimization problems $$ \\text{system dynamics:\\qquad} \\dot{x}(t) = f(t, x(t), u(t))\\ \\text{path constraint:\\qquad} h(t, x(t), u(t)) \u2264 0\\ \\text{boundary constraint:\\qquad} g(t_0, t_F , x(t_0), x(t_F )\u2264 0\\ \\text{path bound on state:\\qquad} xlow \u2264 x(t) \u2264 xupp\\ \\text{path bound on control:\\qquad} ulow \u2264 u(t) \u2264 uupp\\ \\text{bounds on initial and final time:\\qquad} tlow \u2264 t0 < tF \u2264 tupp\\ \\text{bound on initial state:\\qquad} x0,low \u2264 x(t0) \u2264 x0,upp\\ \\text{bound on final state:\\qquad} xF,low \u2264 x(tF ) \u2264 xF,upp $$ \u4e24\u4e2a\u914d\u7f6e\u70b9\u4e4b\u95f4\u7684\u72b6\u6001\u53d8\u5316\u7b49\u4e8e\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u79ef\u5206\uff0c\u800c\u79ef\u5206\u5728\u88ab\u79ef\u51fd\u6570\u4e0d\u786e\u5b9a\u65f6\uff0c\u7528\u59cb\u672b\u503c\u8ba1\u7b97\u68af\u5f62\u9762\u79ef\u4ee3\u66ff\u5b9a\u79ef\u5206\uff1a $$ xk+1 \u2212 xk \u2248 1 2(hk)(\u03bdk+1 + \u03bdk) $$ Unconstrained case: BVP \u00b6 \\[ min \\int_0^T v(t)^\\top W v(t) dt \\\\ s.t. z^{(s)}(t)=v(t)\\\\ z{[s-1]}(t_0)=z_0\\\\ z{[s-1]}(t_M)=z_f \\] *\u6700\u4f18\u6761\u4ef6\uff1as\u9636\u5bfc\u6570\u4f5c\u4e3a\u4f18\u5316\u91cf: \u8f68\u8ff9\u4e3a2s-1 \u9636\u591a\u9879\u5f0f\uff0ceg: s=3 minimize jerk (angular velocity, thrust): 5 degree polynomial s=4 minimize snap(angular acc, torque): 7 degree \u751f\u6210\u8f68\u8ff9\u53ef\u884c\u6027\u68c0\u9a8c\uff1a \u79bb\u6563\u65f6\u95f4\u6cd5: \u9ad8\u5206\u8fa8\u7387\u8f83\u6162\uff0c\u4f4e\u5206\u8fa8\u7387\u53ef\u80fd\u68c0\u6d4b\u4e0d\u5230\uff08\u95f4\u9694\u592a\u5927\uff09 Recursive Bound Checker: \u4ec5\u9650 degree 5\uff0c \u5206\u8fa8\u7387\u76f8\u5173 extreme Value Checker\uff1a\u6570\u503c\u89e3\uff08\u6162\uff09\uff0cdegree5 \u66f4\u597d\u65b9\u6cd5\uff1a\uff08\u9488\u5bf9\u591a\u5143\u591a\u9879\u5f0f\uff09 \\[ \u6ee1\u8db3\u7ea6\u675f \\Leftrightarrow \\mathscr{G}(t)<0, t\\in[0,T]\\\\ \\text{Check t=0 and t=T, if satisfied,} \\Leftrightarrow \\mathscr{G}(t)=0 \\text{ has roots in (0,T)} \\] Sturm Theory\uff0c\u68c0\u67e5\u591a\u9879\u5f0f\u6839\u7684\u5b58\u5728\u6027 Position - Velocity - Acceleration - Jerk - Snap - Crackle - Pop Unconstrained case: BIVP (\u4e2d\u95f4\u70b9) \u00b6 BVP\u4e2d\u7684\u8d77\u59cb\u70b9\u6240\u6709\u91cf\u90fd\u5fc5\u987b\u6307\u5b9a\uff0cBIVP\u53ea\u6307\u5b9a\u90e8\u5206\u4e2d\u95f4\u70b9\u6761\u4ef6\uff08\u7ed9\u5b9a\u8282\u70b9p\uff0c\u81ea\u52a8\u4f18\u5316v,a,j\uff09\u66f4\u987a\u6ed1\u3002","title":"Trajectory optimization"},{"location":"Motion-Planning/trajectory-optimization/#the-trajectory-optimization-problem","text":"single-phase continuous-time trajectory optimization problems $$ \\text{system dynamics:\\qquad} \\dot{x}(t) = f(t, x(t), u(t))\\ \\text{path constraint:\\qquad} h(t, x(t), u(t)) \u2264 0\\ \\text{boundary constraint:\\qquad} g(t_0, t_F , x(t_0), x(t_F )\u2264 0\\ \\text{path bound on state:\\qquad} xlow \u2264 x(t) \u2264 xupp\\ \\text{path bound on control:\\qquad} ulow \u2264 u(t) \u2264 uupp\\ \\text{bounds on initial and final time:\\qquad} tlow \u2264 t0 < tF \u2264 tupp\\ \\text{bound on initial state:\\qquad} x0,low \u2264 x(t0) \u2264 x0,upp\\ \\text{bound on final state:\\qquad} xF,low \u2264 x(tF ) \u2264 xF,upp $$ \u4e24\u4e2a\u914d\u7f6e\u70b9\u4e4b\u95f4\u7684\u72b6\u6001\u53d8\u5316\u7b49\u4e8e\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u79ef\u5206\uff0c\u800c\u79ef\u5206\u5728\u88ab\u79ef\u51fd\u6570\u4e0d\u786e\u5b9a\u65f6\uff0c\u7528\u59cb\u672b\u503c\u8ba1\u7b97\u68af\u5f62\u9762\u79ef\u4ee3\u66ff\u5b9a\u79ef\u5206\uff1a $$ xk+1 \u2212 xk \u2248 1 2(hk)(\u03bdk+1 + \u03bdk) $$","title":"The Trajectory Optimization Problem"},{"location":"Motion-Planning/trajectory-optimization/#unconstrained-case-bvp","text":"\\[ min \\int_0^T v(t)^\\top W v(t) dt \\\\ s.t. z^{(s)}(t)=v(t)\\\\ z{[s-1]}(t_0)=z_0\\\\ z{[s-1]}(t_M)=z_f \\] *\u6700\u4f18\u6761\u4ef6\uff1as\u9636\u5bfc\u6570\u4f5c\u4e3a\u4f18\u5316\u91cf: \u8f68\u8ff9\u4e3a2s-1 \u9636\u591a\u9879\u5f0f\uff0ceg: s=3 minimize jerk (angular velocity, thrust): 5 degree polynomial s=4 minimize snap(angular acc, torque): 7 degree \u751f\u6210\u8f68\u8ff9\u53ef\u884c\u6027\u68c0\u9a8c\uff1a \u79bb\u6563\u65f6\u95f4\u6cd5: \u9ad8\u5206\u8fa8\u7387\u8f83\u6162\uff0c\u4f4e\u5206\u8fa8\u7387\u53ef\u80fd\u68c0\u6d4b\u4e0d\u5230\uff08\u95f4\u9694\u592a\u5927\uff09 Recursive Bound Checker: \u4ec5\u9650 degree 5\uff0c \u5206\u8fa8\u7387\u76f8\u5173 extreme Value Checker\uff1a\u6570\u503c\u89e3\uff08\u6162\uff09\uff0cdegree5 \u66f4\u597d\u65b9\u6cd5\uff1a\uff08\u9488\u5bf9\u591a\u5143\u591a\u9879\u5f0f\uff09 \\[ \u6ee1\u8db3\u7ea6\u675f \\Leftrightarrow \\mathscr{G}(t)<0, t\\in[0,T]\\\\ \\text{Check t=0 and t=T, if satisfied,} \\Leftrightarrow \\mathscr{G}(t)=0 \\text{ has roots in (0,T)} \\] Sturm Theory\uff0c\u68c0\u67e5\u591a\u9879\u5f0f\u6839\u7684\u5b58\u5728\u6027 Position - Velocity - Acceleration - Jerk - Snap - Crackle - Pop","title":"Unconstrained case: BVP"},{"location":"Motion-Planning/trajectory-optimization/#unconstrained-case-bivp","text":"BVP\u4e2d\u7684\u8d77\u59cb\u70b9\u6240\u6709\u91cf\u90fd\u5fc5\u987b\u6307\u5b9a\uff0cBIVP\u53ea\u6307\u5b9a\u90e8\u5206\u4e2d\u95f4\u70b9\u6761\u4ef6\uff08\u7ed9\u5b9a\u8282\u70b9p\uff0c\u81ea\u52a8\u4f18\u5316v,a,j\uff09\u66f4\u987a\u6ed1\u3002","title":"Unconstrained case: BIVP (\u4e2d\u95f4\u70b9)"},{"location":"Notes/makeshared%E6%8C%87%E9%92%88/","text":"shared_ptr \u4f7f\u7528\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5f88\u597d\u5730\u907f\u514d\u201c\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u201d\u95ee\u9898\u51fa\u73b0\u3002","title":"Makeshared\u6307\u9488"},{"location":"Sensor-Fusion/3D%E6%BF%80%E5%85%89%E9%87%8C%E7%A8%8B%E8%AE%A1%20I/","text":"","title":"3D\u6fc0\u5149\u91cc\u7a0b\u8ba1 I"},{"location":"Sensor-Fusion/Ceres-Tutorial/","text":"Ceres \u4f7f\u7528\u5165\u95e8 \u00b6 1. \u95ee\u9898\u5b9a\u4e49 \u00b6 \\[ \\begin{align} \\min_x \\frac{1}{2}\\sum_i &\\rho_i (\\|f_i(x_{i1},\\dots,x_{ik})\\|) \\\\\\\\ \\text{s.t. } l_i&\\leq x_j\\leq u_i \\end{align} \\] 2. \u5b9a\u4e49Costfunction \u00b6 Given[x1,x2,...,xk] , CostFunction is responsible for computing the vector f(x1,x2,...,xk) and the Jacobian matrices: $$ J_i=D_if(x_1,...,x_k) $$ \\[ J=\\begin{bmatrix} \\frac{\\partial f_{1}}{\\partial x_1}&\\dots&\\frac{\\partial f_{1}}{\\partial x_c} \\\\\\\\ \\vdots&\\vdots&\\vdots \\\\\\\\ \\frac{\\partial f_{r}}{\\partial x_1}&\\dots&\\frac{\\partial f_{r}}{\\partial x_c} \\end{bmatrix}_{num\\_residuals \\times parameter\\_block\\_sizes\\_[i]} \\] \\[ \\text{jacobians}[i][r * parameter\\_block\\_sizes\\_[i] + c] =\\frac{\\partial \\text{ residual[r]}}{\\partial \\text{ parameters}[i][c]} \\] 2.1 \u81ea\u52a8\u6c42\u5bfc \u00b6 \u81ea\u52a8\u6c42\u5bfc // \u5b9a\u4e49\u81ea\u52a8\u6c42\u5bfc\u7684\u6b8b\u5dee\u4f2a\u51fd\u6570 template < typename _T1 > struct MyCostFunctor { //\u5b9a\u4e49\u53d8\u91cf MyCostFunctor ( var1 , var2 ...) : var1_ ( var1 ), var2_ ( var2 ),... {} template < typename _T2 > //\u91cd\u8f7d\u62ec\u53f7\u5e76\u5b9a\u4e49\u6b8b\u5dee bool operator () ( //\u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53c2\u6570 const _T2 * const param1 , const _T2 * const param2 ,..., //\u8f93\u5165\uff1a\u6b8b\u5dee _T2 * residuals ) const { residuals = f ( param1 , param2 ...); return true ; } //\u7528\u5de5\u5382\u51fd\u6570\u521b\u5efaCostfunction static ceres :: CostFunction * Create ( const vars ) { return ( new AutoDiffCostFunction < MyCostFunctor , n_res , n_param1 , n_param2 ,... > ( new MyCostFunctor ( var1 , var2 ...)) ^ ^ ^ | | | Dimension of residual ------+ | | Dimension of param1 ----------------+ | Dimension of param2 ------------------------+ } } \u5de5\u5382\u6a21\u5f0f\u51fd\u6570\u6784\u9020costfunction ceres :: CostFunction * cost_function = MyCostFunctor < _T >:: Create ( var1 , var2 ...); 2.2 \u89e3\u6790\u6c42\u5bfc \u00b6 \u89e3\u6790\u6c42\u5bfc\u6a21\u677f class AnalyticCostFunction : public ceres :: SizedCostFunction < n_res , n_param1 , n_param2 ,... > { public : AnalyticCostFunction ( var1 , var2 ,...) : var1_ ( var1 ), var2_ ( var2 ), ... {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { //\u53d8\u91cf var1 = parameters [ 0 ]; var2 = parameters [ 1 ]; ... //\u8ba1\u7b97\u6b8b\u5dee residuals = f ( var1 , var2 ,...); //\u8ba1\u7b97\u96c5\u53ef\u6bd4 jacobians = j ( var1 , var2 ,...); return true ; } //\u50a8\u5b58\u53d8\u91cf protected : var1 , var2 ,...; }; parameters \u662f CostFunction::parameter_block_sizes_.size() \u5927\u5c0f\u7684array. parameters[i] \u662f parameter_block_sizes_[i] \u5927\u5c0f\u7684\u5305\u542b\u7b2ci\u4e2aparameter block\u9700\u8981\u53c2\u6570\u7684array. parameters is never nullptr . residuals is an array of size num_residuals_ . residuals is never nullptr . jacobians is an array of arrays of size CostFunction::parameter_block_sizes_.size() . If jacobians is nullptr , the user is only expected to compute the residuals. jacobians[i] is a row-major array of size num_residuals x parameter_block_sizes_[i] If jacobians[i] is not nullptr , the user is required to compute the Jacobian of the residual vector with respect to parameters[i] and store it in this array If jacobians[i] is nullptr , then this computation can be skipped. This is the case when the corresponding parameter block is marked constant. jacobians \u901a\u5e38\u5b9a\u4e49\u4e3a\u53cc\u91cd\u6307\u9488 double ** , \u800c\u8ba1\u7b97\u51fa\u7684\u96c5\u53ef\u6bd4\u901a\u5e38\u4e3a Eigen::MatrixXd ,\u9700\u8981\u7528Map\u51fd\u6570\u6620\u5c04\uff0c\u5982\uff1a Eigen::Map<Eigen::Matrix<double, 1, 4, Eigen::RowMajor>> J_so3_r(jacobians[0]); \u5b9a\u4e49costfunction ceres :: CostFunction * cost_function = new AnalyticCostFunction ( var1 , var2 ,...); 3. \u6784\u9020\u4f18\u5316\u95ee\u9898 \u00b6 //\u6784\u9020\u4f18\u5316\u95ee\u9898 ceres :: Problem problem ; ceres :: CostFunction * cost_function = ... // (Auto/Analytic cost function) //\u6dfb\u52a0\u53c2\u6570\u5757 problem . AddParameterBlock ( * var , size ) ... //\u6dfb\u52a0\u6b8b\u5dee\u5757 problem . AddResidualBlock ( cost_function , //cost fuction loss , //loss: eg.squared loss,HuberLoss parameter_blocks ,... ); Problem::AddParameterBlock( ) \u7528\u6237\u5728\u8c03\u7528AddResidualBlock( )\u65f6\u5176\u5b9e\u5df2\u7ecf\u9690\u5f0f\u5730\u5411Problem\u4f20\u9012\u4e86\u53c2\u6570\u6a21\u5757\uff0c\u4f46\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u7528\u6237\u663e\u793a\u5730\u5411Problem\u4f20\u5165\u53c2\u6570\u6a21\u5757\uff08\u901a\u5e38\u51fa\u73b0\u5728\u9700\u8981\u5bf9\u4f18\u5316\u53c2\u6570\u8fdb\u884c\u91cd\u65b0\u53c2\u6570\u5316\u7684\u60c5\u51b5\uff09\u3002 void Problem :: AddParameterBlock ( double * values , int size ) void Problem :: AddParameterBlock ( double * values , int size , LocalParameterization * local_parameterization ) \u4ee5LOAM\u4e2d\u70b9\u4e91\u5339\u914d\u6c42\u5bfc\u4f5c\u4e3a\u4f8b\u5b50 double parameters [ 7 ] = { 0 , 0 , 0 , 1 , 0 , 0 , 0 }; Eigen :: Map < Eigen :: Quaterniond > q_w_curr ( parameters ); Eigen :: Map < Eigen :: Vector3d > t_w_curr ( parameters + 4 ); ... problem . AddParameterBlock ( parameters , 4 , q_parameterization ); problem . AddParameterBlock ( parameters + 4 , 3 ); Problem::AddResidualBlock( ) \u5411Problem\u7c7b\u4f20\u9012\u6b8b\u5dee\u6a21\u5757\u7684\u4fe1\u606f ResidualBlockId Problem :: AddResidualBlock ( CostFunction * cost_function , LossFunction * loss_function , const vector < double *> parameter_blocks ) ResidualBlockId Problem :: AddResidualBlock ( CostFunction * cost_function , LossFunction * loss_function , double * x0 , double * x1 , ...) \u4ee5LOAM\u4e2d\u70b9\u4e91\u5339\u914d\u6c42\u5bfc\u4f5c\u4e3a\u4f8b\u5b50 ceres :: CostFunction * cost_function = LidarEdgeFactor :: Create ( curr_point , point_a , point_b , 1.0 ); problem . AddResidualBlock ( cost_function , loss_function , parameters , parameters + 4 ); 4. \u6c42\u89e3 \u00b6 ceres :: Solver :: Options options ; options . linear_solver_type = ceres :: DENSE_QR ; ... //\u6c42\u89e3 ceres :: Solver :: Summary summary ; ceres :: Solve ( options , & problem , & summary );","title":"Ceres \u4f7f\u7528\u5165\u95e8"},{"location":"Sensor-Fusion/Ceres-Tutorial/#ceres","text":"","title":"Ceres \u4f7f\u7528\u5165\u95e8"},{"location":"Sensor-Fusion/Ceres-Tutorial/#1","text":"\\[ \\begin{align} \\min_x \\frac{1}{2}\\sum_i &\\rho_i (\\|f_i(x_{i1},\\dots,x_{ik})\\|) \\\\\\\\ \\text{s.t. } l_i&\\leq x_j\\leq u_i \\end{align} \\]","title":"1. \u95ee\u9898\u5b9a\u4e49"},{"location":"Sensor-Fusion/Ceres-Tutorial/#2-costfunction","text":"Given[x1,x2,...,xk] , CostFunction is responsible for computing the vector f(x1,x2,...,xk) and the Jacobian matrices: $$ J_i=D_if(x_1,...,x_k) $$ \\[ J=\\begin{bmatrix} \\frac{\\partial f_{1}}{\\partial x_1}&\\dots&\\frac{\\partial f_{1}}{\\partial x_c} \\\\\\\\ \\vdots&\\vdots&\\vdots \\\\\\\\ \\frac{\\partial f_{r}}{\\partial x_1}&\\dots&\\frac{\\partial f_{r}}{\\partial x_c} \\end{bmatrix}_{num\\_residuals \\times parameter\\_block\\_sizes\\_[i]} \\] \\[ \\text{jacobians}[i][r * parameter\\_block\\_sizes\\_[i] + c] =\\frac{\\partial \\text{ residual[r]}}{\\partial \\text{ parameters}[i][c]} \\]","title":"2. \u5b9a\u4e49Costfunction"},{"location":"Sensor-Fusion/Ceres-Tutorial/#21","text":"\u81ea\u52a8\u6c42\u5bfc // \u5b9a\u4e49\u81ea\u52a8\u6c42\u5bfc\u7684\u6b8b\u5dee\u4f2a\u51fd\u6570 template < typename _T1 > struct MyCostFunctor { //\u5b9a\u4e49\u53d8\u91cf MyCostFunctor ( var1 , var2 ...) : var1_ ( var1 ), var2_ ( var2 ),... {} template < typename _T2 > //\u91cd\u8f7d\u62ec\u53f7\u5e76\u5b9a\u4e49\u6b8b\u5dee bool operator () ( //\u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53c2\u6570 const _T2 * const param1 , const _T2 * const param2 ,..., //\u8f93\u5165\uff1a\u6b8b\u5dee _T2 * residuals ) const { residuals = f ( param1 , param2 ...); return true ; } //\u7528\u5de5\u5382\u51fd\u6570\u521b\u5efaCostfunction static ceres :: CostFunction * Create ( const vars ) { return ( new AutoDiffCostFunction < MyCostFunctor , n_res , n_param1 , n_param2 ,... > ( new MyCostFunctor ( var1 , var2 ...)) ^ ^ ^ | | | Dimension of residual ------+ | | Dimension of param1 ----------------+ | Dimension of param2 ------------------------+ } } \u5de5\u5382\u6a21\u5f0f\u51fd\u6570\u6784\u9020costfunction ceres :: CostFunction * cost_function = MyCostFunctor < _T >:: Create ( var1 , var2 ...);","title":"2.1 \u81ea\u52a8\u6c42\u5bfc"},{"location":"Sensor-Fusion/Ceres-Tutorial/#22","text":"\u89e3\u6790\u6c42\u5bfc\u6a21\u677f class AnalyticCostFunction : public ceres :: SizedCostFunction < n_res , n_param1 , n_param2 ,... > { public : AnalyticCostFunction ( var1 , var2 ,...) : var1_ ( var1 ), var2_ ( var2 ), ... {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { //\u53d8\u91cf var1 = parameters [ 0 ]; var2 = parameters [ 1 ]; ... //\u8ba1\u7b97\u6b8b\u5dee residuals = f ( var1 , var2 ,...); //\u8ba1\u7b97\u96c5\u53ef\u6bd4 jacobians = j ( var1 , var2 ,...); return true ; } //\u50a8\u5b58\u53d8\u91cf protected : var1 , var2 ,...; }; parameters \u662f CostFunction::parameter_block_sizes_.size() \u5927\u5c0f\u7684array. parameters[i] \u662f parameter_block_sizes_[i] \u5927\u5c0f\u7684\u5305\u542b\u7b2ci\u4e2aparameter block\u9700\u8981\u53c2\u6570\u7684array. parameters is never nullptr . residuals is an array of size num_residuals_ . residuals is never nullptr . jacobians is an array of arrays of size CostFunction::parameter_block_sizes_.size() . If jacobians is nullptr , the user is only expected to compute the residuals. jacobians[i] is a row-major array of size num_residuals x parameter_block_sizes_[i] If jacobians[i] is not nullptr , the user is required to compute the Jacobian of the residual vector with respect to parameters[i] and store it in this array If jacobians[i] is nullptr , then this computation can be skipped. This is the case when the corresponding parameter block is marked constant. jacobians \u901a\u5e38\u5b9a\u4e49\u4e3a\u53cc\u91cd\u6307\u9488 double ** , \u800c\u8ba1\u7b97\u51fa\u7684\u96c5\u53ef\u6bd4\u901a\u5e38\u4e3a Eigen::MatrixXd ,\u9700\u8981\u7528Map\u51fd\u6570\u6620\u5c04\uff0c\u5982\uff1a Eigen::Map<Eigen::Matrix<double, 1, 4, Eigen::RowMajor>> J_so3_r(jacobians[0]); \u5b9a\u4e49costfunction ceres :: CostFunction * cost_function = new AnalyticCostFunction ( var1 , var2 ,...);","title":"2.2 \u89e3\u6790\u6c42\u5bfc"},{"location":"Sensor-Fusion/Ceres-Tutorial/#3","text":"//\u6784\u9020\u4f18\u5316\u95ee\u9898 ceres :: Problem problem ; ceres :: CostFunction * cost_function = ... // (Auto/Analytic cost function) //\u6dfb\u52a0\u53c2\u6570\u5757 problem . AddParameterBlock ( * var , size ) ... //\u6dfb\u52a0\u6b8b\u5dee\u5757 problem . AddResidualBlock ( cost_function , //cost fuction loss , //loss: eg.squared loss,HuberLoss parameter_blocks ,... ); Problem::AddParameterBlock( ) \u7528\u6237\u5728\u8c03\u7528AddResidualBlock( )\u65f6\u5176\u5b9e\u5df2\u7ecf\u9690\u5f0f\u5730\u5411Problem\u4f20\u9012\u4e86\u53c2\u6570\u6a21\u5757\uff0c\u4f46\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u7528\u6237\u663e\u793a\u5730\u5411Problem\u4f20\u5165\u53c2\u6570\u6a21\u5757\uff08\u901a\u5e38\u51fa\u73b0\u5728\u9700\u8981\u5bf9\u4f18\u5316\u53c2\u6570\u8fdb\u884c\u91cd\u65b0\u53c2\u6570\u5316\u7684\u60c5\u51b5\uff09\u3002 void Problem :: AddParameterBlock ( double * values , int size ) void Problem :: AddParameterBlock ( double * values , int size , LocalParameterization * local_parameterization ) \u4ee5LOAM\u4e2d\u70b9\u4e91\u5339\u914d\u6c42\u5bfc\u4f5c\u4e3a\u4f8b\u5b50 double parameters [ 7 ] = { 0 , 0 , 0 , 1 , 0 , 0 , 0 }; Eigen :: Map < Eigen :: Quaterniond > q_w_curr ( parameters ); Eigen :: Map < Eigen :: Vector3d > t_w_curr ( parameters + 4 ); ... problem . AddParameterBlock ( parameters , 4 , q_parameterization ); problem . AddParameterBlock ( parameters + 4 , 3 ); Problem::AddResidualBlock( ) \u5411Problem\u7c7b\u4f20\u9012\u6b8b\u5dee\u6a21\u5757\u7684\u4fe1\u606f ResidualBlockId Problem :: AddResidualBlock ( CostFunction * cost_function , LossFunction * loss_function , const vector < double *> parameter_blocks ) ResidualBlockId Problem :: AddResidualBlock ( CostFunction * cost_function , LossFunction * loss_function , double * x0 , double * x1 , ...) \u4ee5LOAM\u4e2d\u70b9\u4e91\u5339\u914d\u6c42\u5bfc\u4f5c\u4e3a\u4f8b\u5b50 ceres :: CostFunction * cost_function = LidarEdgeFactor :: Create ( curr_point , point_a , point_b , 1.0 ); problem . AddResidualBlock ( cost_function , loss_function , parameters , parameters + 4 );","title":"3. \u6784\u9020\u4f18\u5316\u95ee\u9898"},{"location":"Sensor-Fusion/Ceres-Tutorial/#4","text":"ceres :: Solver :: Options options ; options . linear_solver_type = ceres :: DENSE_QR ; ... //\u6c42\u89e3 ceres :: Solver :: Summary summary ; ceres :: Solve ( options , & problem , & summary );","title":"4. \u6c42\u89e3"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/","tags":["ESKF"],"text":"1. ESKF \u7b80\u4ecb \u00b6 \u539f\u72b6\u6001\u53d8\u91cf\u79f0\u4e3a \u540d\u4e49\u72b6\u6001\u53d8\u91cf \uff08nominal state\uff09\u5373\u4e0d\u8003\u8651\u566a\u58f0\u7684\u72b6\u6001\u3002 \u771f\u5b9e\u7684\u72b6\u6001\u4e3a \u771f\u503c\u72b6\u6001 (true state), \u9700\u8981\u8003\u8651\u566a\u58f0\u3002 ESKF\u91cc\u7684\u72b6\u6001\u53d8\u91cf\u79f0\u4e3a \u8bef\u5dee\u72b6\u6001\u53d8\u91cf \uff08error state), \u4ed6\u4eec\u7684\u5173\u7cfb\u4e3a \u8bef\u5dee\u72b6\u6001\u53d8\u91cf= \u771f\u503c\u72b6\u6001-\u540d\u4e49\u72b6\u6001\u53d8\u91cf , \u8bef\u5dee\u72b6\u6001\u53d8\u91cf ESKF predicts a Gaussian estimate of the error-state ESKF \u4f18\u70b9 \uff1a error state\u4e2d\u65cb\u8f6c\u53d8\u91cf\u53ef\u4ee5\u7528\u6700\u5c0f\u8868\u793a\uff0c\u5373\u65cb\u8f6c\u5411\u91cf\u8868\u793a\uff0c\u6ca1\u6709\u591a\u4f59\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u907f\u514d\u5197\u4f59\u53d8\u91cf\u5e26\u6765\u7684singularity risk error-state system \u901a\u5e38\u90fd\u5728\u539f\u70b9\u9644\u8fd1\uff0c\u53ef\u4ee5\u907f\u514d\u4e07\u5411\u8282\u9501\uff0c\u5947\u5f02\u503c\u7b49\u95ee\u9898\uff0c\u4fdd\u8bc1linearization\u6bcf\u65f6\u6bcf\u523b\u90fd\u662f\u53ef\u884c\u7684 error state \u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u56e0\u6b64\u4e8c\u9636\u91cf\u53ef\u4ee5\u5ffd\u7565\uff0c\u96c5\u53ef\u6bd4\u7684\u8ba1\u7b97\u66f4\u5feb\u901f error state dynamics\u6bd4\u8f83\u6162\uff0c\u56e0\u4e3a\u5927\u4fe1\u53f7\u5728\u540d\u4e49\u52a8\u529b\u5b66\u4e2d\u88ab\u79ef\u5206\u4e86\uff0c\u5269\u4e0b\u7684error\u662f\u5c0f\u4fe1\u53f7\uff0c\u56e0\u6b64ESKF\u53ef\u4ee5\u5de5\u4f5c\u5728\u8f83\u4f4e\u7684\u9891\u7387\u4e0b ESKF\u6d41\u7a0b\uff1a In parallel with integration of the nominal state, the ESKF predicts a Gaussian estimate of the error-state. It only predicts, because by now no other measurement is available to correct these estimates. The filter correction is performed at the arrival of information other than IMU (e.g. GPS, vision, etc.), which is able to render the errors observable and which happens generally at a much lower rate than the integration phase. This correction provides a posterior Gaussian estimate of the error-state. After this, the error-state\u2019s mean is injected into the nominal-state, then reset to zero. The error-state\u2019s covariances matrix is conveniently updated to reflect this reset. The system goes on like this forever 2. \u771f\u503c\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \u00b6 \u771f\u503c\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \uff0c\u8fd9\u4e9b\u72b6\u6001\u662f\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u3002 \\[ \\begin{align} &\\text{Position:}&\\dot{p_t}&=v_t\\\\ &\\text{Velocity:}&\\dot{v_t}&=a_t=R_t(a_m-bias_{at}-\\eta_a)+g_t\\\\ &\\text{Quaternion:}&\\dot{q_t}&=\\frac{1}{2}q_t \\otimes \\omega_t=\\frac{1}{2}q_t \\otimes (\\omega_m-bias_{gt}-\\eta_g )\\\\ &\\text{Accelerometer bias:}&\\dot{bias}_{at}&=\\eta_{ba}(noise)\\\\ &\\text{Gyrometer bias:}&\\dot{bias}_{gt}&=\\eta_{bg}(noise)\\\\ &\\text{Gravity vector:}&\\dot{g_t}&=0\\\\ \\end{align} \\] \u5176\u4e2d\uff0c\u52a0\u901f\u5ea6at\u548c\u89d2\u901f\u5ea6wt\u662f\u7531IMU\u6d4b\u91cf\u503c\u8ba1\u7b97\u51fa\u6765\u7684\uff1a \\[ \\begin{align} a_m&=R_t^\\top(a_t-g_t)+bias_a+\\eta_a &\\Rightarrow a_t&=R_t(a_m-bias_a-\\eta_a)+g_t\\\\ \\omega_m&=\\omega_t+bias_g+\\eta_g&\\Rightarrow \\omega_t&=\\omega_m-bias_g-\\eta_g \\end{align} \\] 3.\u540d\u4e49\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \u00b6 \u540d\u4e49\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \uff0c\u8fd9\u4e9b\u72b6\u6001\u662f\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u3002 \\[ \\begin{align} &\\text{Position:}&\\dot{p}&=v\\\\ &\\text{Velocity:}&\\dot{v}&=R(a_m-bias_a)+g\\\\ &\\text{Quaternion:}&\\dot{q}&=\\frac{1}{2}q \\otimes (\\omega_m-bias_g)\\\\ &\\text{Accelerometer bias:}&\\dot{bias}_{a}&=0\\\\ &\\text{Gyrometer bias:}&\\dot{bias}_{g}&=0\\\\ &\\text{Gravity vector:}&\\dot{g_t}&=0\\\\ \\end{align} \\] 4.\u8bef\u5dee\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \u00b6 \u8bef\u5dee\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b (error-state kinematics) \\[ \\begin{align} &\\text{Position:}& \\delta \\dot{p}&=\\delta v\\\\ &\\text{Velocity:}& \\delta \\dot{v}&=-R[a_m-bias_a]_{times}\\delta \\theta -R \\delta a_b +\\delta g -R\\eta_a\\\\ &\\text{Quaternion:}& \\delta \\dot{\\theta}&=-[\\omega_m-bias_g]_{\\times}\\delta \\theta - \\delta bias_g - \\eta_g\\\\ &\\text{Accelerometer bias:}& \\delta \\dot{bias}_{a}&=\\eta_{ba}\\\\ &\\text{Gyrometer bias:}& \\delta \\dot{bias}_{g}&=\\eta_{bg}\\\\ &\\text{Gravity vector:}& \\delta \\dot{g}&=0\\\\ \\end{align} \\] \u901f\u5ea6\u8bef\u5dee(Linear velocity error) \u52a8\u529b\u5b66\u63a8\u5bfc: \u00b6 \\[ \\begin{align} R_t& = R(I+[\\delta \\theta]_{\\times})\\\\ bias_{at}&=bias_a+\\delta bias_a\\\\ g_{t}&=g+\\delta g\\\\ a_B& \\doteq a_m-bias_a\\\\ \\delta a_B&\\doteq -\\delta bias_a-\\eta_{ba}\\\\ \\Rightarrow \\dot{v}&=R a_B +g\\\\ \\dot{v}+\\dot{\\delta v}=\\dot{v_t}&=R_t(a_m-bias_{at}-\\eta_a)+g_t\\\\ &=R(I+[\\delta \\theta]_{\\times})(\\underbrace{a_m-bias_a}_{a_B}+\\underbrace{-\\delta bias_a-\\eta_a}_{\\delta a_B})+g_t\\\\ &=R(I+[\\delta \\theta]_{\\times})(a_B+\\delta a_B)+g+\\delta g\\\\ \\Rightarrow \\cancel{R a_B} +\\cancel{g} +\\dot{\\delta v}=\\dot{v_t}&=\\cancel{R a_B}+R[\\delta \\theta]_{\\times}a_B+R\\delta a_B+R[\\delta \\theta]_{\\times}\\delta a_B+\\cancel{g}+\\delta g\\\\ \\Rightarrow \\dot{\\delta v}&=R[\\delta \\theta]_{\\times}a_B+R\\delta a_B+\\cancel{R[\\delta \\theta]_{\\times}\\delta a_B}(\u4e8c\u9636\u5c0f\u91cf)+\\delta g\\\\ &=-R[a_B]_{\\times}\\delta \\theta+R\\delta a_B+\\delta g\\\\ &=-R[a_m-bias_a]_{\\times}\\delta \\theta+R(-\\delta bias_a-\\eta_{ba})+\\delta g\\\\ \\dot{\\delta v}&=-R[a_m-bias_a]_{\\times}\\delta \\theta-R\\delta bias_a+\\delta g-R\\eta_{ba}\\\\ \\end{align} \\] \u5982\u679c\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u662f\u540c\u578b\u53f7\u7684\uff0c\u53ef\u4ee5\u5047\u8bbe\u5176\u52a0\u901f\u5ea6\u8ba1\u566a\u58f0\u662f\u72ec\u7acb\u540c\u5206\u5e03\u4e14\u5404\u9879\u540c\u6027\u7684\uff0c\u5373\u5176\u566a\u58f0\u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u4e0e\u65cb\u8f6c\u65e0\u5173\u3002 \u5373 \\(\\eta_{ba}=R \\eta_{ba}\\) \uff0c\u5219\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\uff1a \\[ \\dot{\\delta v}=-R[a_m-bias_a]_{\\times}\\delta \\theta-R\\delta bias_a+\\delta g-\\underline{\\eta_{ba}}\\\\ \\] \u65b9\u5411\u8bef\u5dee(orientation error) \u52a8\u529b\u5b66\u63a8\u5bfc: \u00b6 \\[ \\begin{align} (\u5b9a\u4e49)q_t&=q \\otimes \\delta q\\\\ \\dot{q_t}&=\\frac{1}{2}q_t \\otimes \\omega_t\\\\ \\dot{q}&=\\frac{1}{2}q \\otimes \\omega\\\\ bias_{gt}&=bias_g+\\delta bias_g\\\\ (\u5b9a\u4e49)\\omega_t &= \\omega + \\delta \\omega \\\\ (\u8ba1\u7b97)\\omega_t &=\\omega_m-bias_{gt}-\\eta_g \\\\ &=\\underbrace{\\omega_m-bias_g}_{\\omega}+\\underbrace{-\\delta bias_g-\\eta_g}_{\\delta\\omega}\\\\ \\frac{1}{2}q_t \\otimes \\omega_t=\\dot{q_t}&=(\\dot{q \\otimes \\delta q})\\\\ \\Rightarrow\\frac{1}{2}q \\otimes \\delta q \\otimes \\omega_t=\\dot{q_t}&=\\dot{q} \\otimes \\delta q+q \\otimes \\dot{\\delta q}\\\\ \\Rightarrow\\frac{1}{2} \\cancel{q \\otimes} \\delta q \\otimes \\omega_t&=\\frac{1}{2} \\cancel{q \\otimes} \\omega \\otimes \\delta q+\\cancel{q \\otimes} \\dot{\\delta q}\\\\ \\Rightarrow 2\\dot{\\delta q} &=\\delta q \\otimes \\omega_t-\\omega \\otimes \\delta q \\end{align} \\] \u56db\u5143\u6570\u4e58\u6cd5 \\([\\mathbf{p}]_L=p_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{p}_v^\\top\\\\\\mathbf{p}_v&[\\mathbf{p}_v]_{\\times}\\end{bmatrix}\\) , \\([\\mathbf{q}]_R=q_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{q}_v^\\top\\\\\\mathbf{q}_v&-[\\mathbf{q}_v]_{\\times}\\end{bmatrix}\\) \u5c06\u5411\u91cf(\u7eaf\u865a\u56db\u5143\u6570)\u7684\u56db\u5143\u6570\u4e58\u6cd5\u5e26\u5165\u6253\u5f00: \\[ \\begin{align} \\Rightarrow 2\\dot{\\delta q} &=[\\omega_t]_{R}\\delta q -[\\omega]_L\\delta q\\\\ &=\\begin{bmatrix} 0&-\\omega_t^\\top\\\\ \\omega_t&-[\\omega_t]_{\\times} \\end{bmatrix}\\delta q - \\begin{bmatrix} 0&-\\omega^\\top\\\\ \\omega & [\\omega]_{\\times} \\end{bmatrix}\\delta q\\\\ &=\\begin{bmatrix} 0&-(\\omega_t-\\omega)^\\top\\\\ \\omega_t-\\omega&-[\\omega_t+\\omega]_{\\times} \\end{bmatrix}\\begin{bmatrix}1 \\\\ \\frac{1}{2}\\delta\\theta\\end{bmatrix}\\\\ \\Rightarrow 2\\begin{bmatrix}0 \\\\ \\frac{1}{2}\\delta\\dot{\\theta}\\end{bmatrix}&=\\begin{bmatrix} 0&-\\delta\\omega^\\top\\\\ \\delta\\omega &-[\\delta\\omega+2\\omega]_{\\times} \\end{bmatrix}\\begin{bmatrix}1 \\\\ \\frac{1}{2}\\delta\\theta\\end{bmatrix}\\\\ \\Rightarrow & \\begin{cases} 0 = -\\delta\\omega^\\top \\delta\\theta(\u4e8c\u9636\u5c0f\u91cf\u5ffd\u7565)\\\\ \\delta\\dot{\\theta} = \\delta\\omega -[\\delta\\omega+2\\omega]_{\\times}\\frac{1}{2}\\delta\\theta \\end{cases}\\\\ \\Rightarrow \\delta\\dot{\\theta} &= \\delta\\omega \\cancel{-\\frac{1}{2}[\\delta\\omega]_{\\times}\\delta\\theta} -[\\omega]_{\\times}\\delta\\theta\\\\ \\Rightarrow \\delta\\dot{\\theta} &= \\delta\\omega-[\\omega]_{\\times}\\delta\\theta\\\\ &=-[\\omega_m-bias_g]_{\\times}\\delta\\theta-\\delta bias_g-\\eta_g\\\\ \\end{align} \\]","title":"ESKF\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#1-eskf","text":"\u539f\u72b6\u6001\u53d8\u91cf\u79f0\u4e3a \u540d\u4e49\u72b6\u6001\u53d8\u91cf \uff08nominal state\uff09\u5373\u4e0d\u8003\u8651\u566a\u58f0\u7684\u72b6\u6001\u3002 \u771f\u5b9e\u7684\u72b6\u6001\u4e3a \u771f\u503c\u72b6\u6001 (true state), \u9700\u8981\u8003\u8651\u566a\u58f0\u3002 ESKF\u91cc\u7684\u72b6\u6001\u53d8\u91cf\u79f0\u4e3a \u8bef\u5dee\u72b6\u6001\u53d8\u91cf \uff08error state), \u4ed6\u4eec\u7684\u5173\u7cfb\u4e3a \u8bef\u5dee\u72b6\u6001\u53d8\u91cf= \u771f\u503c\u72b6\u6001-\u540d\u4e49\u72b6\u6001\u53d8\u91cf , \u8bef\u5dee\u72b6\u6001\u53d8\u91cf ESKF predicts a Gaussian estimate of the error-state ESKF \u4f18\u70b9 \uff1a error state\u4e2d\u65cb\u8f6c\u53d8\u91cf\u53ef\u4ee5\u7528\u6700\u5c0f\u8868\u793a\uff0c\u5373\u65cb\u8f6c\u5411\u91cf\u8868\u793a\uff0c\u6ca1\u6709\u591a\u4f59\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u907f\u514d\u5197\u4f59\u53d8\u91cf\u5e26\u6765\u7684singularity risk error-state system \u901a\u5e38\u90fd\u5728\u539f\u70b9\u9644\u8fd1\uff0c\u53ef\u4ee5\u907f\u514d\u4e07\u5411\u8282\u9501\uff0c\u5947\u5f02\u503c\u7b49\u95ee\u9898\uff0c\u4fdd\u8bc1linearization\u6bcf\u65f6\u6bcf\u523b\u90fd\u662f\u53ef\u884c\u7684 error state \u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u56e0\u6b64\u4e8c\u9636\u91cf\u53ef\u4ee5\u5ffd\u7565\uff0c\u96c5\u53ef\u6bd4\u7684\u8ba1\u7b97\u66f4\u5feb\u901f error state dynamics\u6bd4\u8f83\u6162\uff0c\u56e0\u4e3a\u5927\u4fe1\u53f7\u5728\u540d\u4e49\u52a8\u529b\u5b66\u4e2d\u88ab\u79ef\u5206\u4e86\uff0c\u5269\u4e0b\u7684error\u662f\u5c0f\u4fe1\u53f7\uff0c\u56e0\u6b64ESKF\u53ef\u4ee5\u5de5\u4f5c\u5728\u8f83\u4f4e\u7684\u9891\u7387\u4e0b ESKF\u6d41\u7a0b\uff1a In parallel with integration of the nominal state, the ESKF predicts a Gaussian estimate of the error-state. It only predicts, because by now no other measurement is available to correct these estimates. The filter correction is performed at the arrival of information other than IMU (e.g. GPS, vision, etc.), which is able to render the errors observable and which happens generally at a much lower rate than the integration phase. This correction provides a posterior Gaussian estimate of the error-state. After this, the error-state\u2019s mean is injected into the nominal-state, then reset to zero. The error-state\u2019s covariances matrix is conveniently updated to reflect this reset. The system goes on like this forever","title":"1. ESKF \u7b80\u4ecb"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#2","text":"\u771f\u503c\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \uff0c\u8fd9\u4e9b\u72b6\u6001\u662f\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u3002 \\[ \\begin{align} &\\text{Position:}&\\dot{p_t}&=v_t\\\\ &\\text{Velocity:}&\\dot{v_t}&=a_t=R_t(a_m-bias_{at}-\\eta_a)+g_t\\\\ &\\text{Quaternion:}&\\dot{q_t}&=\\frac{1}{2}q_t \\otimes \\omega_t=\\frac{1}{2}q_t \\otimes (\\omega_m-bias_{gt}-\\eta_g )\\\\ &\\text{Accelerometer bias:}&\\dot{bias}_{at}&=\\eta_{ba}(noise)\\\\ &\\text{Gyrometer bias:}&\\dot{bias}_{gt}&=\\eta_{bg}(noise)\\\\ &\\text{Gravity vector:}&\\dot{g_t}&=0\\\\ \\end{align} \\] \u5176\u4e2d\uff0c\u52a0\u901f\u5ea6at\u548c\u89d2\u901f\u5ea6wt\u662f\u7531IMU\u6d4b\u91cf\u503c\u8ba1\u7b97\u51fa\u6765\u7684\uff1a \\[ \\begin{align} a_m&=R_t^\\top(a_t-g_t)+bias_a+\\eta_a &\\Rightarrow a_t&=R_t(a_m-bias_a-\\eta_a)+g_t\\\\ \\omega_m&=\\omega_t+bias_g+\\eta_g&\\Rightarrow \\omega_t&=\\omega_m-bias_g-\\eta_g \\end{align} \\]","title":"2. \u771f\u503c\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#3","text":"\u540d\u4e49\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \uff0c\u8fd9\u4e9b\u72b6\u6001\u662f\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u3002 \\[ \\begin{align} &\\text{Position:}&\\dot{p}&=v\\\\ &\\text{Velocity:}&\\dot{v}&=R(a_m-bias_a)+g\\\\ &\\text{Quaternion:}&\\dot{q}&=\\frac{1}{2}q \\otimes (\\omega_m-bias_g)\\\\ &\\text{Accelerometer bias:}&\\dot{bias}_{a}&=0\\\\ &\\text{Gyrometer bias:}&\\dot{bias}_{g}&=0\\\\ &\\text{Gravity vector:}&\\dot{g_t}&=0\\\\ \\end{align} \\]","title":"3.\u540d\u4e49\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#4","text":"\u8bef\u5dee\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b (error-state kinematics) \\[ \\begin{align} &\\text{Position:}& \\delta \\dot{p}&=\\delta v\\\\ &\\text{Velocity:}& \\delta \\dot{v}&=-R[a_m-bias_a]_{times}\\delta \\theta -R \\delta a_b +\\delta g -R\\eta_a\\\\ &\\text{Quaternion:}& \\delta \\dot{\\theta}&=-[\\omega_m-bias_g]_{\\times}\\delta \\theta - \\delta bias_g - \\eta_g\\\\ &\\text{Accelerometer bias:}& \\delta \\dot{bias}_{a}&=\\eta_{ba}\\\\ &\\text{Gyrometer bias:}& \\delta \\dot{bias}_{g}&=\\eta_{bg}\\\\ &\\text{Gravity vector:}& \\delta \\dot{g}&=0\\\\ \\end{align} \\]","title":"4.\u8bef\u5dee\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#linear-velocity-error","text":"\\[ \\begin{align} R_t& = R(I+[\\delta \\theta]_{\\times})\\\\ bias_{at}&=bias_a+\\delta bias_a\\\\ g_{t}&=g+\\delta g\\\\ a_B& \\doteq a_m-bias_a\\\\ \\delta a_B&\\doteq -\\delta bias_a-\\eta_{ba}\\\\ \\Rightarrow \\dot{v}&=R a_B +g\\\\ \\dot{v}+\\dot{\\delta v}=\\dot{v_t}&=R_t(a_m-bias_{at}-\\eta_a)+g_t\\\\ &=R(I+[\\delta \\theta]_{\\times})(\\underbrace{a_m-bias_a}_{a_B}+\\underbrace{-\\delta bias_a-\\eta_a}_{\\delta a_B})+g_t\\\\ &=R(I+[\\delta \\theta]_{\\times})(a_B+\\delta a_B)+g+\\delta g\\\\ \\Rightarrow \\cancel{R a_B} +\\cancel{g} +\\dot{\\delta v}=\\dot{v_t}&=\\cancel{R a_B}+R[\\delta \\theta]_{\\times}a_B+R\\delta a_B+R[\\delta \\theta]_{\\times}\\delta a_B+\\cancel{g}+\\delta g\\\\ \\Rightarrow \\dot{\\delta v}&=R[\\delta \\theta]_{\\times}a_B+R\\delta a_B+\\cancel{R[\\delta \\theta]_{\\times}\\delta a_B}(\u4e8c\u9636\u5c0f\u91cf)+\\delta g\\\\ &=-R[a_B]_{\\times}\\delta \\theta+R\\delta a_B+\\delta g\\\\ &=-R[a_m-bias_a]_{\\times}\\delta \\theta+R(-\\delta bias_a-\\eta_{ba})+\\delta g\\\\ \\dot{\\delta v}&=-R[a_m-bias_a]_{\\times}\\delta \\theta-R\\delta bias_a+\\delta g-R\\eta_{ba}\\\\ \\end{align} \\] \u5982\u679c\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u662f\u540c\u578b\u53f7\u7684\uff0c\u53ef\u4ee5\u5047\u8bbe\u5176\u52a0\u901f\u5ea6\u8ba1\u566a\u58f0\u662f\u72ec\u7acb\u540c\u5206\u5e03\u4e14\u5404\u9879\u540c\u6027\u7684\uff0c\u5373\u5176\u566a\u58f0\u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u4e0e\u65cb\u8f6c\u65e0\u5173\u3002 \u5373 \\(\\eta_{ba}=R \\eta_{ba}\\) \uff0c\u5219\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\uff1a \\[ \\dot{\\delta v}=-R[a_m-bias_a]_{\\times}\\delta \\theta-R\\delta bias_a+\\delta g-\\underline{\\eta_{ba}}\\\\ \\]","title":"\u901f\u5ea6\u8bef\u5dee(Linear velocity error) \u52a8\u529b\u5b66\u63a8\u5bfc:"},{"location":"Sensor-Fusion/ESKF%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#orientation-error","text":"\\[ \\begin{align} (\u5b9a\u4e49)q_t&=q \\otimes \\delta q\\\\ \\dot{q_t}&=\\frac{1}{2}q_t \\otimes \\omega_t\\\\ \\dot{q}&=\\frac{1}{2}q \\otimes \\omega\\\\ bias_{gt}&=bias_g+\\delta bias_g\\\\ (\u5b9a\u4e49)\\omega_t &= \\omega + \\delta \\omega \\\\ (\u8ba1\u7b97)\\omega_t &=\\omega_m-bias_{gt}-\\eta_g \\\\ &=\\underbrace{\\omega_m-bias_g}_{\\omega}+\\underbrace{-\\delta bias_g-\\eta_g}_{\\delta\\omega}\\\\ \\frac{1}{2}q_t \\otimes \\omega_t=\\dot{q_t}&=(\\dot{q \\otimes \\delta q})\\\\ \\Rightarrow\\frac{1}{2}q \\otimes \\delta q \\otimes \\omega_t=\\dot{q_t}&=\\dot{q} \\otimes \\delta q+q \\otimes \\dot{\\delta q}\\\\ \\Rightarrow\\frac{1}{2} \\cancel{q \\otimes} \\delta q \\otimes \\omega_t&=\\frac{1}{2} \\cancel{q \\otimes} \\omega \\otimes \\delta q+\\cancel{q \\otimes} \\dot{\\delta q}\\\\ \\Rightarrow 2\\dot{\\delta q} &=\\delta q \\otimes \\omega_t-\\omega \\otimes \\delta q \\end{align} \\] \u56db\u5143\u6570\u4e58\u6cd5 \\([\\mathbf{p}]_L=p_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{p}_v^\\top\\\\\\mathbf{p}_v&[\\mathbf{p}_v]_{\\times}\\end{bmatrix}\\) , \\([\\mathbf{q}]_R=q_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{q}_v^\\top\\\\\\mathbf{q}_v&-[\\mathbf{q}_v]_{\\times}\\end{bmatrix}\\) \u5c06\u5411\u91cf(\u7eaf\u865a\u56db\u5143\u6570)\u7684\u56db\u5143\u6570\u4e58\u6cd5\u5e26\u5165\u6253\u5f00: \\[ \\begin{align} \\Rightarrow 2\\dot{\\delta q} &=[\\omega_t]_{R}\\delta q -[\\omega]_L\\delta q\\\\ &=\\begin{bmatrix} 0&-\\omega_t^\\top\\\\ \\omega_t&-[\\omega_t]_{\\times} \\end{bmatrix}\\delta q - \\begin{bmatrix} 0&-\\omega^\\top\\\\ \\omega & [\\omega]_{\\times} \\end{bmatrix}\\delta q\\\\ &=\\begin{bmatrix} 0&-(\\omega_t-\\omega)^\\top\\\\ \\omega_t-\\omega&-[\\omega_t+\\omega]_{\\times} \\end{bmatrix}\\begin{bmatrix}1 \\\\ \\frac{1}{2}\\delta\\theta\\end{bmatrix}\\\\ \\Rightarrow 2\\begin{bmatrix}0 \\\\ \\frac{1}{2}\\delta\\dot{\\theta}\\end{bmatrix}&=\\begin{bmatrix} 0&-\\delta\\omega^\\top\\\\ \\delta\\omega &-[\\delta\\omega+2\\omega]_{\\times} \\end{bmatrix}\\begin{bmatrix}1 \\\\ \\frac{1}{2}\\delta\\theta\\end{bmatrix}\\\\ \\Rightarrow & \\begin{cases} 0 = -\\delta\\omega^\\top \\delta\\theta(\u4e8c\u9636\u5c0f\u91cf\u5ffd\u7565)\\\\ \\delta\\dot{\\theta} = \\delta\\omega -[\\delta\\omega+2\\omega]_{\\times}\\frac{1}{2}\\delta\\theta \\end{cases}\\\\ \\Rightarrow \\delta\\dot{\\theta} &= \\delta\\omega \\cancel{-\\frac{1}{2}[\\delta\\omega]_{\\times}\\delta\\theta} -[\\omega]_{\\times}\\delta\\theta\\\\ \\Rightarrow \\delta\\dot{\\theta} &= \\delta\\omega-[\\omega]_{\\times}\\delta\\theta\\\\ &=-[\\omega_m-bias_g]_{\\times}\\delta\\theta-\\delta bias_g-\\eta_g\\\\ \\end{align} \\]","title":"\u65b9\u5411\u8bef\u5dee(orientation error) \u52a8\u529b\u5b66\u63a8\u5bfc:"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/","tags":["ESKF"],"text":"5.\u79bb\u6563\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b \u00b6 \u8fde\u7eed\u52a8\u529b\u5b66\u65b9\u7a0b\u79ef\u5206\u53ef\u5f97\u79bb\u6563\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u6709\u4e24\u90e8\u5206\uff1a 1. \u540d\u4e49\u72b6\u6001\u7684\u79ef\u5206 2. \u8bef\u5dee\u53d8\u91cf\u7684\u79ef\u5206 \u6570\u503c\u79ef\u5206\u65b9\u6cd5:\u9f99\u683c\u5e93\u5854\u6cd5(Runge-Kutta) \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e3a\u8fde\u7eed\u72b6\u6001\u65b9\u7a0b\u5230\u79bb\u6563\u72b6\u6001\u65b9\u57ce\u7684\u8f6c\u5316\uff1a \\[ x(t+\\Delta t)=x(t)+\\int_t^{t+\\Delta t} f(\\tau,x(\\tau)) d\\tau \\] 1. \u6b27\u62c9\u6cd5(The Euler method) \u00b6 \u6b27\u62c9\u6cd5\u5047\u8bbe\u51fd\u6570\u5bfc\u6570f()\u5728\u4e24\u4e2a\u65f6\u523b\u4e4b\u95f4\u4e0d\u53d8: \\[ x_{n+1}=x_n+\\Delta t \\cdot f(t_n,x_n) \\] \u53ef\u4ee5\u770b\u4f5c\u662f1\u6b65\u7684\u9f99\u683c\u5e93\u5854\u6cd5\uff1a \\[ \\begin{align} k_1&=f(t_n,x_n)\\\\ x_{n+1}&=x_n+\\Delta t \\cdot k_1 \\end{align} \\] 2. \u4e2d\u503c\u6cd5(The midpoint method) \u00b6 \u6b27\u62c9\u6cd5\u5047\u8bbe\u51fd\u6570\u5bfc\u6570f()\u53d6\u5728\u4e24\u4e2a\u65f6\u523b\u4e2d\u70b9\u5904\u7684\u503c: \\[ x_{n+1}=x_n+\\Delta t \\cdot f(t_n+\\frac{1}{2}\\Delta t,x_n+\\frac{1}{2}\\Delta t \\cdot f(t_n,x_n)) \\] \u53ef\u4ee5\u770b\u4f5c\u662f2\u6b65\u7684\u9f99\u683c\u5e93\u5854\u6cd5\uff1a \\[ \\begin{align} k_1&=f(t_n,x_n)\\\\ x(t_n+\\frac{1}{2}\\Delta t)&=x_n+\\frac{1}{2}\\Delta t \\cdot k_1\\\\ k_2=f(t_n+&\\frac{1}{2}\\Delta t, x(t_n+\\frac{1}{2}\\Delta t))\\\\ x_{n+1}&=x_n+\\Delta t \\cdot k_2\\\\ \\end{align} \\] 3. RK4 method \u00b6 \\[ \\begin{align} x_{n+1}&=x_n+\\frac{\\Delta t}{6}(k_1+2k_2+2k_3+k_4)\\\\ k_1&=f(t_n,x_n)\\\\ k_2&=f(t_n+\\frac{\\Delta t}{2}, x_n+\\frac{\\Delta t}{2} \\cdot k_1)\\\\ k_3&=f(t_n+\\frac{\\Delta t}{2}, x_n+\\frac{\\Delta t}{2} \\cdot k_2)\\\\ k_4&=f(t_n+\\Delta t, x_n+\\Delta t \\cdot k_3)\\\\ \\end{align} \\] \u95ed\u5f0f\u79ef\u5206\u6c42\u89e3\u6cd5(Closed-form integration methods) \u8003\u8651\u4e00\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b: \\(\\dot{x}(t)=A \\cdot x(t)\\) \uff0c \u5176\u89e3\u4e3a\uff1a \\[ x_{n+1}=e^{A\\Delta t}x_n=\\Phi x_n \\] \\(\\Phi\\) \u79f0\u4e3a\u8f6c\u5316\u77e9\u9635(Transition matrix),\u53ef\u4ee5\u7528\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\uff1a \\[ \\Phi=e^{A\\Delta t}=I+A\\Delta t + \\frac{1}{2}A^2 \\Delta t^2+\\dots=\\sum_0^\\infty\\frac{1}{k!}A^k\\Delta t^k \\] 1.\u89d2\u5ea6\u8bef\u5dee(the angular error)\u7684\u79ef\u5206 \u00b6 \u5c06\u566a\u58f0\u9879\u820d\u53bb,\u5e76\u79ef\u5206: \\[ \\begin{align} \\dot{\\delta \\theta}&=-[\\omega]_{\\times}\\delta \\theta \\\\ \uff08\u79ef\u5206\uff09\\Rightarrow \\Phi &= e^{-[\\omega]_{\\times} \\Delta t}\\\\ &=I-[u]_{\\times} sin \\Delta \\theta + [u]_{\\times}^2(1-cos\\Delta\\theta)\\\\ &\\triangleq R\\{-\\mathbf{u} \\Delta \\theta\\}=R\\{\\mathbf{\\omega} \\Delta t\\}^\\top \\end{align} \\] \u5176\u4e2d \\(\\mathbf{\\omega} \\Delta t \\triangleq \\mathbf{u} \\Delta \\theta\\) \uff0c \\(\\mathbf{u}\\) \u4e3a\u5355\u4f4d\u5411\u91cf(\u65cb\u8f6c\u8f74)\uff0c \\(\\Delta \\theta\\) \u4e3a\u8f6c\u89d2\u3002\u6700\u540e\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65cb\u8f6c\u5411\u91cf \\(R\\{\\mathbf{\\omega} \\Delta t\\}^\\top\\) \u3002 \u540d\u4e49\u72b6\u6001\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b (nominal state kinematics) \u00b6 \\[ \\begin{align} p & \\leftarrow p +\\delta v \\Delta t + \\frac{1}{2}[R(a_m-a_b)+g]\\Delta t^2\\\\ v &\\leftarrow v+[R(a_m-a_b)+g]\\Delta t\\\\ q&\\leftarrow q \\otimes quaternion\\{(\\omega_m-\\omega_b)\\Delta t\\}\\\\ bias_{a}&\\leftarrow bias_{a} \\\\ bias_{g}&\\leftarrow bias_{g}\\\\ g &\\leftarrow g\\\\ \\end{align} \\] \u8bef\u5dee\u72b6\u6001\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b (error-state kinematics) \u00b6 \\[ \\begin{align} \\delta p& \\leftarrow \\delta p +\\delta v \\Delta t\\\\ \\delta v&\\leftarrow \\delta v+(-R[a_m-bias_a]_{times}\\delta \\theta -R \\delta a_b +\\delta g)\\Delta t + v_i\\\\ \\delta \\theta&\\leftarrow R\\{(\\omega_m-bias_g) \\Delta t\\}^\\top \\delta \\theta - \\delta bias_g\\Delta t + \\theta_i\\\\ \\delta bias_{a}&\\leftarrow \\delta bias_{a} +a_i\\\\ \\delta bias_{g}&\\leftarrow \\delta bias_{g} + \\omega_i\\\\ \\delta g &\\leftarrow \\delta g\\\\ \\end{align} \\] \\([v_i,\\theta_i,a_i,\\omega_i]\\) \u662f\u968f\u673a\u8109\u51b2\u6270\u52a8(random impulses)\u79ef\u5206\u6240\u5f97\uff0c\u7531\u9ad8\u65af\u8fc7\u7a0b\u63cf\u8ff0\u3002\u5747\u503c\u4e3a0,\u65b9\u5dee\u7531\u534f\u65b9\u5dee\u79ef\u5206\u800c\u6765\u3002 \u968f\u673a\u566a\u58f0\u548c\u6270\u52a8\u7684\u79ef\u5206 \u8003\u8651\u4e00\u4e2a\u8fde\u7eed\u7cfb\u7edf \\(\\dot x = f (x, u, w)\\) , \u6d4b\u91cf\u503c \\(u_m = u+ \\eta_u\\) , \u79bb\u6563\u5316\u65f6\uff0c\u6240\u6709\u63a7\u5236\u91cf\u90fd\u5728 \\(n\\Delta t\\) \u65f6\u523b\u88ab\u91c7\u6837\uff0c\u5373: \\(u_{m,n}=u_m(n \\Delta t) = u(n \\Delta t) + \\tilde{u}(n \\Delta t)\\) ,\u663e\u7136\u8fd9\u4e00\u90e8\u5206\u6d4b\u91cf\u503c\u5728\u79ef\u5206\u533a\u95f4\u662f\u6052\u5b9a\u7684\uff0c\u56e0\u6b64\u4f5c\u7528\u5728u\u4e0a\u7684\u566a\u58f0\u6c34\u5e73\u4e5f\u662f\u6052\u5b9a\u7684\uff0c\u6240\u4ee5\u79ef\u5206\u540e\u65b9\u5dee\u4e0d\u53d8\u3002w\u4e3a\u968f\u673a\u6270\u52a8\uff0c\u4ece\u672a\u88ab\u91c7\u6837\u3002\u56e0\u6b64\u79ef\u5206\u65f6\uff0c\u8fd9\u51e0\u79cd\u566a\u58f0\u7684\u7ed3\u679c\u4e5f\u662f\u4e0d\u540c\u7684\u3002 \\[ \\begin{align} \u7ebf\u6027\u5316: \\dot{\\delta x} &= A \\delta x + B \\tilde u + C w^c\\\\ \\delta x_{n+1} &=\\underbrace{\\delta x + \\int A \\delta x}_1 + \\underbrace{\\int B \\tilde u}_2 +\\underbrace{\\int C w^c}_3\\\\ A&=\\left .\\frac{d f }{d \\delta x} \\right |_{x,u_m}\\\\ B&=\\left .\\frac{d f }{d \\tilde u} \\right |_{x,u_m}\\\\ C&=\\left .\\frac{d f }{d w} \\right |_{x,u_m}\\\\ \\end{align} \\] \u5176\u4e2d\u6709\u4e09\u90e8\u5206: \\(\\delta x + \\int A \\delta x=\\Phi \\delta x\\) \uff0c\u4e3a\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u79ef\u5206\u4e0a\u9762\u5df2\u7ecf\u8bc1\u660e\u8fc7\u4e86 \\(\\int B \\tilde u=B \\Delta t \\tilde u\\) \uff0c \u662f\u7531\u4e8eu\u4e00\u65e6\u91c7\u6837\uff0c\u4ed6\u7684\u6027\u8d28\u5c31\u88ab\u786e\u5b9a\u4e86\uff0c\u56e0\u6b64\u6309\u7167\u5e38\u6570\u6c42\u89e3 \\(w^n \\triangleq \\int_{n \\Delta t}^{(n+1) \\Delta t} \\omega(\\tau)d \\tau \\sim (0, W \\Delta t)\\) \uff0c \u968f\u673a\u8fc7\u7a0b\u7684\u79ef\u5206 \u7531\u6b64\uff0cESKF \u7684\u9884\u6d4b\u8fc7\u7a0b\u4f1a\u8fed\u4ee3\u8bef\u5dee\u72b6\u6001\u7684\u5e73\u5747\u503c(mean)\u548c\u534f\u65b9\u5dee(covariance): \\[ \\begin{align} \\hat{\\delta x_{n+1}} & = F_x \\hat{\\delta x_{n}}+F_u \\tilde{u}_n + F_w w_n\\\\ \u671f\u671b\uff1a\\hat{\\delta x_{n+1}} & = F_x \\hat{\\delta x_{n}}\\\\ \u65b9\u5dee\uff1aP&=F_x P_n F_x^\\top + F_u U F_u^\\top +F_w W F_w^\\top\\\\ &=e^{A\\Delta t}P_n (e^{A\\Delta t})^\\top + \\Delta t^2 B U^c B^\\top + \\Delta t C W^c C^\\top \\end{align} \\] \u5c06\u8bef\u5dee\u52a8\u529b\u5b66\u7cfb\u7edf\u91cd\u65b0\u5199\u6210\u72b6\u6001\u65b9\u7a0b\u7684\u5f62\u5f0f\uff1a \u72b6\u6001: \\(x=\\begin{bmatrix} p\\\\ v\\\\ q\\\\ bias_a\\\\ bias_g\\\\ g \\end{bmatrix}\\) \u4e00\u9636\u5bfc\u6570: \\(\\delta x=\\begin{bmatrix} \\delta p\\\\ \\delta v\\\\ \\delta \\theta\\\\ \\delta bias_a\\\\ \\delta bias_g\\\\ \\delta g \\end{bmatrix}\\) \u8f93\u5165\uff08\u6d4b\u91cf\u503c\uff09: \\(u_m=\\begin{bmatrix} a_m\\\\ \\omega_m\\\\ \\end{bmatrix}\\) \u566a\u58f0: \\(i=\\begin{bmatrix} v_i\\\\ \\theta_i\\\\ a_i\\\\ \\omega_i \\end{bmatrix}\\) \u5f97\u5230: \\[ \\delta x \\leftarrow F_x(x,u_m)\\cdot \\delta x+F_i \\cdot i \\]","title":"ESKF\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#5","text":"\u8fde\u7eed\u52a8\u529b\u5b66\u65b9\u7a0b\u79ef\u5206\u53ef\u5f97\u79bb\u6563\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u6709\u4e24\u90e8\u5206\uff1a 1. \u540d\u4e49\u72b6\u6001\u7684\u79ef\u5206 2. \u8bef\u5dee\u53d8\u91cf\u7684\u79ef\u5206 \u6570\u503c\u79ef\u5206\u65b9\u6cd5:\u9f99\u683c\u5e93\u5854\u6cd5(Runge-Kutta) \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e3a\u8fde\u7eed\u72b6\u6001\u65b9\u7a0b\u5230\u79bb\u6563\u72b6\u6001\u65b9\u57ce\u7684\u8f6c\u5316\uff1a \\[ x(t+\\Delta t)=x(t)+\\int_t^{t+\\Delta t} f(\\tau,x(\\tau)) d\\tau \\]","title":"5.\u79bb\u6563\u72b6\u6001\u52a8\u529b\u5b66\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#1-the-euler-method","text":"\u6b27\u62c9\u6cd5\u5047\u8bbe\u51fd\u6570\u5bfc\u6570f()\u5728\u4e24\u4e2a\u65f6\u523b\u4e4b\u95f4\u4e0d\u53d8: \\[ x_{n+1}=x_n+\\Delta t \\cdot f(t_n,x_n) \\] \u53ef\u4ee5\u770b\u4f5c\u662f1\u6b65\u7684\u9f99\u683c\u5e93\u5854\u6cd5\uff1a \\[ \\begin{align} k_1&=f(t_n,x_n)\\\\ x_{n+1}&=x_n+\\Delta t \\cdot k_1 \\end{align} \\]","title":"1. \u6b27\u62c9\u6cd5(The Euler method)"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#2-the-midpoint-method","text":"\u6b27\u62c9\u6cd5\u5047\u8bbe\u51fd\u6570\u5bfc\u6570f()\u53d6\u5728\u4e24\u4e2a\u65f6\u523b\u4e2d\u70b9\u5904\u7684\u503c: \\[ x_{n+1}=x_n+\\Delta t \\cdot f(t_n+\\frac{1}{2}\\Delta t,x_n+\\frac{1}{2}\\Delta t \\cdot f(t_n,x_n)) \\] \u53ef\u4ee5\u770b\u4f5c\u662f2\u6b65\u7684\u9f99\u683c\u5e93\u5854\u6cd5\uff1a \\[ \\begin{align} k_1&=f(t_n,x_n)\\\\ x(t_n+\\frac{1}{2}\\Delta t)&=x_n+\\frac{1}{2}\\Delta t \\cdot k_1\\\\ k_2=f(t_n+&\\frac{1}{2}\\Delta t, x(t_n+\\frac{1}{2}\\Delta t))\\\\ x_{n+1}&=x_n+\\Delta t \\cdot k_2\\\\ \\end{align} \\]","title":"2. \u4e2d\u503c\u6cd5(The midpoint method)"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#3-rk4-method","text":"\\[ \\begin{align} x_{n+1}&=x_n+\\frac{\\Delta t}{6}(k_1+2k_2+2k_3+k_4)\\\\ k_1&=f(t_n,x_n)\\\\ k_2&=f(t_n+\\frac{\\Delta t}{2}, x_n+\\frac{\\Delta t}{2} \\cdot k_1)\\\\ k_3&=f(t_n+\\frac{\\Delta t}{2}, x_n+\\frac{\\Delta t}{2} \\cdot k_2)\\\\ k_4&=f(t_n+\\Delta t, x_n+\\Delta t \\cdot k_3)\\\\ \\end{align} \\] \u95ed\u5f0f\u79ef\u5206\u6c42\u89e3\u6cd5(Closed-form integration methods) \u8003\u8651\u4e00\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b: \\(\\dot{x}(t)=A \\cdot x(t)\\) \uff0c \u5176\u89e3\u4e3a\uff1a \\[ x_{n+1}=e^{A\\Delta t}x_n=\\Phi x_n \\] \\(\\Phi\\) \u79f0\u4e3a\u8f6c\u5316\u77e9\u9635(Transition matrix),\u53ef\u4ee5\u7528\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\uff1a \\[ \\Phi=e^{A\\Delta t}=I+A\\Delta t + \\frac{1}{2}A^2 \\Delta t^2+\\dots=\\sum_0^\\infty\\frac{1}{k!}A^k\\Delta t^k \\]","title":"3. RK4 method"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#1the-angular-error","text":"\u5c06\u566a\u58f0\u9879\u820d\u53bb,\u5e76\u79ef\u5206: \\[ \\begin{align} \\dot{\\delta \\theta}&=-[\\omega]_{\\times}\\delta \\theta \\\\ \uff08\u79ef\u5206\uff09\\Rightarrow \\Phi &= e^{-[\\omega]_{\\times} \\Delta t}\\\\ &=I-[u]_{\\times} sin \\Delta \\theta + [u]_{\\times}^2(1-cos\\Delta\\theta)\\\\ &\\triangleq R\\{-\\mathbf{u} \\Delta \\theta\\}=R\\{\\mathbf{\\omega} \\Delta t\\}^\\top \\end{align} \\] \u5176\u4e2d \\(\\mathbf{\\omega} \\Delta t \\triangleq \\mathbf{u} \\Delta \\theta\\) \uff0c \\(\\mathbf{u}\\) \u4e3a\u5355\u4f4d\u5411\u91cf(\u65cb\u8f6c\u8f74)\uff0c \\(\\Delta \\theta\\) \u4e3a\u8f6c\u89d2\u3002\u6700\u540e\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65cb\u8f6c\u5411\u91cf \\(R\\{\\mathbf{\\omega} \\Delta t\\}^\\top\\) \u3002","title":"1.\u89d2\u5ea6\u8bef\u5dee(the angular error)\u7684\u79ef\u5206"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#nominal-state-kinematics","text":"\\[ \\begin{align} p & \\leftarrow p +\\delta v \\Delta t + \\frac{1}{2}[R(a_m-a_b)+g]\\Delta t^2\\\\ v &\\leftarrow v+[R(a_m-a_b)+g]\\Delta t\\\\ q&\\leftarrow q \\otimes quaternion\\{(\\omega_m-\\omega_b)\\Delta t\\}\\\\ bias_{a}&\\leftarrow bias_{a} \\\\ bias_{g}&\\leftarrow bias_{g}\\\\ g &\\leftarrow g\\\\ \\end{align} \\]","title":"\u540d\u4e49\u72b6\u6001\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b (nominal state kinematics)"},{"location":"Sensor-Fusion/ESKF%E7%A6%BB%E6%95%A3%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%96%B9%E7%A8%8B/#error-state-kinematics","text":"\\[ \\begin{align} \\delta p& \\leftarrow \\delta p +\\delta v \\Delta t\\\\ \\delta v&\\leftarrow \\delta v+(-R[a_m-bias_a]_{times}\\delta \\theta -R \\delta a_b +\\delta g)\\Delta t + v_i\\\\ \\delta \\theta&\\leftarrow R\\{(\\omega_m-bias_g) \\Delta t\\}^\\top \\delta \\theta - \\delta bias_g\\Delta t + \\theta_i\\\\ \\delta bias_{a}&\\leftarrow \\delta bias_{a} +a_i\\\\ \\delta bias_{g}&\\leftarrow \\delta bias_{g} + \\omega_i\\\\ \\delta g &\\leftarrow \\delta g\\\\ \\end{align} \\] \\([v_i,\\theta_i,a_i,\\omega_i]\\) \u662f\u968f\u673a\u8109\u51b2\u6270\u52a8(random impulses)\u79ef\u5206\u6240\u5f97\uff0c\u7531\u9ad8\u65af\u8fc7\u7a0b\u63cf\u8ff0\u3002\u5747\u503c\u4e3a0,\u65b9\u5dee\u7531\u534f\u65b9\u5dee\u79ef\u5206\u800c\u6765\u3002 \u968f\u673a\u566a\u58f0\u548c\u6270\u52a8\u7684\u79ef\u5206 \u8003\u8651\u4e00\u4e2a\u8fde\u7eed\u7cfb\u7edf \\(\\dot x = f (x, u, w)\\) , \u6d4b\u91cf\u503c \\(u_m = u+ \\eta_u\\) , \u79bb\u6563\u5316\u65f6\uff0c\u6240\u6709\u63a7\u5236\u91cf\u90fd\u5728 \\(n\\Delta t\\) \u65f6\u523b\u88ab\u91c7\u6837\uff0c\u5373: \\(u_{m,n}=u_m(n \\Delta t) = u(n \\Delta t) + \\tilde{u}(n \\Delta t)\\) ,\u663e\u7136\u8fd9\u4e00\u90e8\u5206\u6d4b\u91cf\u503c\u5728\u79ef\u5206\u533a\u95f4\u662f\u6052\u5b9a\u7684\uff0c\u56e0\u6b64\u4f5c\u7528\u5728u\u4e0a\u7684\u566a\u58f0\u6c34\u5e73\u4e5f\u662f\u6052\u5b9a\u7684\uff0c\u6240\u4ee5\u79ef\u5206\u540e\u65b9\u5dee\u4e0d\u53d8\u3002w\u4e3a\u968f\u673a\u6270\u52a8\uff0c\u4ece\u672a\u88ab\u91c7\u6837\u3002\u56e0\u6b64\u79ef\u5206\u65f6\uff0c\u8fd9\u51e0\u79cd\u566a\u58f0\u7684\u7ed3\u679c\u4e5f\u662f\u4e0d\u540c\u7684\u3002 \\[ \\begin{align} \u7ebf\u6027\u5316: \\dot{\\delta x} &= A \\delta x + B \\tilde u + C w^c\\\\ \\delta x_{n+1} &=\\underbrace{\\delta x + \\int A \\delta x}_1 + \\underbrace{\\int B \\tilde u}_2 +\\underbrace{\\int C w^c}_3\\\\ A&=\\left .\\frac{d f }{d \\delta x} \\right |_{x,u_m}\\\\ B&=\\left .\\frac{d f }{d \\tilde u} \\right |_{x,u_m}\\\\ C&=\\left .\\frac{d f }{d w} \\right |_{x,u_m}\\\\ \\end{align} \\] \u5176\u4e2d\u6709\u4e09\u90e8\u5206: \\(\\delta x + \\int A \\delta x=\\Phi \\delta x\\) \uff0c\u4e3a\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u79ef\u5206\u4e0a\u9762\u5df2\u7ecf\u8bc1\u660e\u8fc7\u4e86 \\(\\int B \\tilde u=B \\Delta t \\tilde u\\) \uff0c \u662f\u7531\u4e8eu\u4e00\u65e6\u91c7\u6837\uff0c\u4ed6\u7684\u6027\u8d28\u5c31\u88ab\u786e\u5b9a\u4e86\uff0c\u56e0\u6b64\u6309\u7167\u5e38\u6570\u6c42\u89e3 \\(w^n \\triangleq \\int_{n \\Delta t}^{(n+1) \\Delta t} \\omega(\\tau)d \\tau \\sim (0, W \\Delta t)\\) \uff0c \u968f\u673a\u8fc7\u7a0b\u7684\u79ef\u5206 \u7531\u6b64\uff0cESKF \u7684\u9884\u6d4b\u8fc7\u7a0b\u4f1a\u8fed\u4ee3\u8bef\u5dee\u72b6\u6001\u7684\u5e73\u5747\u503c(mean)\u548c\u534f\u65b9\u5dee(covariance): \\[ \\begin{align} \\hat{\\delta x_{n+1}} & = F_x \\hat{\\delta x_{n}}+F_u \\tilde{u}_n + F_w w_n\\\\ \u671f\u671b\uff1a\\hat{\\delta x_{n+1}} & = F_x \\hat{\\delta x_{n}}\\\\ \u65b9\u5dee\uff1aP&=F_x P_n F_x^\\top + F_u U F_u^\\top +F_w W F_w^\\top\\\\ &=e^{A\\Delta t}P_n (e^{A\\Delta t})^\\top + \\Delta t^2 B U^c B^\\top + \\Delta t C W^c C^\\top \\end{align} \\] \u5c06\u8bef\u5dee\u52a8\u529b\u5b66\u7cfb\u7edf\u91cd\u65b0\u5199\u6210\u72b6\u6001\u65b9\u7a0b\u7684\u5f62\u5f0f\uff1a \u72b6\u6001: \\(x=\\begin{bmatrix} p\\\\ v\\\\ q\\\\ bias_a\\\\ bias_g\\\\ g \\end{bmatrix}\\) \u4e00\u9636\u5bfc\u6570: \\(\\delta x=\\begin{bmatrix} \\delta p\\\\ \\delta v\\\\ \\delta \\theta\\\\ \\delta bias_a\\\\ \\delta bias_g\\\\ \\delta g \\end{bmatrix}\\) \u8f93\u5165\uff08\u6d4b\u91cf\u503c\uff09: \\(u_m=\\begin{bmatrix} a_m\\\\ \\omega_m\\\\ \\end{bmatrix}\\) \u566a\u58f0: \\(i=\\begin{bmatrix} v_i\\\\ \\theta_i\\\\ a_i\\\\ \\omega_i \\end{bmatrix}\\) \u5f97\u5230: \\[ \\delta x \\leftarrow F_x(x,u_m)\\cdot \\delta x+F_i \\cdot i \\]","title":"\u8bef\u5dee\u72b6\u6001\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b (error-state kinematics)"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/","tags":["ESKF"],"text":"ESKF \u9884\u6d4b\u65b9\u7a0b \u00b6 \\[ \\begin{align} \\delta \\hat{x} &\\leftarrow F_x(x,u_m) \\cdot \\delta \\hat{x}\\\\ P &\\leftarrow F_x P F_x^\\top +F_i Q_i F_i^\\top\\\\ \\end{align} \\] \u56e0\u6b64 \\(\\delta x\\) \u6ee1\u8db3\u5206\u5e03\uff1a \\(\\delta x \\sim \\mathcal N(\\hat{\\delta x} ,P)\\) \u5176\u4e2dFx\u548c Fi \u662ff()\u76f8\u5bf9\u4e8e\u8bef\u5dee\u548c\u8bef\u5dee\u6270\u52a8\u7684\u96c5\u53ef\u6bd4: \\[ \\begin{align} F_x &= \\frac{\\partial f}{\\partial \\delta x} = \\begin{bmatrix} I & I \\Delta t & 0 & 0 & 0 & 0\\\\ 0 & I & -R[a_m-bias_a]_{times}\\Delta t & -R\\Delta t & 0 & I \\Delta t\\\\ 0 & 0 & R\\{(\\omega_m-bias_g) \\Delta t\\}^\\top & 0 & -I\\Delta t & 0\\\\ 0& 0& 0& I& 0& 0\\\\ 0& 0& 0& 0& I& 0\\\\ 0& 0& 0& 0& 0& I\\\\ \\end{bmatrix}\\\\ F_i&= \\frac{\\partial f}{\\partial i}=\\begin{bmatrix} 0& 0& 0& 0\\\\ I& 0& 0& 0\\\\ 0& I& 0& 0\\\\ 0& 0& I& 0\\\\ 0& 0& 0& I\\\\ 0& 0& 0& 0 \\end{bmatrix},\\quad Q_i= \\begin{bmatrix} \\mathbf{V_i}& 0& 0& 0\\\\ 0& \\mathbf{\\Theta_i}& 0& 0\\\\ 0& 0& \\mathbf{A_i}& 0\\\\ 0& 0& 0& \\mathbf{\\Omega_i} \\end{bmatrix}\\\\ \u5176\u4e2d\uff1a\\mathbf{V_i}&=\\Delta t^2\\sigma_{\\eta_a}^2 \\mathbf{I}\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u566a\u58f0\\\\ \\mathbf{\\Theta_i}&=\\Delta t^2\\sigma_{\\eta_g}^2\\mathbf{I}\u89d2\u901f\u5ea6\u8ba1\u6d4b\u91cf\u566a\u58f0\\\\ \\mathbf{A_i}&=\\Delta t\\sigma_{\\eta_{ba}}^2\\mathbf{I}\u52a0\u901f\u5ea6\u8ba1bias\u968f\u673a\u6e38\u8d70\u566a\u58f0\\\\ \\mathbf{\\Omega_i}&=\\Delta t\\sigma_{\\eta_{bg}}^2\\mathbf{I}\u89d2\u901f\u5ea6\u8ba1bias\u968f\u673a\u6e38\u8d70\u566a\u58f0 \\end{align} \\] \u878d\u5408IMU\u548c\u5176\u5b83\u4f20\u611f\u5668 \u00b6 \u5728\u4e4b\u524d\u7684\u63a8\u5bfc\u4e2d\uff0cIMU\u7ed9\u51fa\u4e86ESKF\u7684\u9884\u6d4b\u90e8\u5206\u3002\u5176\u5b83\u4f20\u611f\u5668(GPS, vision)\u4ea7\u751f\u7684\u4fe1\u606f\u7528\u4e8e\u4fee\u6b63\u6ee4\u6ce2\u5668\uff0c\u5206\u4e3a\u4e09\u6b65\uff1a observation of the error-state via filter correction, injection of the observed errors into the nominal state reset of the error-state observation of the error-state via filter correction \u00b6 \u5047\u8bbe\u4f20\u611f\u5668\u72b6\u6001\u65b9\u7a0b\uff1a \\[ y=h(x_t)+v \\] \u5176\u4e2d \\(v \\sim \\mathcal{N}(0,V)\\) \u6839\u636e\u4fee\u6b63\u65b9\u7a0b\u6709: \\[ \\begin{align} K&=PH^\\top(HPH^\\top +V)^{-1}\\\\ \\hat{\\delta x} &\\leftarrow K(y-h(\\hat{x_t}))\\\\ P &\\leftarrow (I-KH)P\\\\ H &= \\left.\\frac{\\partial h}{\\partial \\delta x_t}\\right|_x \\end{align} \\] \u539f\u672c\u9700\u8981H\u5728 \\(x_t\\) \u5904\u5c55\u5f00\uff0c\u7531\u4e8e \\(\\hat{x_t}=x \\oplus \\hat{\\delta x}\\) \uff0c\u800c\u6b64\u65f6\u8bef\u5dee\u72b6\u6001\u7684\u671f\u671b\u4e3a0\uff08\u8fd8\u672a\u89c2\u6d4b\u8bef\u5dee\u72b6\u6001\uff09,\u56e0\u6b64\u53ef\u8ba4\u4e3a \\(\\hat{x_t}=x\\) \u5e76\u5728x\u5904\u5c55\u5f00\u3002 Warning \\(P \\leftarrow (I-KH)P\\) \u662f\u6700\u7b80\u5355\u7684\u534f\u65b9\u5dee\u66f4\u65b0\u5f62\u5f0f\uff0c\u4f46\u6570\u503c\u7a33\u5b9a\u6027\u65b9\u9762\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u52a0\u7a33\u5b9a\u7684\u5f62\u5f0f\uff1a 1. \\(P \\leftarrow P - K(HPH^\\top+V)K^\\top\\) (symmetric form) 2. \\(P \\leftarrow (I-KH)P(I-KH)^\\top+KVK^\\top\\) (symmetric and positive Joseph form) \u96c5\u53ef\u6bd4H\u7684\u8ba1\u7b97 \u00b6 \\[ \\begin{align} H &= \\left.\\frac{\\partial h}{\\partial \\delta x_t}\\right|_x\\\\ &= \\left.\\frac{\\partial h}{\\partial x_t}\\right|_x \\left.\\frac{\\partial x_t}{\\partial \\delta x}\\right|_x =H_x X_{\\delta x}\\\\ X_{\\delta x} &= \\begin{bmatrix} \\frac{\\partial (p+\\delta p) }{\\partial \\delta p}\\\\ &\\frac{\\partial (v+\\delta v) }{\\partial \\delta v}\\\\ &&\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta \\theta}\\\\ &&&\\frac{\\partial (bias_a+\\delta bias_a) }{\\partial \\delta bias_a}\\\\ &&&&\\frac{\\partial (bias_g+\\delta bias_g) }{\\partial \\delta bias_g}\\\\ &&&&&\\frac{\\partial (g+\\delta g) }{\\partial \\delta g} \\end{bmatrix}\\\\ &= \\begin{bmatrix} \\mathbf{I}_3\\\\ &\\mathbf{I}_3\\\\ &&\\mathbf{Q}_{\\delta \\theta}\\\\ &&&\\mathbf{I}_3\\\\ &&&&\\mathbf{I}_3\\\\ &&&&&\\mathbf{I}_3 \\end{bmatrix}\\\\ \\mathbf{Q}_{\\delta \\theta} &\\triangleq \\left.\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta \\theta}\\right|_q\\\\ &=\\left.\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta q}\\right|_q\\left.\\frac{\\partial \\delta q }{\\partial \\delta \\theta}\\right|_{\\hat{\\delta \\theta}=0}\\\\ &=Q_L \\cdot \\frac{\\partial \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta \\end{bmatrix} }{\\partial \\delta \\theta}\\\\ &=Q_L \\cdot \\frac{1}{2} \\begin{bmatrix} 0 & 0 & 0 \\\\ 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}= \\frac{1}{2}\\begin{bmatrix} -q_x & -q_y & -q_z \\\\ q_w & -q_z & q_y \\\\ q_z & q_w & -q_x\\\\ -q_y & q_x & q_w \\end{bmatrix} \\end{align} \\] Injection of the observed errors into the nominal state \u00b6 \\[ \\begin{align} p & \\leftarrow p + \\hat{\\delta p}\\\\ v &\\leftarrow v+\\hat{\\delta v}\\\\ q&\\leftarrow q \\otimes quaternion\\{\\hat{\\delta \\theta}\\}=q \\otimes \\hat{\\delta q}\\\\ bias_{a}&\\leftarrow bias_{a} + \\hat{\\delta bias_{a}}\\\\ bias_{g}&\\leftarrow bias_{g} + \\hat{\\delta bias_{g}}\\\\ g &\\leftarrow g + \\hat{\\delta g}\\\\ \\end{align} \\] ESKF reset \u00b6 \\[ \\begin{align} \\delta x &\\leftarrow g( \\delta x) = \\delta x \\ominus \\hat{\\delta x} \\approx G \\delta x\\\\ \\hat{\\delta x} &\\leftarrow 0\\\\ P &\\leftarrow GPG^\\top\\\\ G & \\triangleq \\left.\\frac{\\partial g}{\\partial \\delta x}\\right|_{\\hat{\\delta x}}\\\\ &=\\begin{bmatrix} \\mathbf{I}_6\\\\ &\\mathbf{I}-[\\frac{1}{2}\\hat{\\delta \\theta}]_{\\times}\\\\ &&\\mathbf{I}_9 \\end{bmatrix} \\end{align} \\] reset\u7684\u96c5\u53ef\u6bd4G\u7684\u8ba1\u7b97 G\u4e2d\u552f\u4e00\u9700\u8981\u8ba1\u7b97\u7684\u5c31\u662fg\u5173\u4e8e\u56db\u5143\u6570\u8bef\u5dee\u7684\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u5148\u7528reset\u4e4b\u524d\u7684\u65e7\u72b6\u6001 \\(q_t\\) \u8868\u793areset\u4e4b\u540e\u7684\u65b0\u72b6\u6001 \\(q_t^+\\) \uff0creset\u7684\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u6539\u53d8\u72b6\u6001\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u6b64\u6709\uff1a \\[ \\begin{align} q_t^+&=q_t\\\\ \u7531\u5b9a\u4e49: q^+ &\\otimes \\delta q^+=q \\otimes \\delta q\\\\ \u53c8\uff1a q^+ &=q \\otimes \\hat{\\delta q}\\\\ \u56e0\u6b64\uff1a(q \\otimes \\hat{\\delta q})\\otimes \\delta q^+&=q\\otimes \\delta q \\\\ \\delta q^+&=(q \\otimes \\hat{\\delta q})^* \\otimes q\\otimes \\delta q \\\\ &=\\hat{\\delta q}^* \\otimes q^* \\otimes q\\otimes \\delta q \\\\ &=\\hat{\\delta q}^*\\otimes \\delta q =[\\hat{\\delta q}^*]_L \\delta q\\\\ \u7531\u4e8e\uff1a\\hat{\\delta q}^*&\\approx \\begin{bmatrix} 1\\\\-\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \u4ee3\u5165\uff1a\\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta^+ \\end{bmatrix} &=\\begin{bmatrix} 1 & \\frac{1}{2}\\hat{\\delta\\theta}^\\top\\\\ -\\frac{1}{2}\\hat{\\delta\\theta} & I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times} \\end{bmatrix} \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \\Rightarrow \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta^+ \\end{bmatrix} &=\\begin{bmatrix} 1 +\\frac{1}{4}\\hat{\\delta\\theta}^\\top\\delta\\theta\\\\ -\\frac{1}{2}\\hat{\\delta\\theta}+(I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times})\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \\Rightarrow \\delta\\theta^+ &=-\\hat{\\delta\\theta}+(I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times})\\delta\\theta\\\\ \\frac{\\partial \\delta\\theta^+}{\\partial \\delta\\theta} &=I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times} \\end{align} \\] \u603b\u7ed3 \u00b6 \u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u9700\u8981\uff1a 1. \u5bf9IMU\u540d\u4e49\u72b6\u6001\u8fdb\u884c\u52a8\u529b\u5b66\u79ef\u5206\u66f4\u65b0\uff08\u5229\u7528\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b\uff09 \u5bf9IMU\u8bef\u5dee\u72b6\u6001\u8fdb\u884c\u52a8\u529b\u5b66\u79ef\u5206\u66f4\u65b0\uff08\u5229\u7528\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b\uff09\u5373\u9884\u6d4b\u6b65\uff1a \\[ \\begin{align} \\delta \\hat{x} &\\leftarrow F_x(x,u_m) \\cdot \\delta \\hat{x}\\\\ P &\\leftarrow F_x P F_x^\\top +F_i Q_i F_i^\\top\\\\ \\end{align} \\] \u5f53\u989d\u5916\u4fe1\u606f\u8fd4\u56de\u65f6\uff08\u5982GPS\uff0cvision\u7b49\uff09\u9700\u8981\uff1a \u4fee\u6b63\u8bef\u5dee\u72b6\u6001\uff0c\u5373\u4fee\u6b63\u6b65\uff1a \\[ \\begin{align} K&=PH^\\top(HPH^\\top +V)^{-1}\\\\ \\hat{\\delta x} &\\leftarrow K(y-h(\\hat{x_t}))\\\\ P &\\leftarrow (I-KH)P\\\\ \\end{align} \\] \u5408\u5e76\u72b6\u6001\uff0c\u5c06\u8bef\u5dee\u72b6\u6001\u5e94\u7528\u5230\u540d\u4e49\u72b6\u6001\u4e0a\uff0c\u5373\uff1a \\[ x \\leftarrow x \\oplus \\hat{\\delta x} \\] \u91cd\u7f6e \u8bef\u5dee\u72b6\u6001\u548c\u534f\u65b9\u5dee\u77e9\u9635\uff1a \\[ \\begin{align} \\hat{\\delta x} &\\leftarrow 0\\\\ P &\\leftarrow GPG^\\top\\\\ \\end{align} \\] graph LR A{\"\u7b49\u5f85IMU\"} --> |no| A; A --> |yes| A1[\"\u540d\u4e49\u72b6\u6001\u79ef\u5206\"]; A1 --> A2[\"\u8bef\u5dee\u72b6\u6001\u79ef\u5206\"]; A2 --> B{\"\u7b49\u5f85\u5176\u5b83\u4f20\u611f\u5668\"}; B --> |no| A; B --> |yes| B1[\"\u4fee\u6b63\u8bef\u5dee\u72b6\u6001\"]; B1 --> B2[\"\u5408\u5e76\u72b6\u6001\"]; B2 --> B3[\"\u91cd\u7f6e\u8bef\u5dee\u548c\u534f\u65b9\u5dee\"]; B3 --> A;","title":"ESKF\u8bef\u5dee\u72b6\u6001\u6ee4\u6ce2\u5668"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#eskf","text":"\\[ \\begin{align} \\delta \\hat{x} &\\leftarrow F_x(x,u_m) \\cdot \\delta \\hat{x}\\\\ P &\\leftarrow F_x P F_x^\\top +F_i Q_i F_i^\\top\\\\ \\end{align} \\] \u56e0\u6b64 \\(\\delta x\\) \u6ee1\u8db3\u5206\u5e03\uff1a \\(\\delta x \\sim \\mathcal N(\\hat{\\delta x} ,P)\\) \u5176\u4e2dFx\u548c Fi \u662ff()\u76f8\u5bf9\u4e8e\u8bef\u5dee\u548c\u8bef\u5dee\u6270\u52a8\u7684\u96c5\u53ef\u6bd4: \\[ \\begin{align} F_x &= \\frac{\\partial f}{\\partial \\delta x} = \\begin{bmatrix} I & I \\Delta t & 0 & 0 & 0 & 0\\\\ 0 & I & -R[a_m-bias_a]_{times}\\Delta t & -R\\Delta t & 0 & I \\Delta t\\\\ 0 & 0 & R\\{(\\omega_m-bias_g) \\Delta t\\}^\\top & 0 & -I\\Delta t & 0\\\\ 0& 0& 0& I& 0& 0\\\\ 0& 0& 0& 0& I& 0\\\\ 0& 0& 0& 0& 0& I\\\\ \\end{bmatrix}\\\\ F_i&= \\frac{\\partial f}{\\partial i}=\\begin{bmatrix} 0& 0& 0& 0\\\\ I& 0& 0& 0\\\\ 0& I& 0& 0\\\\ 0& 0& I& 0\\\\ 0& 0& 0& I\\\\ 0& 0& 0& 0 \\end{bmatrix},\\quad Q_i= \\begin{bmatrix} \\mathbf{V_i}& 0& 0& 0\\\\ 0& \\mathbf{\\Theta_i}& 0& 0\\\\ 0& 0& \\mathbf{A_i}& 0\\\\ 0& 0& 0& \\mathbf{\\Omega_i} \\end{bmatrix}\\\\ \u5176\u4e2d\uff1a\\mathbf{V_i}&=\\Delta t^2\\sigma_{\\eta_a}^2 \\mathbf{I}\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u566a\u58f0\\\\ \\mathbf{\\Theta_i}&=\\Delta t^2\\sigma_{\\eta_g}^2\\mathbf{I}\u89d2\u901f\u5ea6\u8ba1\u6d4b\u91cf\u566a\u58f0\\\\ \\mathbf{A_i}&=\\Delta t\\sigma_{\\eta_{ba}}^2\\mathbf{I}\u52a0\u901f\u5ea6\u8ba1bias\u968f\u673a\u6e38\u8d70\u566a\u58f0\\\\ \\mathbf{\\Omega_i}&=\\Delta t\\sigma_{\\eta_{bg}}^2\\mathbf{I}\u89d2\u901f\u5ea6\u8ba1bias\u968f\u673a\u6e38\u8d70\u566a\u58f0 \\end{align} \\]","title":"ESKF \u9884\u6d4b\u65b9\u7a0b"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#imu","text":"\u5728\u4e4b\u524d\u7684\u63a8\u5bfc\u4e2d\uff0cIMU\u7ed9\u51fa\u4e86ESKF\u7684\u9884\u6d4b\u90e8\u5206\u3002\u5176\u5b83\u4f20\u611f\u5668(GPS, vision)\u4ea7\u751f\u7684\u4fe1\u606f\u7528\u4e8e\u4fee\u6b63\u6ee4\u6ce2\u5668\uff0c\u5206\u4e3a\u4e09\u6b65\uff1a observation of the error-state via filter correction, injection of the observed errors into the nominal state reset of the error-state","title":"\u878d\u5408IMU\u548c\u5176\u5b83\u4f20\u611f\u5668"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#observation-of-the-error-state-via-filter-correction","text":"\u5047\u8bbe\u4f20\u611f\u5668\u72b6\u6001\u65b9\u7a0b\uff1a \\[ y=h(x_t)+v \\] \u5176\u4e2d \\(v \\sim \\mathcal{N}(0,V)\\) \u6839\u636e\u4fee\u6b63\u65b9\u7a0b\u6709: \\[ \\begin{align} K&=PH^\\top(HPH^\\top +V)^{-1}\\\\ \\hat{\\delta x} &\\leftarrow K(y-h(\\hat{x_t}))\\\\ P &\\leftarrow (I-KH)P\\\\ H &= \\left.\\frac{\\partial h}{\\partial \\delta x_t}\\right|_x \\end{align} \\] \u539f\u672c\u9700\u8981H\u5728 \\(x_t\\) \u5904\u5c55\u5f00\uff0c\u7531\u4e8e \\(\\hat{x_t}=x \\oplus \\hat{\\delta x}\\) \uff0c\u800c\u6b64\u65f6\u8bef\u5dee\u72b6\u6001\u7684\u671f\u671b\u4e3a0\uff08\u8fd8\u672a\u89c2\u6d4b\u8bef\u5dee\u72b6\u6001\uff09,\u56e0\u6b64\u53ef\u8ba4\u4e3a \\(\\hat{x_t}=x\\) \u5e76\u5728x\u5904\u5c55\u5f00\u3002 Warning \\(P \\leftarrow (I-KH)P\\) \u662f\u6700\u7b80\u5355\u7684\u534f\u65b9\u5dee\u66f4\u65b0\u5f62\u5f0f\uff0c\u4f46\u6570\u503c\u7a33\u5b9a\u6027\u65b9\u9762\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u52a0\u7a33\u5b9a\u7684\u5f62\u5f0f\uff1a 1. \\(P \\leftarrow P - K(HPH^\\top+V)K^\\top\\) (symmetric form) 2. \\(P \\leftarrow (I-KH)P(I-KH)^\\top+KVK^\\top\\) (symmetric and positive Joseph form)","title":"observation of the error-state via filter correction"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#h","text":"\\[ \\begin{align} H &= \\left.\\frac{\\partial h}{\\partial \\delta x_t}\\right|_x\\\\ &= \\left.\\frac{\\partial h}{\\partial x_t}\\right|_x \\left.\\frac{\\partial x_t}{\\partial \\delta x}\\right|_x =H_x X_{\\delta x}\\\\ X_{\\delta x} &= \\begin{bmatrix} \\frac{\\partial (p+\\delta p) }{\\partial \\delta p}\\\\ &\\frac{\\partial (v+\\delta v) }{\\partial \\delta v}\\\\ &&\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta \\theta}\\\\ &&&\\frac{\\partial (bias_a+\\delta bias_a) }{\\partial \\delta bias_a}\\\\ &&&&\\frac{\\partial (bias_g+\\delta bias_g) }{\\partial \\delta bias_g}\\\\ &&&&&\\frac{\\partial (g+\\delta g) }{\\partial \\delta g} \\end{bmatrix}\\\\ &= \\begin{bmatrix} \\mathbf{I}_3\\\\ &\\mathbf{I}_3\\\\ &&\\mathbf{Q}_{\\delta \\theta}\\\\ &&&\\mathbf{I}_3\\\\ &&&&\\mathbf{I}_3\\\\ &&&&&\\mathbf{I}_3 \\end{bmatrix}\\\\ \\mathbf{Q}_{\\delta \\theta} &\\triangleq \\left.\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta \\theta}\\right|_q\\\\ &=\\left.\\frac{\\partial (q\\otimes\\delta q) }{\\partial \\delta q}\\right|_q\\left.\\frac{\\partial \\delta q }{\\partial \\delta \\theta}\\right|_{\\hat{\\delta \\theta}=0}\\\\ &=Q_L \\cdot \\frac{\\partial \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta \\end{bmatrix} }{\\partial \\delta \\theta}\\\\ &=Q_L \\cdot \\frac{1}{2} \\begin{bmatrix} 0 & 0 & 0 \\\\ 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}= \\frac{1}{2}\\begin{bmatrix} -q_x & -q_y & -q_z \\\\ q_w & -q_z & q_y \\\\ q_z & q_w & -q_x\\\\ -q_y & q_x & q_w \\end{bmatrix} \\end{align} \\]","title":"\u96c5\u53ef\u6bd4H\u7684\u8ba1\u7b97"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#injection-of-the-observed-errors-into-the-nominal-state","text":"\\[ \\begin{align} p & \\leftarrow p + \\hat{\\delta p}\\\\ v &\\leftarrow v+\\hat{\\delta v}\\\\ q&\\leftarrow q \\otimes quaternion\\{\\hat{\\delta \\theta}\\}=q \\otimes \\hat{\\delta q}\\\\ bias_{a}&\\leftarrow bias_{a} + \\hat{\\delta bias_{a}}\\\\ bias_{g}&\\leftarrow bias_{g} + \\hat{\\delta bias_{g}}\\\\ g &\\leftarrow g + \\hat{\\delta g}\\\\ \\end{align} \\]","title":"Injection of the observed errors into the nominal state"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#eskf-reset","text":"\\[ \\begin{align} \\delta x &\\leftarrow g( \\delta x) = \\delta x \\ominus \\hat{\\delta x} \\approx G \\delta x\\\\ \\hat{\\delta x} &\\leftarrow 0\\\\ P &\\leftarrow GPG^\\top\\\\ G & \\triangleq \\left.\\frac{\\partial g}{\\partial \\delta x}\\right|_{\\hat{\\delta x}}\\\\ &=\\begin{bmatrix} \\mathbf{I}_6\\\\ &\\mathbf{I}-[\\frac{1}{2}\\hat{\\delta \\theta}]_{\\times}\\\\ &&\\mathbf{I}_9 \\end{bmatrix} \\end{align} \\] reset\u7684\u96c5\u53ef\u6bd4G\u7684\u8ba1\u7b97 G\u4e2d\u552f\u4e00\u9700\u8981\u8ba1\u7b97\u7684\u5c31\u662fg\u5173\u4e8e\u56db\u5143\u6570\u8bef\u5dee\u7684\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u5148\u7528reset\u4e4b\u524d\u7684\u65e7\u72b6\u6001 \\(q_t\\) \u8868\u793areset\u4e4b\u540e\u7684\u65b0\u72b6\u6001 \\(q_t^+\\) \uff0creset\u7684\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u6539\u53d8\u72b6\u6001\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u6b64\u6709\uff1a \\[ \\begin{align} q_t^+&=q_t\\\\ \u7531\u5b9a\u4e49: q^+ &\\otimes \\delta q^+=q \\otimes \\delta q\\\\ \u53c8\uff1a q^+ &=q \\otimes \\hat{\\delta q}\\\\ \u56e0\u6b64\uff1a(q \\otimes \\hat{\\delta q})\\otimes \\delta q^+&=q\\otimes \\delta q \\\\ \\delta q^+&=(q \\otimes \\hat{\\delta q})^* \\otimes q\\otimes \\delta q \\\\ &=\\hat{\\delta q}^* \\otimes q^* \\otimes q\\otimes \\delta q \\\\ &=\\hat{\\delta q}^*\\otimes \\delta q =[\\hat{\\delta q}^*]_L \\delta q\\\\ \u7531\u4e8e\uff1a\\hat{\\delta q}^*&\\approx \\begin{bmatrix} 1\\\\-\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \u4ee3\u5165\uff1a\\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta^+ \\end{bmatrix} &=\\begin{bmatrix} 1 & \\frac{1}{2}\\hat{\\delta\\theta}^\\top\\\\ -\\frac{1}{2}\\hat{\\delta\\theta} & I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times} \\end{bmatrix} \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \\Rightarrow \\begin{bmatrix} 1\\\\\\frac{1}{2}\\delta\\theta^+ \\end{bmatrix} &=\\begin{bmatrix} 1 +\\frac{1}{4}\\hat{\\delta\\theta}^\\top\\delta\\theta\\\\ -\\frac{1}{2}\\hat{\\delta\\theta}+(I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times})\\frac{1}{2}\\delta\\theta \\end{bmatrix}\\\\ \\Rightarrow \\delta\\theta^+ &=-\\hat{\\delta\\theta}+(I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times})\\delta\\theta\\\\ \\frac{\\partial \\delta\\theta^+}{\\partial \\delta\\theta} &=I-[\\frac{1}{2}\\hat{\\delta\\theta}]_{\\times} \\end{align} \\]","title":"ESKF reset"},{"location":"Sensor-Fusion/ESKF%E8%AF%AF%E5%B7%AE%E7%8A%B6%E6%80%81%E6%BB%A4%E6%B3%A2%E5%99%A8/#_1","text":"\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u9700\u8981\uff1a 1. \u5bf9IMU\u540d\u4e49\u72b6\u6001\u8fdb\u884c\u52a8\u529b\u5b66\u79ef\u5206\u66f4\u65b0\uff08\u5229\u7528\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b\uff09 \u5bf9IMU\u8bef\u5dee\u72b6\u6001\u8fdb\u884c\u52a8\u529b\u5b66\u79ef\u5206\u66f4\u65b0\uff08\u5229\u7528\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b\uff09\u5373\u9884\u6d4b\u6b65\uff1a \\[ \\begin{align} \\delta \\hat{x} &\\leftarrow F_x(x,u_m) \\cdot \\delta \\hat{x}\\\\ P &\\leftarrow F_x P F_x^\\top +F_i Q_i F_i^\\top\\\\ \\end{align} \\] \u5f53\u989d\u5916\u4fe1\u606f\u8fd4\u56de\u65f6\uff08\u5982GPS\uff0cvision\u7b49\uff09\u9700\u8981\uff1a \u4fee\u6b63\u8bef\u5dee\u72b6\u6001\uff0c\u5373\u4fee\u6b63\u6b65\uff1a \\[ \\begin{align} K&=PH^\\top(HPH^\\top +V)^{-1}\\\\ \\hat{\\delta x} &\\leftarrow K(y-h(\\hat{x_t}))\\\\ P &\\leftarrow (I-KH)P\\\\ \\end{align} \\] \u5408\u5e76\u72b6\u6001\uff0c\u5c06\u8bef\u5dee\u72b6\u6001\u5e94\u7528\u5230\u540d\u4e49\u72b6\u6001\u4e0a\uff0c\u5373\uff1a \\[ x \\leftarrow x \\oplus \\hat{\\delta x} \\] \u91cd\u7f6e \u8bef\u5dee\u72b6\u6001\u548c\u534f\u65b9\u5dee\u77e9\u9635\uff1a \\[ \\begin{align} \\hat{\\delta x} &\\leftarrow 0\\\\ P &\\leftarrow GPG^\\top\\\\ \\end{align} \\] graph LR A{\"\u7b49\u5f85IMU\"} --> |no| A; A --> |yes| A1[\"\u540d\u4e49\u72b6\u6001\u79ef\u5206\"]; A1 --> A2[\"\u8bef\u5dee\u72b6\u6001\u79ef\u5206\"]; A2 --> B{\"\u7b49\u5f85\u5176\u5b83\u4f20\u611f\u5668\"}; B --> |no| A; B --> |yes| B1[\"\u4fee\u6b63\u8bef\u5dee\u72b6\u6001\"]; B1 --> B2[\"\u5408\u5e76\u72b6\u6001\"]; B2 --> B3[\"\u91cd\u7f6e\u8bef\u5dee\u548c\u534f\u65b9\u5dee\"]; B3 --> A;","title":"\u603b\u7ed3"},{"location":"Sensor-Fusion/LOAM/","text":"\u5173\u4e8eJacobian Jacobian(f,v) computes the Jacobian matrix of f(scalar function) with respect to v. The (i,j) element of the result is \\(\\frac{\\partial f(i)}{\\partial v(j)}\\) Jacobian matrix \u4e0ev\u7684\u65b9\u5411\u65e0\u5173\uff08\u5217\u5411\u91cf or \u884c\u5411\u91cf\uff09 $$ Jacobian([f_1,f_2,f_3],[v_1,v_2,v_3])=Jacobian([f_1,f_2,f_3],[v_1,v_2,v_3]^\\top)=\\begin{bmatrix} \\frac{\\partial f_1}{\\partial v_1}&\\frac{\\partial f_1}{\\partial v_2}&\\frac{\\partial f_1}{\\partial v_3} \\\\ \\frac{\\partial f_2}{\\partial v_1}&\\frac{\\partial f_2}{\\partial v_2}&\\frac{\\partial f_2}{\\partial v_3} \\\\ \\frac{\\partial f_3}{\\partial v_1}&\\frac{\\partial f_3}{\\partial v_2}&\\frac{\\partial f_3}{\\partial v_3} \\end{bmatrix} $$ \u7ebf\u7279\u5f81 \u00b6 \u6b8b\u5dee\uff1a \\[ d_{\\epsilon}= \\frac{\\|(\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b)\\|}{\\|p_a-p_b\\|} \\] Jacobian of |x| \\[ Jacobian(\\|x\\|,x)=Jacobian(\\|x\\|,x^\\top)= \\frac{1}{2}\\frac{(2x_1,2x_2,2x_3)}{\\sqrt{x^2_1+x^2_2+x^2_3}}= \\frac{(x_1,x_2,x_3)}{\\sqrt{x^2_1+x^2_2+x^2_3}} \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} J_1 &=\\frac{1}{\\|p_a-p_b\\|}\\frac{\\partial \\|X\\|}{\\partial X}\\frac{\\partial X}{\\partial p}\\\\ &=\\frac{1}{\\|p_a-p_b\\|}\\frac{((\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b))^\\top}{\\|(\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b)\\|}(p_b-p_a)^{\\wedge}\\\\ J_2 &=[\\frac{\\partial \\tilde{p}_i}{\\partial \\phi},\\frac{\\partial \\tilde{p}_i}{\\partial t}]\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial \\delta\\phi} &=-(Rp_i)^{\\wedge}\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial t}&=\\frac{\\partial (R\\tilde{p}_i+t)}{\\partial t}=\\text{I} \\end{align} \\] \u9762\u7279\u5f81 \u00b6 \u6b8b\u5dee\uff1a \\[ d_{\\epsilon}= \\|\\left(\\tilde{p}_i-p_{j}\\right) \\cdot \\frac{\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)}{\\|\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)\\|}\\| \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} J_1 &=\\frac{d^\\top}{\\|d\\|}\\frac{(\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right))^\\top}{\\|\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)\\|}\\\\ J_2 &=[\\frac{\\partial \\tilde{p}_i}{\\partial \\phi},\\frac{\\partial \\tilde{p}_i}{\\partial t}]\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial \\delta\\phi}&=-(Rp_i)^{\\wedge}\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial t}&=\\frac{\\partial (R\\tilde{p}_i+t)}{\\partial t}=\\text{I} \\end{align} \\] \\[ (a \\times b )^\\top = a^\\top \\times b^\\top \\] class EdgeAnalyticCostFunction : public ceres :: SizedCostFunction < 1 , 4 , 3 > { public : double s ; Eigen :: Vector3d curr_point , last_point_a , last_point_b ; EdgeAnalyticCostFunction ( const Eigen :: Vector3d curr_point_ , const Eigen :: Vector3d last_point_a_ , const Eigen :: Vector3d last_point_b_ , const double s_ ) : curr_point ( curr_point_ ), last_point_a ( last_point_a_ ), last_point_b ( last_point_b_ ), s ( s_ ) {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { Eigen :: Map < const Eigen :: Quaterniond > q_last_curr ( parameters [ 0 ]); Eigen :: Map < const Eigen :: Vector3d > t_last_curr ( parameters [ 1 ]); Eigen :: Vector3d lp ; Eigen :: Vector3d lp_r ; lp_r = q_last_curr * curr_point ; lp = q_last_curr * curr_point + t_last_curr ; Eigen :: Vector3d v1 = ( lp - last_point_a ); Eigen :: Vector3d v2 = ( lp - last_point_b ); Eigen :: Vector3d v3 = last_point_a - last_point_b ; residuals [ 0 ] = ( v1 . cross ( v2 )). norm () / v3 . norm (); Eigen :: Vector3d dXnorm_dX = v1 . cross ( v2 ) / ( v1 . cross ( v2 )). norm (); Eigen :: Matrix3d dX_dp = - skew ( v3 ); Eigen :: RowVector3d J1 = 1 / v3 . norm () * dXnorm_dX . transpose () * dX_dp ; if ( jacobians != NULL ) { if ( jacobians [ 0 ] != NULL ) { Eigen :: Matrix3d J2 = - skew ( lp_r ); //3x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 4 , Eigen :: RowMajor >> J_so3_r ( jacobians [ 0 ]); J_so3_r . setZero (); J_so3_r . block < 1 , 3 > ( 0 , 1 ) = J1 * J2 ; //1x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 3 , Eigen :: RowMajor >> J_so3_t ( jacobians [ 1 ]); J_so3_t . setZero (); J_so3_t . block < 1 , 3 > ( 0 , 0 ) = J1 ; //1x3 } } return true ; } }; class PlaneAnalyticCostFunction : public ceres :: SizedCostFunction < 1 , 4 , 3 > { public : Eigen :: Vector3d curr_point , last_point_j , last_point_l , last_point_m ; Eigen :: Vector3d ljm_norm ; double s ; PlaneAnalyticCostFunction ( Eigen :: Vector3d curr_point_ , Eigen :: Vector3d last_point_j_ , Eigen :: Vector3d last_point_l_ , Eigen :: Vector3d last_point_m_ , double s_ ) : curr_point ( curr_point_ ), last_point_j ( last_point_j_ ), last_point_l ( last_point_l_ ), last_point_m ( last_point_m_ ), s ( s_ ) {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { Eigen :: Map < const Eigen :: Quaterniond > q_last_curr ( parameters [ 0 ]); Eigen :: Map < const Eigen :: Vector3d > t_last_curr ( parameters [ 1 ]); Eigen :: Vector3d lp_r = q_last_curr * curr_point ; Eigen :: Vector3d lp = q_last_curr * curr_point + t_last_curr ; Eigen :: Vector3d ljm = ( last_point_j - last_point_l ). cross ( last_point_j - last_point_m ); Eigen :: Vector3d plane_norm = ljm / ljm . norm (); //3x1 Eigen :: Vector3d v_ij = lp - last_point_j ; double d = plane_norm . transpose () * v_ij ; // 1x1 residuals [ 0 ] = std :: abs ( d ); //1*1 Eigen :: RowVector3d J1 = d * plane_norm . transpose () / residuals [ 0 ]; if ( jacobians != NULL ) { if ( jacobians [ 0 ] != NULL ) { Eigen :: Matrix3d J2 ( - skew ( lp_r )); //3x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 4 , Eigen :: RowMajor >> J_so3_r ( jacobians [ 0 ]); J_so3_r . setZero (); J_so3_r . block < 1 , 3 > ( 0 , 1 ) = J1 * J2 ; Eigen :: Map < Eigen :: Matrix < double , 1 , 3 , Eigen :: RowMajor >> J_so3_t ( jacobians [ 1 ]); J_so3_t . setZero (); J_so3_t . block < 1 , 3 > ( 0 , 0 ) = J1 ; } } return true ; } };","title":"LOAM"},{"location":"Sensor-Fusion/LOAM/#_1","text":"\u6b8b\u5dee\uff1a \\[ d_{\\epsilon}= \\frac{\\|(\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b)\\|}{\\|p_a-p_b\\|} \\] Jacobian of |x| \\[ Jacobian(\\|x\\|,x)=Jacobian(\\|x\\|,x^\\top)= \\frac{1}{2}\\frac{(2x_1,2x_2,2x_3)}{\\sqrt{x^2_1+x^2_2+x^2_3}}= \\frac{(x_1,x_2,x_3)}{\\sqrt{x^2_1+x^2_2+x^2_3}} \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} J_1 &=\\frac{1}{\\|p_a-p_b\\|}\\frac{\\partial \\|X\\|}{\\partial X}\\frac{\\partial X}{\\partial p}\\\\ &=\\frac{1}{\\|p_a-p_b\\|}\\frac{((\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b))^\\top}{\\|(\\tilde{p}_i-p_a)\\times(\\tilde{p}_i-p_b)\\|}(p_b-p_a)^{\\wedge}\\\\ J_2 &=[\\frac{\\partial \\tilde{p}_i}{\\partial \\phi},\\frac{\\partial \\tilde{p}_i}{\\partial t}]\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial \\delta\\phi} &=-(Rp_i)^{\\wedge}\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial t}&=\\frac{\\partial (R\\tilde{p}_i+t)}{\\partial t}=\\text{I} \\end{align} \\]","title":"\u7ebf\u7279\u5f81"},{"location":"Sensor-Fusion/LOAM/#_2","text":"\u6b8b\u5dee\uff1a \\[ d_{\\epsilon}= \\|\\left(\\tilde{p}_i-p_{j}\\right) \\cdot \\frac{\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)}{\\|\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)\\|}\\| \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} J_1 &=\\frac{d^\\top}{\\|d\\|}\\frac{(\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right))^\\top}{\\|\\left(p_{l}-p_{j}\\right) \\times\\left(p_{m}-p_{j}\\right)\\|}\\\\ J_2 &=[\\frac{\\partial \\tilde{p}_i}{\\partial \\phi},\\frac{\\partial \\tilde{p}_i}{\\partial t}]\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial \\delta\\phi}&=-(Rp_i)^{\\wedge}\\\\ \\frac{\\partial \\tilde{p}_i}{\\partial t}&=\\frac{\\partial (R\\tilde{p}_i+t)}{\\partial t}=\\text{I} \\end{align} \\] \\[ (a \\times b )^\\top = a^\\top \\times b^\\top \\] class EdgeAnalyticCostFunction : public ceres :: SizedCostFunction < 1 , 4 , 3 > { public : double s ; Eigen :: Vector3d curr_point , last_point_a , last_point_b ; EdgeAnalyticCostFunction ( const Eigen :: Vector3d curr_point_ , const Eigen :: Vector3d last_point_a_ , const Eigen :: Vector3d last_point_b_ , const double s_ ) : curr_point ( curr_point_ ), last_point_a ( last_point_a_ ), last_point_b ( last_point_b_ ), s ( s_ ) {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { Eigen :: Map < const Eigen :: Quaterniond > q_last_curr ( parameters [ 0 ]); Eigen :: Map < const Eigen :: Vector3d > t_last_curr ( parameters [ 1 ]); Eigen :: Vector3d lp ; Eigen :: Vector3d lp_r ; lp_r = q_last_curr * curr_point ; lp = q_last_curr * curr_point + t_last_curr ; Eigen :: Vector3d v1 = ( lp - last_point_a ); Eigen :: Vector3d v2 = ( lp - last_point_b ); Eigen :: Vector3d v3 = last_point_a - last_point_b ; residuals [ 0 ] = ( v1 . cross ( v2 )). norm () / v3 . norm (); Eigen :: Vector3d dXnorm_dX = v1 . cross ( v2 ) / ( v1 . cross ( v2 )). norm (); Eigen :: Matrix3d dX_dp = - skew ( v3 ); Eigen :: RowVector3d J1 = 1 / v3 . norm () * dXnorm_dX . transpose () * dX_dp ; if ( jacobians != NULL ) { if ( jacobians [ 0 ] != NULL ) { Eigen :: Matrix3d J2 = - skew ( lp_r ); //3x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 4 , Eigen :: RowMajor >> J_so3_r ( jacobians [ 0 ]); J_so3_r . setZero (); J_so3_r . block < 1 , 3 > ( 0 , 1 ) = J1 * J2 ; //1x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 3 , Eigen :: RowMajor >> J_so3_t ( jacobians [ 1 ]); J_so3_t . setZero (); J_so3_t . block < 1 , 3 > ( 0 , 0 ) = J1 ; //1x3 } } return true ; } }; class PlaneAnalyticCostFunction : public ceres :: SizedCostFunction < 1 , 4 , 3 > { public : Eigen :: Vector3d curr_point , last_point_j , last_point_l , last_point_m ; Eigen :: Vector3d ljm_norm ; double s ; PlaneAnalyticCostFunction ( Eigen :: Vector3d curr_point_ , Eigen :: Vector3d last_point_j_ , Eigen :: Vector3d last_point_l_ , Eigen :: Vector3d last_point_m_ , double s_ ) : curr_point ( curr_point_ ), last_point_j ( last_point_j_ ), last_point_l ( last_point_l_ ), last_point_m ( last_point_m_ ), s ( s_ ) {} virtual bool Evaluate ( double const * const * parameters , double * residuals , double ** jacobians ) const { Eigen :: Map < const Eigen :: Quaterniond > q_last_curr ( parameters [ 0 ]); Eigen :: Map < const Eigen :: Vector3d > t_last_curr ( parameters [ 1 ]); Eigen :: Vector3d lp_r = q_last_curr * curr_point ; Eigen :: Vector3d lp = q_last_curr * curr_point + t_last_curr ; Eigen :: Vector3d ljm = ( last_point_j - last_point_l ). cross ( last_point_j - last_point_m ); Eigen :: Vector3d plane_norm = ljm / ljm . norm (); //3x1 Eigen :: Vector3d v_ij = lp - last_point_j ; double d = plane_norm . transpose () * v_ij ; // 1x1 residuals [ 0 ] = std :: abs ( d ); //1*1 Eigen :: RowVector3d J1 = d * plane_norm . transpose () / residuals [ 0 ]; if ( jacobians != NULL ) { if ( jacobians [ 0 ] != NULL ) { Eigen :: Matrix3d J2 ( - skew ( lp_r )); //3x3 Eigen :: Map < Eigen :: Matrix < double , 1 , 4 , Eigen :: RowMajor >> J_so3_r ( jacobians [ 0 ]); J_so3_r . setZero (); J_so3_r . block < 1 , 3 > ( 0 , 1 ) = J1 * J2 ; Eigen :: Map < Eigen :: Matrix < double , 1 , 3 , Eigen :: RowMajor >> J_so3_t ( jacobians [ 1 ]); J_so3_t . setZero (); J_so3_t . block < 1 , 3 > ( 0 , 0 ) = J1 ; } } return true ; } };","title":"\u9762\u7279\u5f81"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/","text":"\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \u00b6 p(x)\u4e3ax\u5728\u533a\u95f4[a,b]\u4e0a\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0cPr\u4e3ax\u5728\u533a\u95f4[c,d]\u4e0a\u7684\u6982\u7387: $$ \\begin{align} \\int_a^b p(x)dx&=1,x \\in [a,b]\\\\ Pr(c \\leq x \\leq d)&=\\int_c^d p(x)dx \\end{align} $$ \\(x \\in [a,b]\\) , \\(y \\in [r,s]\\) ,\u8054\u5408\u6982\u7387\uff1a \\[ \\int_a^b\\int_r^s p(x,y)dydx=1 \\] \u5f53x,y\u4e3a\u72ec\u7acb\u53d8\u91cf\uff0c \\(p(x,y)=p(x)p(y)\\) \u6761\u4ef6\u6982\u7387\u5bc6\u5ea6 \u00b6 x\u5173\u4e8e\u6761\u4ef6y\u7684\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570: \\(p(x|y)\\) , \u5e76\u6ee1\u8db3\uff1a $$ p(x)=\\int_r^s p(x|y)p(y) dy $$ \u8d1d\u53f6\u65af\u516c\u5f0f \u00b6 \\[ p(x,y)=p(x|y)p(y)=p(y|x)p(x) \\Rightarrow p(x|y)=\\dfrac{p(y|x)p(x)}{p(y)} \\] \u8d1d\u53f6\u65af\u63a8\u65ad \u00b6 \u5df2\u77e5\u5148\u9a8c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570p(x),\u548c\u4f20\u611f\u5668\u6a21\u578b \\(p(y|x)\\) , \u53ef\u5f97\u540e\u9a8c\u6982\u7387\u5bc6\u5ea6: $$ p(x|y)=\\dfrac{p(y|x)p(x)}{p(y)}=\\dfrac{p(y|x)p(x)}{\\int p(y|x)p(x) dx} $$ \u9ad8\u65af\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \u00b6 \u4e00\u7ef4\u60c5\u51b5 \u00b6 \\[ p(x|\\mu,\\sigma^2)=\\dfrac{1}{\\sqrt{2 \\pi \\sigma^2}}exp(-\\dfrac{(x-\\mu)^2}{2\\sigma^2}) \\] \u591a\u7ef4\u60c5\u51b5 \u00b6 \\[ p(x|\\mu,\\Sigma)=\\dfrac{1}{\\sqrt{(2\\pi)^N det(\\Sigma)}}exp(-\\frac{1}{2}(x-\\mu)^\\top \\Sigma^{-1} (x-\\mu)) \\] \u8054\u5408\u9ad8\u65af\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \u00b6 \\[ \\begin{align} p(x)&=N(\\mu_x,\\Sigma_{xx})\\\\ p(y)&=N(\\mu_y,\\Sigma_{yy})\\\\ p(x,y)&=N( \\begin{bmatrix} \\mu_x\\\\ \\mu_y \\end{bmatrix},\\begin{bmatrix} \\Sigma_{xx} &\\Sigma_{xy}\\\\ \\Sigma_{yx} &\\Sigma_{yy} \\end{bmatrix})=p(x|y)p(y) \\end{align} \\] \u8212\u5c14\u8865 \\[ \\begin{align} &\\begin{bmatrix} A & B\\\\ C & D \\end{bmatrix}= \\begin{bmatrix} I & BD^{-1}\\\\ 0 & I \\end{bmatrix} \\begin{bmatrix} \\Delta D & 0\\\\ 0 & D \\end{bmatrix} \\begin{bmatrix} I & 0\\\\ D^{-1}C & I \\end{bmatrix}=\\begin{bmatrix} \\Delta D+BD^{-1}C & B\\\\ C & D \\end{bmatrix}\\\\ &\\text{\u8212\u5c14\u8865:}\\Delta D = A-BD^{-1}C\\\\ &\\text{\u539f\u77e9\u9635\u7684\u9006:}\\\\ &\\begin{bmatrix} A & B\\\\ C & D \\end{bmatrix}^{-1}= \\begin{bmatrix} I & 0\\\\ -D^{-1}C & I \\end{bmatrix}\\begin{bmatrix} \\Delta D^{-1} & 0\\\\ 0 & D^{-1} \\end{bmatrix} \\begin{bmatrix} I & -BD^{-1}\\\\ 0 & I \\end{bmatrix} \\end{align} \\] \u5229\u7528\u8212\u5c14\u8865\u6c42\u65b9\u5dee\u77e9\u9635\u7684\u9006: $$ \\begin{bmatrix} \\Sigma_{xx} & \\Sigma_{xy}\\\\ \\Sigma_{yx} & \\Sigma_{yy} \\end{bmatrix}^{-1}= \\begin{bmatrix} I & 0\\\\ -\\Sigma_{yy}^{-1}\\Sigma_{yx} & I \\end{bmatrix} \\begin{bmatrix} \\Delta \\Sigma^{-1} & 0\\\\ 0 & \\Sigma_{yy}^{-1} \\end{bmatrix} \\begin{bmatrix} I & -\\Sigma_{xy}\\Sigma_{yy}^{-1}\\\\ 0 & I \\end{bmatrix} $$ \\(\\Delta \\Sigma =\\Sigma_{xx}-\\Sigma_{xy}\\Sigma_{yy}^{-1}\\Sigma_{yx}\\)","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_1","text":"p(x)\u4e3ax\u5728\u533a\u95f4[a,b]\u4e0a\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0cPr\u4e3ax\u5728\u533a\u95f4[c,d]\u4e0a\u7684\u6982\u7387: $$ \\begin{align} \\int_a^b p(x)dx&=1,x \\in [a,b]\\\\ Pr(c \\leq x \\leq d)&=\\int_c^d p(x)dx \\end{align} $$ \\(x \\in [a,b]\\) , \\(y \\in [r,s]\\) ,\u8054\u5408\u6982\u7387\uff1a \\[ \\int_a^b\\int_r^s p(x,y)dydx=1 \\] \u5f53x,y\u4e3a\u72ec\u7acb\u53d8\u91cf\uff0c \\(p(x,y)=p(x)p(y)\\)","title":"\u6982\u7387\u5bc6\u5ea6\u51fd\u6570"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_2","text":"x\u5173\u4e8e\u6761\u4ef6y\u7684\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570: \\(p(x|y)\\) , \u5e76\u6ee1\u8db3\uff1a $$ p(x)=\\int_r^s p(x|y)p(y) dy $$","title":"\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_3","text":"\\[ p(x,y)=p(x|y)p(y)=p(y|x)p(x) \\Rightarrow p(x|y)=\\dfrac{p(y|x)p(x)}{p(y)} \\]","title":"\u8d1d\u53f6\u65af\u516c\u5f0f"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_4","text":"\u5df2\u77e5\u5148\u9a8c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570p(x),\u548c\u4f20\u611f\u5668\u6a21\u578b \\(p(y|x)\\) , \u53ef\u5f97\u540e\u9a8c\u6982\u7387\u5bc6\u5ea6: $$ p(x|y)=\\dfrac{p(y|x)p(x)}{p(y)}=\\dfrac{p(y|x)p(x)}{\\int p(y|x)p(x) dx} $$","title":"\u8d1d\u53f6\u65af\u63a8\u65ad"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_5","text":"","title":"\u9ad8\u65af\u6982\u7387\u5bc6\u5ea6\u51fd\u6570"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_6","text":"\\[ p(x|\\mu,\\sigma^2)=\\dfrac{1}{\\sqrt{2 \\pi \\sigma^2}}exp(-\\dfrac{(x-\\mu)^2}{2\\sigma^2}) \\]","title":"\u4e00\u7ef4\u60c5\u51b5"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_7","text":"\\[ p(x|\\mu,\\Sigma)=\\dfrac{1}{\\sqrt{(2\\pi)^N det(\\Sigma)}}exp(-\\frac{1}{2}(x-\\mu)^\\top \\Sigma^{-1} (x-\\mu)) \\]","title":"\u591a\u7ef4\u60c5\u51b5"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/#_8","text":"\\[ \\begin{align} p(x)&=N(\\mu_x,\\Sigma_{xx})\\\\ p(y)&=N(\\mu_y,\\Sigma_{yy})\\\\ p(x,y)&=N( \\begin{bmatrix} \\mu_x\\\\ \\mu_y \\end{bmatrix},\\begin{bmatrix} \\Sigma_{xx} &\\Sigma_{xy}\\\\ \\Sigma_{yx} &\\Sigma_{yy} \\end{bmatrix})=p(x|y)p(y) \\end{align} \\] \u8212\u5c14\u8865 \\[ \\begin{align} &\\begin{bmatrix} A & B\\\\ C & D \\end{bmatrix}= \\begin{bmatrix} I & BD^{-1}\\\\ 0 & I \\end{bmatrix} \\begin{bmatrix} \\Delta D & 0\\\\ 0 & D \\end{bmatrix} \\begin{bmatrix} I & 0\\\\ D^{-1}C & I \\end{bmatrix}=\\begin{bmatrix} \\Delta D+BD^{-1}C & B\\\\ C & D \\end{bmatrix}\\\\ &\\text{\u8212\u5c14\u8865:}\\Delta D = A-BD^{-1}C\\\\ &\\text{\u539f\u77e9\u9635\u7684\u9006:}\\\\ &\\begin{bmatrix} A & B\\\\ C & D \\end{bmatrix}^{-1}= \\begin{bmatrix} I & 0\\\\ -D^{-1}C & I \\end{bmatrix}\\begin{bmatrix} \\Delta D^{-1} & 0\\\\ 0 & D^{-1} \\end{bmatrix} \\begin{bmatrix} I & -BD^{-1}\\\\ 0 & I \\end{bmatrix} \\end{align} \\] \u5229\u7528\u8212\u5c14\u8865\u6c42\u65b9\u5dee\u77e9\u9635\u7684\u9006: $$ \\begin{bmatrix} \\Sigma_{xx} & \\Sigma_{xy}\\\\ \\Sigma_{yx} & \\Sigma_{yy} \\end{bmatrix}^{-1}= \\begin{bmatrix} I & 0\\\\ -\\Sigma_{yy}^{-1}\\Sigma_{yx} & I \\end{bmatrix} \\begin{bmatrix} \\Delta \\Sigma^{-1} & 0\\\\ 0 & \\Sigma_{yy}^{-1} \\end{bmatrix} \\begin{bmatrix} I & -\\Sigma_{xy}\\Sigma_{yy}^{-1}\\\\ 0 & I \\end{bmatrix} $$ \\(\\Delta \\Sigma =\\Sigma_{xx}-\\Sigma_{xy}\\Sigma_{yy}^{-1}\\Sigma_{yx}\\)","title":"\u8054\u5408\u9ad8\u65af\u6982\u7387\u5bc6\u5ea6\u51fd\u6570"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%BA%94%E7%94%A8/","text":"Data Pretreat Flow \u00b6 graph LR A[ReadData] --> B[InitCalibration]; B --> C[InitGNSS]; C --> D[TransformData]; D --> E[PublishData]; Kitti Filtering Flow \u00b6 graph LR A{InitCalibration} --> |yes| B[PublishGlobalMap]; A --> |no| A; B --> C[PublishLocalMap]; C --> D[ReadData]; D --> HD{HasData}; HD --> |no| A; HD --> |yes| HI[HasInited]; HI --> |no| E[InitLocalization]; HI --> |yes| F[UpdateLocalization]; F --> G[CorrectLocalization]; \u5361\u5c14\u66fc\u77eb\u6b63\u6d41\u7a0b \u00b6 \\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=\\underline{f(x_{k-1},u_{k-1},w_{k-1})} \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=\\underline{h(x_k,v_k)} \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=\\underline{f(\\hat{x}_{k-1},u_{k-1},0)}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+\\underline{WQW^\\top}\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +\\underline{VR_{k,EST}V^\\top})^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-\\underline{h(\\hat{x}_{k,EST},0)})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u5361\u5c14\u66fcGain K = P_ * G.transpose() * ( G * P_ * G.transpose( ) + C * RPose_* C.transpose() ).inverse() ; graph LR A[KITTIFiltering::Correct]","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u5e94\u7528"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%BA%94%E7%94%A8/#data-pretreat-flow","text":"graph LR A[ReadData] --> B[InitCalibration]; B --> C[InitGNSS]; C --> D[TransformData]; D --> E[PublishData];","title":"Data Pretreat Flow"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%BA%94%E7%94%A8/#kitti-filtering-flow","text":"graph LR A{InitCalibration} --> |yes| B[PublishGlobalMap]; A --> |no| A; B --> C[PublishLocalMap]; C --> D[ReadData]; D --> HD{HasData}; HD --> |no| A; HD --> |yes| HI[HasInited]; HI --> |no| E[InitLocalization]; HI --> |yes| F[UpdateLocalization]; F --> G[CorrectLocalization];","title":"Kitti Filtering Flow"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E5%BA%94%E7%94%A8/#_1","text":"\\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=\\underline{f(x_{k-1},u_{k-1},w_{k-1})} \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=\\underline{h(x_k,v_k)} \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=\\underline{f(\\hat{x}_{k-1},u_{k-1},0)}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+\\underline{WQW^\\top}\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +\\underline{VR_{k,EST}V^\\top})^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-\\underline{h(\\hat{x}_{k,EST},0)})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u5361\u5c14\u66fcGain K = P_ * G.transpose() * ( G * P_ * G.transpose( ) + C * RPose_* C.transpose() ).inverse() ; graph LR A[KITTIFiltering::Correct]","title":"\u5361\u5c14\u66fc\u77eb\u6b63\u6d41\u7a0b"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/","text":"\u5361\u5c14\u66fc\u6ee4\u6ce2 \u00b6 \u57fa\u7840\u77e5\u8bc6 \u00b6 \u4e00\u4e2a\u597d\u7684\u4f30\u8ba1\u662f\u5bf9\u6d4b\u91cf\u503c\u53d6\u5e73\u5747\u503c\uff1a \\[ \\begin{align} \\hat{x}_k&=\\frac{1}{k}(z_1+z_2+\\dots+z_{k-1}+z_k)\\\\ &=\\frac{k-1}{k}\\underbrace{\\frac{(z_1+z_2+\\dots+z_{k-1})}{k-1}}_{\\hat{x}_{k-1}}+\\frac{1}{k}z_k\\\\ &=\\hat{x}_{k-1}+\\frac{1}{k}(z_k-\\hat{x}_{k-1})\\\\ \\hat{x}_k&=\\hat{x}_{k-1}+K_k(z_k-\\hat{x}_{k-1})\\\\ \u5f53\u524d\u4f30\u8ba1\u503c&=\u524d\u6b65\u4f30\u8ba1\u503c+\u5361\u5c14\u66fc\u589e\u76ca(\u6d4b\u91cf\u503c-\u524d\u6b65\u4f30\u8ba1\u503c) \\end{align} \\] k\u5927\uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1bk\u5c0f\uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \\[ \\begin{align} \u4f30\u8ba1\u8bef\u5dee:e_{EST},\u6d4b\u91cf\u8bef\u5dee:e_{MEA}\\\\ \u5361\u5c14\u66fc\u589e\u76ca: K_k=\\frac{{e_{EST}}_{k-1}}{{e_{EST}}_{k-1}+{e_{MEA}}_{k}} \\end{align} \\] Step1: \u8ba1\u7b97Kalman Gain\uff0c \\(K_k=\\frac{{e_{EST}}_{k-1}}{{e_{EST}}_{k-1}+{e_{MEA}}_{k}}\\) Step2: \u8ba1\u7b97 \\(\\hat{x}_k=\\hat{x}_{k-1}+K_k(z_k-\\hat{x}_{k-1})\\\\\\) Step3: \u66f4\u65b0 \\({e_{EST}}_{k}=(1-K_k){e_{EST}}_{k-1}\\) \u6570\u636e\u878d\u5408\uff1a \u4f30\u8ba1\u771f\u5b9e\u503c: \\(\\hat{z}=z_1+K(z_2-z_1)\\) , \u5173\u952e\u5728\u4e8e\u6c42K\u4f7f\u5f97\u4f30\u8ba1\u51fa\u7684 \\(\\hat{z}\\) \u7684\u65b9\u5dee\u6700\u5c0f\uff0c\u5373\u878d\u5408\u540e\u7684\u6700\u7cbe\u786e\u3002 \\[ \\begin{align} \\sigma^2_{\\hat{z}}&=Var(z_1+K(z_2-z_1))\\\\ &=Var(z_1+K z_2-K z_1)\\\\ &=\\underbrace{Var((1-K)z_1)+Var(K z_2)}_{z1,z2 \u4e92\u76f8\u72ec\u7acb}\\\\ &=(1-K)^2Var(z_1)+K^2Var(z_2)=(1-K)^2\\sigma^2_{z_1}+K^2\\sigma^2_{z_2}\\\\ \\Rightarrow \\frac{d \\sigma^2_{\\hat{z}}}{dK}&=-2(1-K)\\sigma^2_{z_1}+2K\\sigma^2_{z_2}=0\\\\ \\Rightarrow K&=\\frac{\\sigma^2_{z_1}}{\\sigma^2_{z_1}+\\sigma^2_{z_22}}\\\\ \\end{align} \\] \u65b9\u5dee\uff1a \\[ \\sigma^2_{xx}=\\frac{1}{n}(\\mathbf{x}-\\mathbf{\\mu_x})^\\top(\\mathbf{x}-\\mathbf{\\mu_x}) \\] \u534f\u65b9\u5dee\uff1a \\[ \\sigma^2_{xy}=\\frac{1}{n}(\\mathbf{x}-\\mathbf{\\mu_x})^\\top(\\mathbf{y}-\\mathbf{\\mu_y})=\\sigma^2_{yx} \\] \u5361\u5c14\u66fc\u65b9\u7a0b\u63a8\u5bfc \u00b6 \u72b6\u6001\u7a7a\u95f4\u65b9\u7a0b\uff1a \\[ \\begin{align} x_k&=Ax_{k-1}+Bu_{k-1}+W_{k-1} \\leftarrow \u8fc7\u7a0b\u566a\u58f0 \\sim (0,Q)\\\\ z_k&=Hx_k+v_k\\leftarrow \u6d4b\u91cf\u566a\u58f0 \\\\ Var(x)&=E(x^2)-E(x)^2\\Rightarrow Var(w)=E(w^2)-0=E(w^2)\\\\ Q&=E(w w^\\top)=E(\\begin{bmatrix}w_1\\\\w_2\\end{bmatrix}\\begin{bmatrix}w_1&w_2\\end{bmatrix})=\\begin{bmatrix}E(w_1^2)&E(w_1w_2)\\\\E(w_2w_1)&E(w_2^2)\\end{bmatrix}\\\\ &=\\begin{bmatrix}\\sigma_{w1}^2&\\sigma_{w1}\\sigma_{w2}\\\\\\sigma_{w2}\\sigma_{w1}&\\sigma_{w2}^2\\end{bmatrix} \\end{align} \\] \\[ \\begin{align} \u8ba1\u7b97\u53ef\u5f97:\\\\ \\hat{x}_{k,EST}&=A\\hat{x}_{k-1,EST}+Bu_{k-1}(\u5148\u9a8c\u4f30\u8ba1)\\\\ \u6d4b\u91cf\u53ef\u5f97:\\\\ z_k&=Hx_k \\Rightarrow (\u53cd\u63a8\u4f30\u8ba1) \\hat{x}_{k,MEA}=H^{-1}z_k\\\\ \u7531\u6d4b\u91cf\u4fee\u6b63\u9884\u6d4b\u5f97\u5230\u6700\u4f18\u4f30\u8ba1: \\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+G (\\hat{x}_{k,MEA}-\\hat{x}_{k,EST})\\\\ &=\\hat{x}_{k,EST}+G (H^{-1}z_k-\\hat{x}_{k,EST})\\\\ &=\\hat{x}_{k,EST}+G (H^{-1}z_k-\\hat{x}_{k,EST})\\\\ \u4ee4 G = K_k H, \\Rightarrow \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST}) (\u540e\u9a8c\u4f30\u8ba1)\\\\ \\end{align} \\] \u5176\u4e2d \\(K_k \\in [0, H^{-1}]\\) , Kk\u63a5\u8fd10\uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1bKk\u63a5\u8fd1 \\(H^{-1}\\) \uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \u4f30\u8ba1\u7684\u76ee\u6807\uff1a\u5bfb\u627e \\(K_k\\) \u4f7f\u4f30\u8ba1\u5f97\u5230\u7684 \\(\\hat{x}_k\\) \u63a5\u8fd1\u771f\u5b9e\u503c \\(x_k\\) \u4ee4 \\(e_k=x_k-\\hat{x}_k\\) \uff0c\u5219\u6700\u4f18\u5316\u76ee\u6807\u4e3a\u4f7f \\(e_k\\) \u7684\u65b9\u5dee\u6700\u5c0f\uff0c \\(e_k\\) \u6ee1\u8db3\u9ad8\u65af\u5206\u5e03\uff0c \\(P(e_k) \\sim (0,P)\\) \\[ \\begin{align} P&=E(ee^\\top)=\\begin{bmatrix}\\sigma_{e1}^2 & \\sigma_{e1}\\sigma_{e2}\\\\\\sigma_{e2}\\sigma_{e1} & \\sigma_{e2}^2\\end{bmatrix}\\\\ tr(P)&=\\sigma_{e1}^2+\\sigma_{e2}^2 \\end{align} \\] \u56e0\u6b64\uff0c\u6700\u4f18\u5316\u76ee\u6807\u53d8\u6210\u4e86\u4f7f tr(P) \u6700\u5c0f\uff1a \\[ \\begin{align} P_k&=E(e_ke_k^\\top)=E[(x_k-\\hat{x}_k)(x_k-\\hat{x}_k)^\\top]\\\\ \u5176\u4e2d: x_k-\\hat{x}_k&=x_k-[\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST})]\\\\ &=x_k-\\hat{x}_{k,EST} - K_k z_k + K_k H \\hat{x}_{k,EST}\\\\ &=x_k-\\hat{x}_{k,EST}-K_k \\underbrace{(Hx_k+v_k)}_{z_k} + K_k H \\hat{x}_{k,EST}\\\\ &=(x_k-\\hat{x}_{k,EST})-K_k H(x_k- \\hat{x}_{k,EST}) -K_k v_k \\\\ &=(I-K_k H)\\underbrace{(x_k-\\hat{x}_{k,EST})}_{e_{k,EST}} -K_k v_k \\\\ &= (I-K_k H)e_{k,EST} -K_k v_k \\\\ P_k&=E[((I-K_k H)e_{k,EST} -K_k v_k)((I-K_k H)e_{k,EST} -K_k v_k)^\\top]\\\\ &=E[((I-K_k H)e_{k,EST} -K_k v_k)( e_{k,EST}^\\top (I-K_k H)^\\top- v_k^\\top K_k ^\\top)]\\\\ &=E[(I-K_k H)e_{k,EST}e_{k,EST}^\\top (I-K_k H)^\\top] \\\\ & -E[(I-K_k H)e_{k,EST}v_k^\\top K_k ^\\top] - E[v_k K_k e_{k,EST}^\\top (I-K_k H)^\\top]\\\\ & + E[K_k v_k v_k^\\top K_k ^\\top]\\\\ \\end{align} \\] \u7531\u4e8e \\(e_{k,EST}\\) \u548c \\(v_k\\) \u4e92\u76f8\u72ec\u7acb,\u53ef\u4ee5\u628a \\(E[e_{k,EST}v_k^\\top]\\) \u62c6\u5f00\u6210\u4e24\u9879: \\[ \\begin{align} E[(I-K_k H)e_{k,EST}v_k^\\top K_k ^\\top]&=(I-K_k H)E[e_{k,EST}v_k^\\top] K_k ^\\top \\\\ &=(I-K_k H)E[e_{k,EST}]\\underbrace{E[v_k^\\top]}_{0(v \\sim (0,R))} K_k ^\\top = 0 \\end{align} \\] \\[ \\begin{align} P_k & = (I-K_k H)\\underbrace{E[e_{k,EST}e_{k,EST}^\\top]}_{P_{k,EST}} (I-K_k H)^\\top + K_k \\underbrace{E[v_k v_k^\\top]}_{R} K_k ^\\top\\\\ &=(P_{k,EST}-K_k H P_{k,EST})(I-H^\\top K_k^\\top)+K_k R K_k ^\\top \\\\ &=\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k R K_k ^\\top} \\end{align} \\] \u7531\u4e8e\u65b9\u5dee\u4e3a\u5bf9\u79f0\u9635\uff1a \\[ \\begin{align} P_{k,EST} &= P_{k,EST}^\\top \\\\ \u56e0\u6b64&: (K_k H P_{k,EST})^\\top = P_{k,EST}^\\top H^\\top K_k^\\top =P_{k,EST} H^\\top K_k^\\top\\\\ & \\Rightarrow tr(K_k H P_{k,EST})=tr(P_{k,EST} H^\\top K_k^\\top)\\\\ tr(P_k) &= tr(\\underline{P_{k,EST}})- 2 tr(\\underline{K_k H P_{k,EST}})+tr(\\underline{K_k H P_{k,EST}H^\\top K_k^\\top})+tr(\\underline{K_k R K_k ^\\top}) \\end{align} \\] \u8ff9\u6c42\u5bfc \\[ \\begin{align} tr(AB) &= tr(\\begin{bmatrix}a_{11} & a_{12}\\\\ a_{21} & a_{22}\\end{bmatrix}\\begin{bmatrix}b_{11} & b_{12}\\\\ b_{21} & b_{22}\\end{bmatrix})= a_{11}b_{11}+a_{12}b_{21}+ a_{21}b_{12}+a_{22}b_{22}\\\\ \\frac{d tr(AB)}{d A} &= \\begin{bmatrix}\\frac{d tr(AB)}{d a_{11}} & \\frac{d tr(AB)}{d a_{12}}\\\\ \\frac{d tr(AB)}{d a_{21}} & \\frac{d tr(AB)}{d a_{22}}\\end{bmatrix}=\\begin{bmatrix}b_{11} & b_{21}\\\\ b_{12} & b_{22}\\end{bmatrix} =B^\\top\\\\ \\frac{d tr(ABA^\\top)}{d A}&=2AB \\end{align} \\] \\[ \\begin{align} \\frac{d tr(P_k)}{d K_k} &= \\frac{d tr(P_{k,EST})}{d K_k}-2\\frac{d tr(K_k H P_{k,EST})}{d K_k}\\\\&+\\frac{d tr(K_k H P_{k,EST}H^\\top K_k^\\top)}{d K_k}+\\frac{d tr(K_k R K_k ^\\top)}{d K_k}\\\\ &=0-2(H P_{k,EST})^\\top+2K_k H P_{k,EST}H^\\top + 2K_k R\\\\ &=-P_{k,EST} H^\\top+ K_k (H P_{k,EST}H^\\top +R)=0\\\\ \\Rightarrow K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +R)^{-1} \\end{align} \\] \u5f53\u6d4b\u91cf\u8bef\u5deeR\u5f88\u5927\u7684\u65f6\u5019\uff0c \\(K_k \\rightarrow 0\\) \uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1b\u6d4b\u91cf\u8bef\u5deeR\u5f88\u5c0f\u7684\u65f6\u5019, Kk\u63a5\u8fd1 \\(H^{-1}\\) \uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \u4f46\u5176\u4e2d\u4ecd\u6709\u4e00\u4e2a\u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee \\(P_{k,EST}=E[e_{k,EST}e_{k,EST}^\\top]\\) \u662f\u6211\u4eec\u5b9a\u4e49\u7684\u672a\u77e5\u91cf, \u4f46\u6211\u4eec\u53ef\u4ee5\u6839\u636e**\u7cfb\u7edf\u52a8\u529b\u5b66\u6a21\u578b**\u7528\u5df2\u77e5\u7684\u8fc7\u53bb\u7684 \\(e_{k-1,EST}\\) \u6765\u8ba1\u7b97\u5b83\u3002 \\[ \\begin{align} P_{k,EST}&=E[e_{k,EST}e_{k,EST}^\\top]\\\\ e_{k,EST}&=x_k-\\hat{x}_{k,EST}=\\underbrace{Ax_{k-1}+Bu_{k-1}+w_{k-1}}_{\u771f\u5b9e\u52a8\u529b\u5b66\u8fc7\u7a0b\uff08\u5e26\u6709\u566a\u97f3\uff09}-\\underbrace{(A\\hat{x}_{k-1,EST}+Bu_{k-1})}_{\u9884\u6d4b\u52a8\u529b\u5b66\u8fc7\u7a0b}\\\\ &=A\\underbrace{(x_{k-1}-\\hat{x}_{k-1,EST})}_{e_{k-1,EST}}+w_{k-1}=Ae_{k-1,EST}+w_{k-1}\\\\ \\Rightarrow P_{k,EST}&=E[(Ae_{k-1,EST}+w_{k-1})(Ae_{k-1,EST}+w_{k-1})^\\top]\\\\ &=E[Ae_{k-1,EST}e_{k-1,EST}^\\top A^\\top] \\\\&+E[\\underbrace{w_{k-1}e_{k-1,EST}^\\top A^\\top}_{w_{k-1}\u548ce_{k-1}\u4e92\u76f8\u72ec\u7acb\uff0cE(w_{k-1})=0}] + E[Ae_{k-1,EST}w_{k-1}^\\top] + E[w_{k-1}w_{k-1}^\\top] \\\\ &=E[Ae_{k-1,EST}e_{k-1,EST}^\\top A^\\top]+0+ 0+ E[w_{k-1}w_{k-1}^\\top]\\\\ &=A\\underbrace{E[e_{k-1,EST}e_{k-1,EST}^\\top ]}_{P_{k-1,EST}}A^\\top + \\underbrace{E[w_{k-1}w_{k-1}^\\top]}_{Q}\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+Q \\end{align} \\] \u7531\u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee\u8ba1\u7b97\u771f\u5b9e\u8bef\u5dee\u534f\u65b9\u5dee\uff1a \\[ \\begin{align} P_k & =\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k R K_k ^\\top}\\\\ & = P_{k,EST} -K_k H P_{k,EST} -P_{k,EST}H^\\top K_k^\\top +K_k (H P_{k,EST}H^\\top+ R) K_k^\\top \\\\ & = P_{k,EST} -K_k H P_{k,EST} -P_{k,EST}H^\\top K_k^\\top \\\\&+P_{k,EST}H^\\top (H P_{k,EST}H^\\top+ R)^{-1} (H P_{k,EST}H^\\top+ R) K_k^\\top \\\\ & = P_{k,EST} -K_k H P_{k,EST}\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u603b\u7ed3\uff1a \\[ \\begin{align} \u6a21\u578b\uff1a\\\\ x_k&=Ax_{k-1}+Bu_{k-1}+w_{k-1} \\qquad w \\sim N(0,Q)\\\\ z_k&=Hx_k+v_k \\qquad \\qquad \\qquad \\qquad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=A\\hat{x}_{k-1,EST}+Bu_{k-1}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+Q\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +R)^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2 \u00b6 \\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=f(x_{k-1},u_{k-1},w_{k-1}) \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=h(x_k,v_k) \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \\end{align} \\] \u7528\u6cf0\u52d2\u5c55\u5f00\u5c06f(x)\u5728x0(operating point)\u7ebf\u6027\u5316\u5c55\u5f00\uff1a \\[ f(x)=f(x_0)+\\frac{df}{dx}(x-x_0) \\] \u7531\u4e8e\u8bef\u5dee\u5b58\u5728\uff0c\u65e0\u6cd5\u5728\u771f\u5b9e\u70b9\u7ebf\u6027\u5316\uff0c\u56e0\u6b64\u5c06f(x)\u5728\u524d\u4e00\u6b21\u7684\u540e\u9a8c\u4f30\u8ba1 \\(\\hat{x}_{k-1}\\) \u5904\u7ebf\u6027\u5316\uff1a \\[ \\begin{align} x_k&=Ax_{k-1}+Bu_{k-1}+w_{k-1}\\\\ x_k&=\\underbrace{f(\\hat{x}_{k-1},u_{k-1},0)}_{\\tilde{x}_k}+\\underbrace{\\frac{\\partial f}{\\partial x}|_{\\hat{x}_{k-1},u_{k-1}}}_{A_k}(x_k-\\hat{x}_{k-1})+\\underbrace{\\frac{\\partial f}{\\partial w}|_{\\hat{x}_{k-1},u_{k-1}}}_{W_k}w_{k-1}\\\\ \\Rightarrow x_k&=\\tilde{x}_k+A_k (x_k-\\hat{x}_{k-1})+ W_k w_{k-1} \\end{align} \\] \\(z_k\\) \u5728 \\(\\tilde{x}_k\\) \u5904\u7ebf\u6027\u5316\uff1a \\[ \\begin{align} z_k&=\\underbrace{h(\\tilde{x}_k,0)}_{\\tilde{z}_k}+\\underbrace{\\frac{\\partial h}{\\partial x}|_{\\tilde{x}_{k}}}_{H_k}(x_k-\\tilde{x}_{k})+\\underbrace{\\frac{\\partial h}{\\partial v}|_{\\tilde{x}_{k}}}_{V_k}v_k\\\\ \\Rightarrow z_k&=\\tilde{z}_k+H_k (x_k-\\tilde{x}_{k})+ V_k v_{k} \\end{align} \\] \\[ \\begin{align} P(w)&\\sim N(0,Q)\\\\ P(Ww)&\\sim N(0,WQW^\\top)\\\\ P(Vv)&\\sim N(0,VRV^\\top) \\end{align} \\] \u552f\u4e00\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\uff1a \\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=\\underline{f(x_{k-1},u_{k-1},w_{k-1})} \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=\\underline{h(x_k,v_k)} \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=\\underline{f(\\hat{x}_{k-1},u_{k-1},0)}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+\\underline{WQW^\\top}\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +\\underline{VR_{k,EST}V^\\top})^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-\\underline{h(\\hat{x}_{k,EST},0)})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u63a8\u5bfc\u8fc7\u7a0b \u00b6 \\[ \\begin{align} \\hat{x}_k&=\\tilde{x}_k+K_k (z_k-\\tilde{z}_k)\\\\ &=\\tilde{x}_k+K_k (\\tilde{z}_k+H_k (x_k-\\tilde{x}_{k})+ V_k v_{k}-\\tilde{z}_k)\\\\ &=\\tilde{x}_k+K_k (H_k (x_k-\\tilde{x}_{k})+ V_k v_{k})\\\\ e_k&=x_k-\\hat{x}_k\\\\ &=(I-K_k H_k) (x_k-\\tilde{x}_{k})- K_k V_k v_{k}\\\\ &=(I-K_k H_k)e_{k,EST} - K_k V_k v_{k} \\end{align} \\] \\[ \\begin{align} P_k&=E(e_ke_k^\\top)\\\\ &=E[((I-K_k H)e_{k,EST} -K_k V_k v_k)((I-K_k H)e_{k,EST} -K_k V_k v_k)^\\top]\\\\ & = (I-K_k H)\\underbrace{E[e_{k,EST}e_{k,EST}^\\top]}_{P_{k,EST}} (I-K_k H)^\\top + K_k V_k \\underbrace{E[v_k v_k^\\top]}_{R} V_k^\\top K_k ^\\top\\\\ &=\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k V_k R V_k^\\top K_k ^\\top} \\end{align} \\] \\[ \\begin{align} \\Rightarrow tr(P_k) &= tr(\\underline{P_{k,EST}})- 2 tr(\\underline{K_k H P_{k,EST}})+tr(\\underline{K_k H P_{k,EST}H^\\top K_k^\\top})+tr(\\underline{K_k V_k R V_k^\\top K_k ^\\top})\\\\ \\frac{d tr(P_k)}{d K_k}=0 &\\Rightarrow K_k= P_{k,EST}H^\\top(H P_{k,EST}H^\\top + \\underline{VRV^\\top})^{-1} \\end{align} \\]","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u63a8\u5bfc"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/#_1","text":"","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/#_2","text":"\u4e00\u4e2a\u597d\u7684\u4f30\u8ba1\u662f\u5bf9\u6d4b\u91cf\u503c\u53d6\u5e73\u5747\u503c\uff1a \\[ \\begin{align} \\hat{x}_k&=\\frac{1}{k}(z_1+z_2+\\dots+z_{k-1}+z_k)\\\\ &=\\frac{k-1}{k}\\underbrace{\\frac{(z_1+z_2+\\dots+z_{k-1})}{k-1}}_{\\hat{x}_{k-1}}+\\frac{1}{k}z_k\\\\ &=\\hat{x}_{k-1}+\\frac{1}{k}(z_k-\\hat{x}_{k-1})\\\\ \\hat{x}_k&=\\hat{x}_{k-1}+K_k(z_k-\\hat{x}_{k-1})\\\\ \u5f53\u524d\u4f30\u8ba1\u503c&=\u524d\u6b65\u4f30\u8ba1\u503c+\u5361\u5c14\u66fc\u589e\u76ca(\u6d4b\u91cf\u503c-\u524d\u6b65\u4f30\u8ba1\u503c) \\end{align} \\] k\u5927\uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1bk\u5c0f\uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \\[ \\begin{align} \u4f30\u8ba1\u8bef\u5dee:e_{EST},\u6d4b\u91cf\u8bef\u5dee:e_{MEA}\\\\ \u5361\u5c14\u66fc\u589e\u76ca: K_k=\\frac{{e_{EST}}_{k-1}}{{e_{EST}}_{k-1}+{e_{MEA}}_{k}} \\end{align} \\] Step1: \u8ba1\u7b97Kalman Gain\uff0c \\(K_k=\\frac{{e_{EST}}_{k-1}}{{e_{EST}}_{k-1}+{e_{MEA}}_{k}}\\) Step2: \u8ba1\u7b97 \\(\\hat{x}_k=\\hat{x}_{k-1}+K_k(z_k-\\hat{x}_{k-1})\\\\\\) Step3: \u66f4\u65b0 \\({e_{EST}}_{k}=(1-K_k){e_{EST}}_{k-1}\\) \u6570\u636e\u878d\u5408\uff1a \u4f30\u8ba1\u771f\u5b9e\u503c: \\(\\hat{z}=z_1+K(z_2-z_1)\\) , \u5173\u952e\u5728\u4e8e\u6c42K\u4f7f\u5f97\u4f30\u8ba1\u51fa\u7684 \\(\\hat{z}\\) \u7684\u65b9\u5dee\u6700\u5c0f\uff0c\u5373\u878d\u5408\u540e\u7684\u6700\u7cbe\u786e\u3002 \\[ \\begin{align} \\sigma^2_{\\hat{z}}&=Var(z_1+K(z_2-z_1))\\\\ &=Var(z_1+K z_2-K z_1)\\\\ &=\\underbrace{Var((1-K)z_1)+Var(K z_2)}_{z1,z2 \u4e92\u76f8\u72ec\u7acb}\\\\ &=(1-K)^2Var(z_1)+K^2Var(z_2)=(1-K)^2\\sigma^2_{z_1}+K^2\\sigma^2_{z_2}\\\\ \\Rightarrow \\frac{d \\sigma^2_{\\hat{z}}}{dK}&=-2(1-K)\\sigma^2_{z_1}+2K\\sigma^2_{z_2}=0\\\\ \\Rightarrow K&=\\frac{\\sigma^2_{z_1}}{\\sigma^2_{z_1}+\\sigma^2_{z_22}}\\\\ \\end{align} \\] \u65b9\u5dee\uff1a \\[ \\sigma^2_{xx}=\\frac{1}{n}(\\mathbf{x}-\\mathbf{\\mu_x})^\\top(\\mathbf{x}-\\mathbf{\\mu_x}) \\] \u534f\u65b9\u5dee\uff1a \\[ \\sigma^2_{xy}=\\frac{1}{n}(\\mathbf{x}-\\mathbf{\\mu_x})^\\top(\\mathbf{y}-\\mathbf{\\mu_y})=\\sigma^2_{yx} \\]","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/#_3","text":"\u72b6\u6001\u7a7a\u95f4\u65b9\u7a0b\uff1a \\[ \\begin{align} x_k&=Ax_{k-1}+Bu_{k-1}+W_{k-1} \\leftarrow \u8fc7\u7a0b\u566a\u58f0 \\sim (0,Q)\\\\ z_k&=Hx_k+v_k\\leftarrow \u6d4b\u91cf\u566a\u58f0 \\\\ Var(x)&=E(x^2)-E(x)^2\\Rightarrow Var(w)=E(w^2)-0=E(w^2)\\\\ Q&=E(w w^\\top)=E(\\begin{bmatrix}w_1\\\\w_2\\end{bmatrix}\\begin{bmatrix}w_1&w_2\\end{bmatrix})=\\begin{bmatrix}E(w_1^2)&E(w_1w_2)\\\\E(w_2w_1)&E(w_2^2)\\end{bmatrix}\\\\ &=\\begin{bmatrix}\\sigma_{w1}^2&\\sigma_{w1}\\sigma_{w2}\\\\\\sigma_{w2}\\sigma_{w1}&\\sigma_{w2}^2\\end{bmatrix} \\end{align} \\] \\[ \\begin{align} \u8ba1\u7b97\u53ef\u5f97:\\\\ \\hat{x}_{k,EST}&=A\\hat{x}_{k-1,EST}+Bu_{k-1}(\u5148\u9a8c\u4f30\u8ba1)\\\\ \u6d4b\u91cf\u53ef\u5f97:\\\\ z_k&=Hx_k \\Rightarrow (\u53cd\u63a8\u4f30\u8ba1) \\hat{x}_{k,MEA}=H^{-1}z_k\\\\ \u7531\u6d4b\u91cf\u4fee\u6b63\u9884\u6d4b\u5f97\u5230\u6700\u4f18\u4f30\u8ba1: \\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+G (\\hat{x}_{k,MEA}-\\hat{x}_{k,EST})\\\\ &=\\hat{x}_{k,EST}+G (H^{-1}z_k-\\hat{x}_{k,EST})\\\\ &=\\hat{x}_{k,EST}+G (H^{-1}z_k-\\hat{x}_{k,EST})\\\\ \u4ee4 G = K_k H, \\Rightarrow \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST}) (\u540e\u9a8c\u4f30\u8ba1)\\\\ \\end{align} \\] \u5176\u4e2d \\(K_k \\in [0, H^{-1}]\\) , Kk\u63a5\u8fd10\uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1bKk\u63a5\u8fd1 \\(H^{-1}\\) \uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \u4f30\u8ba1\u7684\u76ee\u6807\uff1a\u5bfb\u627e \\(K_k\\) \u4f7f\u4f30\u8ba1\u5f97\u5230\u7684 \\(\\hat{x}_k\\) \u63a5\u8fd1\u771f\u5b9e\u503c \\(x_k\\) \u4ee4 \\(e_k=x_k-\\hat{x}_k\\) \uff0c\u5219\u6700\u4f18\u5316\u76ee\u6807\u4e3a\u4f7f \\(e_k\\) \u7684\u65b9\u5dee\u6700\u5c0f\uff0c \\(e_k\\) \u6ee1\u8db3\u9ad8\u65af\u5206\u5e03\uff0c \\(P(e_k) \\sim (0,P)\\) \\[ \\begin{align} P&=E(ee^\\top)=\\begin{bmatrix}\\sigma_{e1}^2 & \\sigma_{e1}\\sigma_{e2}\\\\\\sigma_{e2}\\sigma_{e1} & \\sigma_{e2}^2\\end{bmatrix}\\\\ tr(P)&=\\sigma_{e1}^2+\\sigma_{e2}^2 \\end{align} \\] \u56e0\u6b64\uff0c\u6700\u4f18\u5316\u76ee\u6807\u53d8\u6210\u4e86\u4f7f tr(P) \u6700\u5c0f\uff1a \\[ \\begin{align} P_k&=E(e_ke_k^\\top)=E[(x_k-\\hat{x}_k)(x_k-\\hat{x}_k)^\\top]\\\\ \u5176\u4e2d: x_k-\\hat{x}_k&=x_k-[\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST})]\\\\ &=x_k-\\hat{x}_{k,EST} - K_k z_k + K_k H \\hat{x}_{k,EST}\\\\ &=x_k-\\hat{x}_{k,EST}-K_k \\underbrace{(Hx_k+v_k)}_{z_k} + K_k H \\hat{x}_{k,EST}\\\\ &=(x_k-\\hat{x}_{k,EST})-K_k H(x_k- \\hat{x}_{k,EST}) -K_k v_k \\\\ &=(I-K_k H)\\underbrace{(x_k-\\hat{x}_{k,EST})}_{e_{k,EST}} -K_k v_k \\\\ &= (I-K_k H)e_{k,EST} -K_k v_k \\\\ P_k&=E[((I-K_k H)e_{k,EST} -K_k v_k)((I-K_k H)e_{k,EST} -K_k v_k)^\\top]\\\\ &=E[((I-K_k H)e_{k,EST} -K_k v_k)( e_{k,EST}^\\top (I-K_k H)^\\top- v_k^\\top K_k ^\\top)]\\\\ &=E[(I-K_k H)e_{k,EST}e_{k,EST}^\\top (I-K_k H)^\\top] \\\\ & -E[(I-K_k H)e_{k,EST}v_k^\\top K_k ^\\top] - E[v_k K_k e_{k,EST}^\\top (I-K_k H)^\\top]\\\\ & + E[K_k v_k v_k^\\top K_k ^\\top]\\\\ \\end{align} \\] \u7531\u4e8e \\(e_{k,EST}\\) \u548c \\(v_k\\) \u4e92\u76f8\u72ec\u7acb,\u53ef\u4ee5\u628a \\(E[e_{k,EST}v_k^\\top]\\) \u62c6\u5f00\u6210\u4e24\u9879: \\[ \\begin{align} E[(I-K_k H)e_{k,EST}v_k^\\top K_k ^\\top]&=(I-K_k H)E[e_{k,EST}v_k^\\top] K_k ^\\top \\\\ &=(I-K_k H)E[e_{k,EST}]\\underbrace{E[v_k^\\top]}_{0(v \\sim (0,R))} K_k ^\\top = 0 \\end{align} \\] \\[ \\begin{align} P_k & = (I-K_k H)\\underbrace{E[e_{k,EST}e_{k,EST}^\\top]}_{P_{k,EST}} (I-K_k H)^\\top + K_k \\underbrace{E[v_k v_k^\\top]}_{R} K_k ^\\top\\\\ &=(P_{k,EST}-K_k H P_{k,EST})(I-H^\\top K_k^\\top)+K_k R K_k ^\\top \\\\ &=\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k R K_k ^\\top} \\end{align} \\] \u7531\u4e8e\u65b9\u5dee\u4e3a\u5bf9\u79f0\u9635\uff1a \\[ \\begin{align} P_{k,EST} &= P_{k,EST}^\\top \\\\ \u56e0\u6b64&: (K_k H P_{k,EST})^\\top = P_{k,EST}^\\top H^\\top K_k^\\top =P_{k,EST} H^\\top K_k^\\top\\\\ & \\Rightarrow tr(K_k H P_{k,EST})=tr(P_{k,EST} H^\\top K_k^\\top)\\\\ tr(P_k) &= tr(\\underline{P_{k,EST}})- 2 tr(\\underline{K_k H P_{k,EST}})+tr(\\underline{K_k H P_{k,EST}H^\\top K_k^\\top})+tr(\\underline{K_k R K_k ^\\top}) \\end{align} \\] \u8ff9\u6c42\u5bfc \\[ \\begin{align} tr(AB) &= tr(\\begin{bmatrix}a_{11} & a_{12}\\\\ a_{21} & a_{22}\\end{bmatrix}\\begin{bmatrix}b_{11} & b_{12}\\\\ b_{21} & b_{22}\\end{bmatrix})= a_{11}b_{11}+a_{12}b_{21}+ a_{21}b_{12}+a_{22}b_{22}\\\\ \\frac{d tr(AB)}{d A} &= \\begin{bmatrix}\\frac{d tr(AB)}{d a_{11}} & \\frac{d tr(AB)}{d a_{12}}\\\\ \\frac{d tr(AB)}{d a_{21}} & \\frac{d tr(AB)}{d a_{22}}\\end{bmatrix}=\\begin{bmatrix}b_{11} & b_{21}\\\\ b_{12} & b_{22}\\end{bmatrix} =B^\\top\\\\ \\frac{d tr(ABA^\\top)}{d A}&=2AB \\end{align} \\] \\[ \\begin{align} \\frac{d tr(P_k)}{d K_k} &= \\frac{d tr(P_{k,EST})}{d K_k}-2\\frac{d tr(K_k H P_{k,EST})}{d K_k}\\\\&+\\frac{d tr(K_k H P_{k,EST}H^\\top K_k^\\top)}{d K_k}+\\frac{d tr(K_k R K_k ^\\top)}{d K_k}\\\\ &=0-2(H P_{k,EST})^\\top+2K_k H P_{k,EST}H^\\top + 2K_k R\\\\ &=-P_{k,EST} H^\\top+ K_k (H P_{k,EST}H^\\top +R)=0\\\\ \\Rightarrow K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +R)^{-1} \\end{align} \\] \u5f53\u6d4b\u91cf\u8bef\u5deeR\u5f88\u5927\u7684\u65f6\u5019\uff0c \\(K_k \\rightarrow 0\\) \uff0c\u7ed3\u679c\u504f\u5411\u9884\u6d4b\uff1b\u6d4b\u91cf\u8bef\u5deeR\u5f88\u5c0f\u7684\u65f6\u5019, Kk\u63a5\u8fd1 \\(H^{-1}\\) \uff0c\u7ed3\u679c\u504f\u5411\u6d4b\u91cf \u4f46\u5176\u4e2d\u4ecd\u6709\u4e00\u4e2a\u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee \\(P_{k,EST}=E[e_{k,EST}e_{k,EST}^\\top]\\) \u662f\u6211\u4eec\u5b9a\u4e49\u7684\u672a\u77e5\u91cf, \u4f46\u6211\u4eec\u53ef\u4ee5\u6839\u636e**\u7cfb\u7edf\u52a8\u529b\u5b66\u6a21\u578b**\u7528\u5df2\u77e5\u7684\u8fc7\u53bb\u7684 \\(e_{k-1,EST}\\) \u6765\u8ba1\u7b97\u5b83\u3002 \\[ \\begin{align} P_{k,EST}&=E[e_{k,EST}e_{k,EST}^\\top]\\\\ e_{k,EST}&=x_k-\\hat{x}_{k,EST}=\\underbrace{Ax_{k-1}+Bu_{k-1}+w_{k-1}}_{\u771f\u5b9e\u52a8\u529b\u5b66\u8fc7\u7a0b\uff08\u5e26\u6709\u566a\u97f3\uff09}-\\underbrace{(A\\hat{x}_{k-1,EST}+Bu_{k-1})}_{\u9884\u6d4b\u52a8\u529b\u5b66\u8fc7\u7a0b}\\\\ &=A\\underbrace{(x_{k-1}-\\hat{x}_{k-1,EST})}_{e_{k-1,EST}}+w_{k-1}=Ae_{k-1,EST}+w_{k-1}\\\\ \\Rightarrow P_{k,EST}&=E[(Ae_{k-1,EST}+w_{k-1})(Ae_{k-1,EST}+w_{k-1})^\\top]\\\\ &=E[Ae_{k-1,EST}e_{k-1,EST}^\\top A^\\top] \\\\&+E[\\underbrace{w_{k-1}e_{k-1,EST}^\\top A^\\top}_{w_{k-1}\u548ce_{k-1}\u4e92\u76f8\u72ec\u7acb\uff0cE(w_{k-1})=0}] + E[Ae_{k-1,EST}w_{k-1}^\\top] + E[w_{k-1}w_{k-1}^\\top] \\\\ &=E[Ae_{k-1,EST}e_{k-1,EST}^\\top A^\\top]+0+ 0+ E[w_{k-1}w_{k-1}^\\top]\\\\ &=A\\underbrace{E[e_{k-1,EST}e_{k-1,EST}^\\top ]}_{P_{k-1,EST}}A^\\top + \\underbrace{E[w_{k-1}w_{k-1}^\\top]}_{Q}\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+Q \\end{align} \\] \u7531\u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee\u8ba1\u7b97\u771f\u5b9e\u8bef\u5dee\u534f\u65b9\u5dee\uff1a \\[ \\begin{align} P_k & =\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k R K_k ^\\top}\\\\ & = P_{k,EST} -K_k H P_{k,EST} -P_{k,EST}H^\\top K_k^\\top +K_k (H P_{k,EST}H^\\top+ R) K_k^\\top \\\\ & = P_{k,EST} -K_k H P_{k,EST} -P_{k,EST}H^\\top K_k^\\top \\\\&+P_{k,EST}H^\\top (H P_{k,EST}H^\\top+ R)^{-1} (H P_{k,EST}H^\\top+ R) K_k^\\top \\\\ & = P_{k,EST} -K_k H P_{k,EST}\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\] \u603b\u7ed3\uff1a \\[ \\begin{align} \u6a21\u578b\uff1a\\\\ x_k&=Ax_{k-1}+Bu_{k-1}+w_{k-1} \\qquad w \\sim N(0,Q)\\\\ z_k&=Hx_k+v_k \\qquad \\qquad \\qquad \\qquad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=A\\hat{x}_{k-1,EST}+Bu_{k-1}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+Q\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +R)^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-H \\hat{x}_{k,EST})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\]","title":"\u5361\u5c14\u66fc\u65b9\u7a0b\u63a8\u5bfc"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/#_4","text":"\\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=f(x_{k-1},u_{k-1},w_{k-1}) \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=h(x_k,v_k) \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \\end{align} \\] \u7528\u6cf0\u52d2\u5c55\u5f00\u5c06f(x)\u5728x0(operating point)\u7ebf\u6027\u5316\u5c55\u5f00\uff1a \\[ f(x)=f(x_0)+\\frac{df}{dx}(x-x_0) \\] \u7531\u4e8e\u8bef\u5dee\u5b58\u5728\uff0c\u65e0\u6cd5\u5728\u771f\u5b9e\u70b9\u7ebf\u6027\u5316\uff0c\u56e0\u6b64\u5c06f(x)\u5728\u524d\u4e00\u6b21\u7684\u540e\u9a8c\u4f30\u8ba1 \\(\\hat{x}_{k-1}\\) \u5904\u7ebf\u6027\u5316\uff1a \\[ \\begin{align} x_k&=Ax_{k-1}+Bu_{k-1}+w_{k-1}\\\\ x_k&=\\underbrace{f(\\hat{x}_{k-1},u_{k-1},0)}_{\\tilde{x}_k}+\\underbrace{\\frac{\\partial f}{\\partial x}|_{\\hat{x}_{k-1},u_{k-1}}}_{A_k}(x_k-\\hat{x}_{k-1})+\\underbrace{\\frac{\\partial f}{\\partial w}|_{\\hat{x}_{k-1},u_{k-1}}}_{W_k}w_{k-1}\\\\ \\Rightarrow x_k&=\\tilde{x}_k+A_k (x_k-\\hat{x}_{k-1})+ W_k w_{k-1} \\end{align} \\] \\(z_k\\) \u5728 \\(\\tilde{x}_k\\) \u5904\u7ebf\u6027\u5316\uff1a \\[ \\begin{align} z_k&=\\underbrace{h(\\tilde{x}_k,0)}_{\\tilde{z}_k}+\\underbrace{\\frac{\\partial h}{\\partial x}|_{\\tilde{x}_{k}}}_{H_k}(x_k-\\tilde{x}_{k})+\\underbrace{\\frac{\\partial h}{\\partial v}|_{\\tilde{x}_{k}}}_{V_k}v_k\\\\ \\Rightarrow z_k&=\\tilde{z}_k+H_k (x_k-\\tilde{x}_{k})+ V_k v_{k} \\end{align} \\] \\[ \\begin{align} P(w)&\\sim N(0,Q)\\\\ P(Ww)&\\sim N(0,WQW^\\top)\\\\ P(Vv)&\\sim N(0,VRV^\\top) \\end{align} \\] \u552f\u4e00\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\uff1a \\[ \\begin{align} \u975e\u7ebf\u6027\u6a21\u578b\uff1a\\\\ x_k&=\\underline{f(x_{k-1},u_{k-1},w_{k-1})} \\qquad \\qquad w \\sim N(0,Q)\\\\ z_k&=\\underline{h(x_k,v_k)} \\qquad \\qquad \\qquad \\qquad \\quad v \\sim N(0,R)\\\\ \u5148\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_{k,EST}&=\\underline{f(\\hat{x}_{k-1},u_{k-1},0)}\\\\ \u5148\u9a8c\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_{k,EST}&=AP_{k-1,EST}A^\\top+\\underline{WQW^\\top}\\\\ \u5361\u5c14\u66fc\u589e\u76ca:\\\\ K_k&= P_{k,EST}H^\\top(H P_{k,EST}H^\\top +\\underline{VR_{k,EST}V^\\top})^{-1}\\\\ \u540e\u9a8c\u4f30\u8ba1:\\\\ \\hat{x}_k&=\\hat{x}_{k,EST}+K_k (z_k-\\underline{h(\\hat{x}_{k,EST},0)})\\\\ \u66f4\u65b0\u8bef\u5dee\u534f\u65b9\u5dee:\\\\ P_k &=(I-K_k H )P_{k,EST} \\end{align} \\]","title":"\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"Sensor-Fusion/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2%E6%8E%A8%E5%AF%BC/#_5","text":"\\[ \\begin{align} \\hat{x}_k&=\\tilde{x}_k+K_k (z_k-\\tilde{z}_k)\\\\ &=\\tilde{x}_k+K_k (\\tilde{z}_k+H_k (x_k-\\tilde{x}_{k})+ V_k v_{k}-\\tilde{z}_k)\\\\ &=\\tilde{x}_k+K_k (H_k (x_k-\\tilde{x}_{k})+ V_k v_{k})\\\\ e_k&=x_k-\\hat{x}_k\\\\ &=(I-K_k H_k) (x_k-\\tilde{x}_{k})- K_k V_k v_{k}\\\\ &=(I-K_k H_k)e_{k,EST} - K_k V_k v_{k} \\end{align} \\] \\[ \\begin{align} P_k&=E(e_ke_k^\\top)\\\\ &=E[((I-K_k H)e_{k,EST} -K_k V_k v_k)((I-K_k H)e_{k,EST} -K_k V_k v_k)^\\top]\\\\ & = (I-K_k H)\\underbrace{E[e_{k,EST}e_{k,EST}^\\top]}_{P_{k,EST}} (I-K_k H)^\\top + K_k V_k \\underbrace{E[v_k v_k^\\top]}_{R} V_k^\\top K_k ^\\top\\\\ &=\\underline{P_{k,EST}}-\\underline{K_k H P_{k,EST}} - \\underline{P_{k,EST}H^\\top K_k^\\top}+ \\underline{K_k H P_{k,EST}H^\\top K_k^\\top} + \\underline{K_k V_k R V_k^\\top K_k ^\\top} \\end{align} \\] \\[ \\begin{align} \\Rightarrow tr(P_k) &= tr(\\underline{P_{k,EST}})- 2 tr(\\underline{K_k H P_{k,EST}})+tr(\\underline{K_k H P_{k,EST}H^\\top K_k^\\top})+tr(\\underline{K_k V_k R V_k^\\top K_k ^\\top})\\\\ \\frac{d tr(P_k)}{d K_k}=0 &\\Rightarrow K_k= P_{k,EST}H^\\top(H P_{k,EST}H^\\top + \\underline{VRV^\\top})^{-1} \\end{align} \\]","title":"\u63a8\u5bfc\u8fc7\u7a0b"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/","text":"\u56db\u5143\u6570\u57fa\u7840 \\(\\mathbf{p}=[p_w,\\mathbf{p}_v], \\mathbf{q}=[q_w,\\mathbf{q}_v]\\) \\(\\mathbf{p}\\otimes \\mathbf{q} = [p_wq_w-\\mathbf{p}_v^\\top\\mathbf{q}_v,p_v\\mathbf{q}_v+p_v\\mathbf{q}_v+\\mathbf{p}_v \\times \\mathbf{q}_v]=[\\mathbf{p}]_L\\mathbf{q}=[\\mathbf{q}]_R\\mathbf{p}\\) \\((\\mathbf{q}\\otimes \\mathbf{x}) \\otimes \\mathbf{p} = [\\mathbf{p}]_R[\\mathbf{q}]_L\\mathbf{x}\\) \\(\\mathbf{q}\\otimes (\\mathbf{x} \\otimes \\mathbf{p}) = [\\mathbf{q}]_L[\\mathbf{p}]_R\\mathbf{x}\\) \\([\\mathbf{p}]_L=\\begin{bmatrix} p_w &-p_x &-p_y &-p_z\\\\ p_x &p_w &-p_z &p_y\\\\ p_y &p_z &p_w &-p_x\\\\ p_z &-p_y &p_x &p_w \\end{bmatrix} =p_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{p}_v^\\top\\\\\\mathbf{p}_v&[\\mathbf{p}_v]_{\\times}\\end{bmatrix}\\) \\([\\mathbf{q}]_R=q_w\\mathbf{I}+\\begin{bmatrix}0&-\\mathbf{q}_v^\\top\\\\\\mathbf{q}_v&-[\\mathbf{q}_v]_{\\times}\\end{bmatrix}\\) \u56db\u5143\u6570\u7684\u9006\uff1a \\(q^{-1} = q^*/\\|q\\|\\) , \u5171\u8f6d \\(q^*=[q_w ,- q_v]\\) \u7531\u56db\u5143\u6570\u65cb\u8f6c\u5411\u91cf\uff1a \\(a'= q \\otimes a \\otimes q^*\\) \u7b49\u6548\u63cf\u8ff0 \u65cb\u8f6c\u77e2\u91cf \\(\\theta\\) , \u65cb\u8f6c\u77e9\u9635R ,\u674e\u4ee3\u6570 \u7f57\u5fb7\u91cc\u683c\u65af\u516c\u5f0f : \\(R_{wb}=I+sin \\theta(\\mathbf{u}^{\\wedge})+(1-cos \\theta)(\\mathbf{u}^{\\wedge})^2 = exp(\\theta \\mathbf{u}^{\\wedge})\\) \u65cb\u8f6c\u77e2\u91cf\u4e0e\u56db\u5143\u6570: \\(\\mathbf{q}=cos \\frac{\\theta}{2}+\\mathbf{u}sin \\frac{\\theta}{2} = exp(\\frac{\\theta}{2} \\mathbf{u}^{\\wedge})\\) \u65cb\u8f6c\u77e9\u9635\u4e0e\u56db\u5143\u6570: \\(\\mathbf{R}=(q_w^2-\\mathbf{q}_v^\\top\\mathbf{q}_v)\\mathbf{I}+2\\mathbf{q}_v\\mathbf{q}_v^\\top+2q_w[\\mathbf{q}_v]^{\\wedge}\\) \u65cb\u8f6c\u77e9\u9635\u7684\u5fae\u5206 \u00b6 \\[ \\dfrac{dr}{dt} = \\omega \\times r, \\quad b^w = R_{b \\rightarrow w}e^b \\] \u4e16\u754c\u5750\u6807\u7cfb\uff1a \\[ \\dfrac{dR_{b \\rightarrow w}}{dt} = \\omega^w \\times b^w = [\\omega^b]_{\\times} R_{b \\rightarrow w}e^b =[\\omega^w]_{\\times} R_{b \\rightarrow w} \\] \u673a\u4f53\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\dfrac{dR_{b \\rightarrow w}}{dt} &=\\dfrac{d[b_1^w,b_2^w,b_3^w]}{dt} = \\omega^w \\times b^w = R_{b \\rightarrow w}\\omega^b \\times R_{b \\rightarrow w}e^b \\\\ &=R_{b \\rightarrow w}(\\omega^b \\times e^b) = R_{b \\rightarrow w}[\\omega^b]_{\\times} \\end{align} \\] \u56db\u5143\u6570\u7684\u5fae\u5206 \u00b6 \\[ \\mathbf{q}=cos\\frac{\\theta}{2}+\\mathbf{u}sin \\frac{\\theta}{2} \\] \u4e16\u754c\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\frac{d\\mathbf{^wq}}{dt}&=-\\frac{\\dot{\\theta}}{2}sin\\frac{\\theta}{2}+\\frac{\\dot{\\theta}}{2}\\mathbf{u}cos\\frac{\\theta}{2}\\\\ &=\\frac{\\dot{\\theta}}{2}cos\\frac{\\theta}{2}\\mathbf{u}+\\mathbf{u}\\otimes\\mathbf{u}\\frac{\\dot{\\theta}}{2}sin\\frac{\\theta}{2}\\\\ &=\\frac{\\dot{\\theta}}{2}\\mathbf{u}\\otimes(cos\\frac{\\theta}{2}+\\mathbf{u}sin \\frac{\\theta}{2})=\\frac{\\dot{\\theta}}{2}\\mathbf{u}\\otimes \\mathbf{q}=\\frac{1}{2}\\mathbf{^w\\omega}\\otimes \\mathbf{q} \\end{align} \\] \u673a\u4f53\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\frac{d\\mathbf{^w q}}{dt}&=\\frac{1}{2}\\mathbf{^w\\omega}\\otimes \\mathbf{q}=\\frac{1}{2}\\mathbf{q}\\otimes \\mathbf{^b\\omega}\\otimes \\mathbf{q^*}\\otimes \\mathbf{q} =\\frac{1}{2}\\mathbf{q}\\otimes \\mathbf{^b\\omega} \\end{align} \\] \u60ef\u6027\u5bfc\u822a\u89e3\u7b97 \u00b6 \u59ff\u6001\u66f4\u65b0 \u00b6 \u8f6c\u89d2 \\(\\theta\\) \u66f4\u65b0: \u6b27\u62c9\u6cd5: \\(\\theta=\\omega_{k-1}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(\\theta=\\dfrac{\\omega_{k-1}+\\omega_k}{2}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5\u66f4\u65b0\u8f6c\u89d2 const IMUData & imu_data_curr = imu_data_buff_ . at ( index_curr ); const IMUData & imu_data_prev = imu_data_buff_ . at ( index_prev ); double delta_t = imu_data_curr . time - imu_data_prev . time ; Eigen :: Vector3d angular_vel_curr = GetUnbiasedAngularVel ( imu_data_curr . angular_velocity ); Eigen :: Vector3d angular_vel_prev = GetUnbiasedAngularVel ( imu_data_prev . angular_velocity ); angular_delta = 0.5 * delta_t * ( angular_vel_curr + angular_vel_prev ); \u57fa\u4e8e\u65cb\u8f6c\u77e9\u9635\u7684\u66f4\u65b0: \\(\\dot{R_b^w}=R_b^w [\\omega^b]^{\\wedge}\\) \\([R_b^w]_k=[R_b^w]_{k-1}e^{\\mathbf{\\theta}^{\\wedge}}=[R_b^w]_{k-1}(I+\\dfrac{sin\\theta}{\\theta} [\\mathbf{\\theta}^{\\wedge}]+\\dfrac{(1-cos\\theta)}{\\theta^2}[\\mathbf{\\theta}^{\\wedge}]^2)\\) \u57fa\u4e8e\u56db\u5143\u6570\u7684\u66f4\u65b0: \\(\\dot{q}=\\frac{1}{2}q\\otimes \\omega^b = \\frac{1}{2}[\\omega^b]_R q\\) \u56db\u5143\u6570\u66f4\u65b0 double angular_delta_mag = angular_delta . norm (); // direction: Eigen :: Vector3d angular_delta_dir = angular_delta . normalized (); // build delta q: double angular_delta_cos = cos ( angular_delta_mag / 2.0 ); double angular_delta_sin = sin ( angular_delta_mag / 2.0 ); Eigen :: Quaterniond dq ( angular_delta_cos , angular_delta_sin * angular_delta_dir . x (), angular_delta_sin * angular_delta_dir . y (), angular_delta_sin * angular_delta_dir . z () ); Eigen :: Quaterniond q ( pose_ . block < 3 , 3 > ( 0 , 0 )); // update: q = q * dq ; // write back: R_prev = pose_ . block < 3 , 3 > ( 0 , 0 ); pose_ . block < 3 , 3 > ( 0 , 0 ) = q . normalized (). toRotationMatrix (); R_curr = pose_ . block < 3 , 3 > ( 0 , 0 ); Eigen Quaternion Eigen::Quaterniond (double\u7c7b\u578b)\u6216\u8005 Eigen::Quaternionf (float\u7c7b\u578b) \u56db\u5143\u6570\u5c55\u5f00\u66f4\u65b0: \\(q(t)=e^{\\frac{1}{2}\\int_{t_0}^t A(\\tau)d\\tau} q(t_0)\\Rightarrow q_{k+1}=e^{\\frac{1}{2} A\\Delta t }q_k\\) \\(\\Delta \\Theta = A \\Delta t = \\begin{bmatrix} 0&-\\Delta \\theta \\\\\\Delta \\theta & [\\Delta \\theta]^{\\wedge} \\end{bmatrix}\\) \\((\\Delta \\Theta)^2=-\\Delta \\theta I\\) \\((\\Delta \\Theta)^3=-\\Delta \\theta \\Delta \\Theta\\) \\((\\Delta \\Theta)^4=(\\Delta \\theta)^2 I\\) \\(\\Rightarrow e^{\\frac{1}{2} A\\Delta t} = I + \\dfrac{\\dfrac{1}{2}\\Delta \\Theta}{1!}+ \\dfrac{(\\dfrac{1}{2}\\Delta \\Theta)^2}{2!}+ \\dfrac{(\\dfrac{1}{2}\\Delta \\Theta)^3}{3!}+\\dots\\) \u4e00\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx I + \\dfrac{1}{2}\\Delta \\Theta\\) \u4e8c\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx(1-\\dfrac{\\Delta \\theta}{8})I + \\dfrac{1}{2}\\Delta \\Theta\\) \u4e09\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx(1-\\dfrac{\\Delta \\theta}{8})I+ (\\dfrac{1}{2}-\\dfrac{(\\Delta \\theta)^2}{48})\\Delta \\Theta\\) \u901f\u5ea6\u66f4\u65b0 \u00b6 \\(\\dot{v}=R_b^w a -g\\) \u6b27\u62c9\u6cd5: \\(v_k=v_{k-1}+([R_b^w]_{k-1} a_{k-1}-g)(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(v_k=v_{k-1}+(\\dfrac{[R_b^w]_{k-1} a_{k-1}+[R_b^w]_{k} a_{k}}{2}-g)(t_k-t_{k-1})\\) \u901f\u5ea6\u66f4\u65b0 const IMUData & imu_data_curr = imu_data_buff_ . at ( index_curr ); const IMUData & imu_data_prev = imu_data_buff_ . at ( index_prev ); delta_t = imu_data_curr . time - imu_data_prev . time ; Eigen :: Vector3d linear_acc_curr = GetUnbiasedLinearAcc ( imu_data_curr . linear_acceleration , R_curr ); Eigen :: Vector3d linear_acc_prev = GetUnbiasedLinearAcc ( imu_data_prev . linear_acceleration , R_prev ); velocity_delta = 0.5 * delta_t * ( linear_acc_curr + linear_acc_prev ); \u4f4d\u7f6e\u66f4\u65b0 \u00b6 \\(\\dot{p}=v\\) \u6b27\u62c9\u6cd5: \\(p_k=p_{k-1}+v_{k-1}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(p_k=p_{k-1}+\\dfrac{v_{k-1}+v_{k}}{2}(t_k-t_{k-1})\\) \u4f4d\u7f6e\u66f4\u65b0 pose_ . block < 3 , 1 > ( 0 , 3 ) += delta_t * vel_ + 0.5 * delta_t * velocity_delta ; vel_ += velocity_delta ;","title":"\u56db\u5143\u6570\u57fa\u7840\u548c\u60ef\u6027\u5bfc\u822a\u89e3\u7b97"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_1","text":"\\[ \\dfrac{dr}{dt} = \\omega \\times r, \\quad b^w = R_{b \\rightarrow w}e^b \\] \u4e16\u754c\u5750\u6807\u7cfb\uff1a \\[ \\dfrac{dR_{b \\rightarrow w}}{dt} = \\omega^w \\times b^w = [\\omega^b]_{\\times} R_{b \\rightarrow w}e^b =[\\omega^w]_{\\times} R_{b \\rightarrow w} \\] \u673a\u4f53\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\dfrac{dR_{b \\rightarrow w}}{dt} &=\\dfrac{d[b_1^w,b_2^w,b_3^w]}{dt} = \\omega^w \\times b^w = R_{b \\rightarrow w}\\omega^b \\times R_{b \\rightarrow w}e^b \\\\ &=R_{b \\rightarrow w}(\\omega^b \\times e^b) = R_{b \\rightarrow w}[\\omega^b]_{\\times} \\end{align} \\]","title":"\u65cb\u8f6c\u77e9\u9635\u7684\u5fae\u5206"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_2","text":"\\[ \\mathbf{q}=cos\\frac{\\theta}{2}+\\mathbf{u}sin \\frac{\\theta}{2} \\] \u4e16\u754c\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\frac{d\\mathbf{^wq}}{dt}&=-\\frac{\\dot{\\theta}}{2}sin\\frac{\\theta}{2}+\\frac{\\dot{\\theta}}{2}\\mathbf{u}cos\\frac{\\theta}{2}\\\\ &=\\frac{\\dot{\\theta}}{2}cos\\frac{\\theta}{2}\\mathbf{u}+\\mathbf{u}\\otimes\\mathbf{u}\\frac{\\dot{\\theta}}{2}sin\\frac{\\theta}{2}\\\\ &=\\frac{\\dot{\\theta}}{2}\\mathbf{u}\\otimes(cos\\frac{\\theta}{2}+\\mathbf{u}sin \\frac{\\theta}{2})=\\frac{\\dot{\\theta}}{2}\\mathbf{u}\\otimes \\mathbf{q}=\\frac{1}{2}\\mathbf{^w\\omega}\\otimes \\mathbf{q} \\end{align} \\] \u673a\u4f53\u5750\u6807\u7cfb\uff1a \\[ \\begin{align} \\frac{d\\mathbf{^w q}}{dt}&=\\frac{1}{2}\\mathbf{^w\\omega}\\otimes \\mathbf{q}=\\frac{1}{2}\\mathbf{q}\\otimes \\mathbf{^b\\omega}\\otimes \\mathbf{q^*}\\otimes \\mathbf{q} =\\frac{1}{2}\\mathbf{q}\\otimes \\mathbf{^b\\omega} \\end{align} \\]","title":"\u56db\u5143\u6570\u7684\u5fae\u5206"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_3","text":"","title":"\u60ef\u6027\u5bfc\u822a\u89e3\u7b97"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_4","text":"\u8f6c\u89d2 \\(\\theta\\) \u66f4\u65b0: \u6b27\u62c9\u6cd5: \\(\\theta=\\omega_{k-1}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(\\theta=\\dfrac{\\omega_{k-1}+\\omega_k}{2}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5\u66f4\u65b0\u8f6c\u89d2 const IMUData & imu_data_curr = imu_data_buff_ . at ( index_curr ); const IMUData & imu_data_prev = imu_data_buff_ . at ( index_prev ); double delta_t = imu_data_curr . time - imu_data_prev . time ; Eigen :: Vector3d angular_vel_curr = GetUnbiasedAngularVel ( imu_data_curr . angular_velocity ); Eigen :: Vector3d angular_vel_prev = GetUnbiasedAngularVel ( imu_data_prev . angular_velocity ); angular_delta = 0.5 * delta_t * ( angular_vel_curr + angular_vel_prev ); \u57fa\u4e8e\u65cb\u8f6c\u77e9\u9635\u7684\u66f4\u65b0: \\(\\dot{R_b^w}=R_b^w [\\omega^b]^{\\wedge}\\) \\([R_b^w]_k=[R_b^w]_{k-1}e^{\\mathbf{\\theta}^{\\wedge}}=[R_b^w]_{k-1}(I+\\dfrac{sin\\theta}{\\theta} [\\mathbf{\\theta}^{\\wedge}]+\\dfrac{(1-cos\\theta)}{\\theta^2}[\\mathbf{\\theta}^{\\wedge}]^2)\\) \u57fa\u4e8e\u56db\u5143\u6570\u7684\u66f4\u65b0: \\(\\dot{q}=\\frac{1}{2}q\\otimes \\omega^b = \\frac{1}{2}[\\omega^b]_R q\\) \u56db\u5143\u6570\u66f4\u65b0 double angular_delta_mag = angular_delta . norm (); // direction: Eigen :: Vector3d angular_delta_dir = angular_delta . normalized (); // build delta q: double angular_delta_cos = cos ( angular_delta_mag / 2.0 ); double angular_delta_sin = sin ( angular_delta_mag / 2.0 ); Eigen :: Quaterniond dq ( angular_delta_cos , angular_delta_sin * angular_delta_dir . x (), angular_delta_sin * angular_delta_dir . y (), angular_delta_sin * angular_delta_dir . z () ); Eigen :: Quaterniond q ( pose_ . block < 3 , 3 > ( 0 , 0 )); // update: q = q * dq ; // write back: R_prev = pose_ . block < 3 , 3 > ( 0 , 0 ); pose_ . block < 3 , 3 > ( 0 , 0 ) = q . normalized (). toRotationMatrix (); R_curr = pose_ . block < 3 , 3 > ( 0 , 0 ); Eigen Quaternion Eigen::Quaterniond (double\u7c7b\u578b)\u6216\u8005 Eigen::Quaternionf (float\u7c7b\u578b) \u56db\u5143\u6570\u5c55\u5f00\u66f4\u65b0: \\(q(t)=e^{\\frac{1}{2}\\int_{t_0}^t A(\\tau)d\\tau} q(t_0)\\Rightarrow q_{k+1}=e^{\\frac{1}{2} A\\Delta t }q_k\\) \\(\\Delta \\Theta = A \\Delta t = \\begin{bmatrix} 0&-\\Delta \\theta \\\\\\Delta \\theta & [\\Delta \\theta]^{\\wedge} \\end{bmatrix}\\) \\((\\Delta \\Theta)^2=-\\Delta \\theta I\\) \\((\\Delta \\Theta)^3=-\\Delta \\theta \\Delta \\Theta\\) \\((\\Delta \\Theta)^4=(\\Delta \\theta)^2 I\\) \\(\\Rightarrow e^{\\frac{1}{2} A\\Delta t} = I + \\dfrac{\\dfrac{1}{2}\\Delta \\Theta}{1!}+ \\dfrac{(\\dfrac{1}{2}\\Delta \\Theta)^2}{2!}+ \\dfrac{(\\dfrac{1}{2}\\Delta \\Theta)^3}{3!}+\\dots\\) \u4e00\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx I + \\dfrac{1}{2}\\Delta \\Theta\\) \u4e8c\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx(1-\\dfrac{\\Delta \\theta}{8})I + \\dfrac{1}{2}\\Delta \\Theta\\) \u4e09\u9636: \\(e^{\\frac{1}{2} A\\Delta t}\\approx(1-\\dfrac{\\Delta \\theta}{8})I+ (\\dfrac{1}{2}-\\dfrac{(\\Delta \\theta)^2}{48})\\Delta \\Theta\\)","title":"\u59ff\u6001\u66f4\u65b0"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_5","text":"\\(\\dot{v}=R_b^w a -g\\) \u6b27\u62c9\u6cd5: \\(v_k=v_{k-1}+([R_b^w]_{k-1} a_{k-1}-g)(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(v_k=v_{k-1}+(\\dfrac{[R_b^w]_{k-1} a_{k-1}+[R_b^w]_{k} a_{k}}{2}-g)(t_k-t_{k-1})\\) \u901f\u5ea6\u66f4\u65b0 const IMUData & imu_data_curr = imu_data_buff_ . at ( index_curr ); const IMUData & imu_data_prev = imu_data_buff_ . at ( index_prev ); delta_t = imu_data_curr . time - imu_data_prev . time ; Eigen :: Vector3d linear_acc_curr = GetUnbiasedLinearAcc ( imu_data_curr . linear_acceleration , R_curr ); Eigen :: Vector3d linear_acc_prev = GetUnbiasedLinearAcc ( imu_data_prev . linear_acceleration , R_prev ); velocity_delta = 0.5 * delta_t * ( linear_acc_curr + linear_acc_prev );","title":"\u901f\u5ea6\u66f4\u65b0"},{"location":"Sensor-Fusion/%E5%9B%9B%E5%85%83%E6%95%B0%E5%9F%BA%E7%A1%80%E5%92%8C%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E8%A7%A3%E7%AE%97/#_6","text":"\\(\\dot{p}=v\\) \u6b27\u62c9\u6cd5: \\(p_k=p_{k-1}+v_{k-1}(t_k-t_{k-1})\\) \u4e2d\u503c\u6cd5: \\(p_k=p_{k-1}+\\dfrac{v_{k-1}+v_{k}}{2}(t_k-t_{k-1})\\) \u4f4d\u7f6e\u66f4\u65b0 pose_ . block < 3 , 1 > ( 0 , 3 ) += delta_t * vel_ + 0.5 * delta_t * velocity_delta ; vel_ += velocity_delta ;","title":"\u4f4d\u7f6e\u66f4\u65b0"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/","text":"\u963f\u5170\u65b9\u5dee \u8bbe\u4e00\u6bb5\u6837\u672c\u957f\u5ea6\u4e3aN\uff0c\u91c7\u6837\u5468\u671f\u4e3aT\u3002\u5c06\u6837\u672c\u5206\u4e3aK\u7ec4\uff0c\u6bcf\u7ec4m\u4e2a\uff0c\u6bcf\u7ec4\u7684\u76f8\u5173\u65f6\u95f4\u4e3a \\(\\tau=mT\\) ,\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884c\u5e73\u5747\u6ee4\u6ce2\uff0c\u5f97\u5230\u65b0\u7684\u6837\u672c\u5e8f\u5217\u3002 $$ \\text{\u5e73\u5747\u89d2\u901f\u5ea6:}\\Omega(\\tau)= \\frac{\\theta(t_k+\\tau)-\\theta(t_k)}{\\tau}, \\quad \\text{\u89d2\u5ea6:}\\theta (t)=\\int_0^f \\Omega(t)dt $$ graph LR A[\"t(k)\"] --> |T| B[\"t(k+1)\"]; B --> |...| D[\"t(k+m-1)\"]; A --> |mT| E; D --> |T| E[\"t(k+m)\"]; E --> |T| F[\"t(k+m+1)\"]; F --> |...| G[\"t(k+2m-1)\"]; E --> |mT| H; G --> H[\"t(k+m-1)\"]; Allan\u65b9\u5dee\u5b9a\u4e49\u4e3a(\u4e0e\u76f8\u5173\u65f6\u95f4 \\(\\tau=mT\\) \u6709\u5173): $$ \\begin{align} \\sigma^2(\\tau)&=\\frac{1}{2} AVG((\\Omega_{k+m}-\\Omega_{k})^2) \\\\ &=\\frac{1}{2} AVG((\\frac{\\theta(t_{k+m}+\\tau)-\\theta(t_{k+m})}{\\tau}-\\frac{\\theta(t_k+\\tau)-\\theta(t_k)}{\\tau})^2) \\\\ &=\\frac{1}{2 \\tau^2} \\frac{1}{N-2m} \\sum_{k=1}^{N-2m} (\\theta_{k+2m}-2\\theta_{k+m}-\\theta_k)^2 \\end{align} $$ \u9891\u57df\u63cf\u8ff0\uff1a $$ \\begin{align} \\sigma^2(\\tau)= 4 \\int_0^{+\\infty}S_{\\Omega}(f) \\frac{sin^4(\\pi f \\tau)}{(\\pi f \\tau)^2}df \\end{align} $$ \u60ef\u6027\u5668\u4ef6\u5185\u53c2\u6807\u5b9a \u00b6 \u4f20\u611f\u5668\u8bef\u5dee\u6a21\u578b\u6a21\u578b \\(\\mathbf{W=K(I+S)y+b}\\) \u60ef\u6027\u5668\u4ef6\u8bef\u5dee\u7cfb\u6570 \u96f6\u504f( b )\uff1a\u9640\u87ba\u4eea\u6216\u52a0\u901f\u5ea6\u8ba1\u8f93\u51fa\u4e2d\u7684\u5e38\u503c\u504f\u79fb \\(\\mathbf{b}=[b_x,b_y,b_z]\\) \u523b\u5ea6\u7cfb\u6570\u8bef\u5dee( K )\uff1aScale\u6807\u5ea6\u56e0\u6570 \\(\\mathbf{K}=\\begin{bmatrix}K_x\\\\\\\\ &K_y \\\\\\\\ &&K_z\\end{bmatrix}\\) \u5b89\u88c5\u8bef\u5dee( S ):\u7531\u4e8e\u52a0\u5de5\u5de5\u827a\u539f\u56e0\uff0c\u9640\u87ba\u4eea\u7684\u4e09\u4e2a\u8f74\u5e76\u4e0d\u6b63\u4ea4\uff0ceg.\u7ed5x\u65cb\u8f6c\u65f6\u5bf9z\u6709\u5206\u91cf \\(\\mathbf{S}=\\begin{bmatrix}0&S_{xy}&S_{xz}\\\\\\\\ S_{yx}&0&S_{yz} \\\\\\\\ S_{zx}&S_{zy}&0\\end{bmatrix}\\) \u8bef\u5dee\u6807\u5b9a \u00b6 \u8fa8\u8bc6\u65b9\u6cd5\u5305\u62ec: \u89e3\u6790\u6cd5\u6216\u6700\u5c0f\u4e8c\u4e58(\u9700\u8981\u8f6c\u53f0\u7b49\u83b7\u53d6\u5927\u91cf\u6570\u636e) \u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\u5982\u68af\u5ea6\u4e0b\u964d(\u4e0d\u9700\u8981\u8f6c\u53f0) Kalman\u6ee4\u6ce2(\u9488\u5bf9\u9ad8\u7cbe\u5668\u4ef6\u5982\u5149\u7ea4\u9640\u87ba) \u57fa\u4e8e\u8f6c\u53f0\u7684\u6807\u5b9a \u00b6 \u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a \u00b6 \u5c06\u6bcf\u4e2a\u8f74\u5206\u522b\u671d\u4e0b\uff086,8,12\u79cd\uff09\u6839\u636e\u5df2\u77e5\u91cd\u529b\u5411\u91cf\u6d4b\u91cf\u6bcf\u4e2a\u8f74\u4e0a\u52a0\u901f\u5ea6\u5206\u91cf \u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u5c06\u8bef\u5dee\u6a21\u578b\u8f6c\u6362\u6210 \\(\\mathbf{y=A\\theta}\\) \u7684\u5f62\u5f0f $$ \\begin{bmatrix}a_x\\\\ a_y \\\\ a_z\\end{bmatrix}= \\begin{bmatrix}K_x&S_{xy}&S_{xz}\\\\ S_{yx}&K_y&S_{yz} \\\\ S_{zx}&S_{zy}&K_z\\end{bmatrix} \\begin{bmatrix}g_x\\\\ g_y \\\\ g_z\\end{bmatrix}+ \\begin{bmatrix}b_x\\\\ b_y \\\\ b_z\\end{bmatrix} $$ $$ \\mathbf{y=x\\theta} $$ $$ \\begin{align} \\mathbf{y} &= \\begin{bmatrix}a_x\\\\ a_y \\\\ a_z\\end{bmatrix}, \\mathbf{x} = \\begin{bmatrix} g_x & 0 & 0 &g_y& g_z & 0 &0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & g_y & 0 &0 &0 &g_y & g_z& 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & g_z &0 &0 & 0 & 0 &g_x & g_y & 0 & 0 & 1 \\end{bmatrix} \\\\ \\mathbf{\\theta} &= \\begin{bmatrix} K_x & K_y& K_z & S_{xy} & S_{xz} & S_{yx} & S_{yz} & S_{zx} & S_{zy} & b_x & b_y & b_z \\end{bmatrix}^\\top \\end{align} $$ \u8f6c\u53f0\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b9\u7a0b\uff1a $$ \\mathbf{y_i=x_i\\theta} $$ \u6240\u6709\u4f4d\u7f6e\u5bf9\u5e94\u7684\u65b9\u7a0b\u8054\u7acb\u53ef\u5f97\uff1a $$ \\mathbf{Y=X\\theta} $$ \u53c2\u6570\u62df\u5408\u95ee\u9898\u7b49\u6548\u4e3a\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\uff0c\u5176\u89e3\u4e3a\uff1a $$ \\mathbf{\\theta=(X^\\top X)^{-1} X^\\top Y} $$ \u9640\u87ba\u4eea\u6807\u5b9a \u00b6 \u8f6c\u53f0\u4e00\u822c\u89d2\u901f\u5ea6\u4e0d\u5982\u89d2\u5ea6\u7cbe\u5ea6\u9ad8\uff0c\u56e0\u6b64\u4e0d\u662f\u76f4\u63a5\u4ee5\u89d2\u901f\u5ea6\u4f5c\u4e3a\u771f\u503c\uff0c\u800c\u662f\u4ee5\u79ef\u5206\u5f97\u5230\u7684\u89d2\u5ea6\u4f5c\u4e3a\u771f\u503c\u3002 \u4ee5z\u8f74\u65cb\u8f6c\u4e3a\u4f8b\uff1a $$ \\begin{bmatrix}w_x\\\\ w_y \\\\ w_z\\end{bmatrix}= \\begin{bmatrix}K_x&S_{xy}&S_{xz}\\\\ S_{yx}&K_y&S_{yz} \\\\ S_{zx}&S_{zy}&K_z\\end{bmatrix} \\begin{bmatrix}0\\\\ 0 \\\\ \\omega \\end{bmatrix}+ \\begin{bmatrix}b_x\\\\ b_y \\\\ b_z\\end{bmatrix} $$ \u5c55\u5f00\u540e\u5ffd\u7565\u4e8c\u9636\u5c0f\u91cf\uff1a $$ \\begin{cases} w_x = S_{xz}\\omega + b_x \\\\ w_y = S_{yz}\\omega + b_y \\\\ w_z = K_z\\omega + b_z \\end{cases} \\stackrel{\u4e24\u8fb9\u79ef\u5206}{\\Longrightarrow} \\begin{cases} \\theta_wx = S_{xz}\\theta + \\theta_bx \\\\ \\theta_wy = S_{yz}\\theta + \\theta_by \\\\ \\theta_wz = K_z\\theta + \\theta_bz \\end{cases} $$ \u591a\u6b21\u6d4b\u91cf\u5373\u53ef\u89e3\u51fa\u523b\u5ea6\u7cfb\u6570\u8bef\u5dee K \u548c\u5b89\u88c5\u8bef\u5dee S \u96f6\u504f b \u5728\u9759\u6b62\u65f6\u6d4b\u5f97 \u65e0\u9700\u8f6c\u53f0\u7684\u6807\u5b9a \u00b6 \u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a \u00b6 \u4f18\u5316\u6a21\u578b $$ \\begin{align} A&=K(I+S_a)a+b \\\\ a&=(I+S_a)^{-1} K^{-1}(A-b), \\quad (I+S_a)^{-1} \\approx(I-S_a) \\\\ a&=(I-S_a) K_{inv}(A-b) \\end{align} $$ \u5f53\u5730\u91cd\u529b\u52a0\u901f\u5ea6g,\u6d4b\u5f97\u7684\u6570\u636e\u4e3aa\uff0c\u82e5\u6d4b\u91cf\u5b8c\u5168\u51c6\u786e\uff0c\u6709 \\(\\|g\\| = \\|a\\|\\) \u6b8b\u5dee\uff1a \\(f(\\theta)= \\|g\\|^2 - \\|a\\|^2\\) \u63a8\u5bfc\u96c5\u53ef\u6bd4\uff0c\u7528\u725b\u987f\u9ad8\u65af\u6cd5\u89e3\u5f97\u4f18\u5316\u89e3 \u9640\u87ba\u4eea\u6807\u5b9a \u00b6 \u9640\u87ba\u4eea\u5185\u53c2\u4f30\u8ba1\u5728\u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a\u5b8c\u6210\u540e\u8fdb\u884c\uff0c\u56e0\u6b64\u8ba4\u4e3a\u6b64\u65f6\u52a0\u901f\u5ea6\u8ba1\u65e0\u8bef\u5dee 1. \u4f18\u5316\u6a21\u578b u \u4e3aIMU\u8f93\u51fa\uff0c\u5373\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u7684\u8f93\u51fa\u6784\u6210\u7684\u77e2\u91cf\u5728IMU\u5750\u6807\u7cfb\u4e0b\u7684\u8868\u793a\uff1a k\u65f6\u523b\uff1a \\(\\mathbf{u_{k}=R_{k}g}\\) k+1\u65f6\u523b\uff1a \\(\\mathbf{u_{k+1}=R_{k+1}g}\\) 2. \u6b8b\u5dee\uff1a \\(f(\\theta)= \\mathbf{u_{k+1}} - \\mathbf{u_{k}}\\) 3. \u63a8\u5bfc\u96c5\u53ef\u6bd4\uff0c\u7528\u725b\u987f\u9ad8\u65af\u6cd5\u89e3\u5f97\u4f18\u5316\u89e3 \u52a0\u901f\u5ea6\u8ba1\u6a21\u578b: $$ \\begin{align} y&=K(I+S_a)x+b \\\\ x&=(I+S_a)^{-1} K^{-1}(y-b)\\\\ &=\\begin{bmatrix} 1&0&0\\\\ -S_{1}&1&0\\\\ -S_{2}+S_{1}S_{3}&-S_{3}&1 \\end{bmatrix} \\begin{bmatrix} K_{inv1}&0&0\\\\ 0&K_{inv2}&0\\\\ 0&0&K_{inv3} \\end{bmatrix}\\begin{bmatrix} y_1-b_1\\\\ y_2-b_2\\\\ y_3-b_3 \\end{bmatrix}\\\\ &=SK(y-b)\\\\ &=\\begin{bmatrix} K_{inv1} (y_1 - b_1)\\\\ K_{inv2} (y_2 - b_2) + K_{inv1} S_1 (y_1 - b_1)\\\\ K_{inv3} (y_3 - b_3) - K_{inv2} S_3 (y_2 - b_2) - K_{inv1}(y_1 - b_1)(S_2 - S_1*S_3) \\end{bmatrix} \\end{align} $$ \u6b8b\u5dee\uff1a \\[ f(\\theta) = \\|\\mathbf{g}\\|^2-\\|\\mathbf{x}\\|^2 =g^2 - x^\\top x \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} \\frac{\\partial f(\\theta)}{\\partial \\theta} &=-2x^\\top\\frac{\\partial x}{\\partial \\theta}=-2x^\\top[\\frac{\\partial x}{\\partial S},\\frac{\\partial x}{\\partial K},\\frac{\\partial x}{\\partial b}]\\\\\\\\ \\frac{\\partial x}{\\partial S}&= \\begin{bmatrix} 0&0&0\\\\\\\\ -K_{inv1}(y_1 - b_1) &0&0\\\\\\\\ K_{inv1}S_3(y_1 - b_1)&-K_{inv1}(y_1 - b_1)&K_{inv1}S_1(y_1 - b_1)-K_{inv2}(y_2 - b_2) \\end{bmatrix}\\\\\\\\ \\frac{\\partial x}{\\partial K}&= \\begin{bmatrix} (y_1 - b_1)&0&0\\\\\\\\ -S_1 (y_1 - b_1)&(y_2 - b_2)&0\\\\\\\\ -(S_2-S_1S_3) (y_1 - b_1)&-S_3 (y_2 - b_2)&(y_3 - b_3) \\end{bmatrix}\\\\\\\\ \\frac{\\partial x}{\\partial b}&= \\begin{bmatrix} -K_{inv1} &0&0\\\\\\\\ K_{inv1} S_1&-K_{inv2}&0\\\\\\\\ K_{inv1} (S_2-S_1 S_3)&K_{inv2} S_3&-K_{inv3} \\end{bmatrix} \\end{align} \\]","title":"\u60ef\u6027\u5bfc\u822a\u539f\u7406\u53ca\u8bef\u5dee\u5206\u6790"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_1","text":"\u4f20\u611f\u5668\u8bef\u5dee\u6a21\u578b\u6a21\u578b \\(\\mathbf{W=K(I+S)y+b}\\) \u60ef\u6027\u5668\u4ef6\u8bef\u5dee\u7cfb\u6570 \u96f6\u504f( b )\uff1a\u9640\u87ba\u4eea\u6216\u52a0\u901f\u5ea6\u8ba1\u8f93\u51fa\u4e2d\u7684\u5e38\u503c\u504f\u79fb \\(\\mathbf{b}=[b_x,b_y,b_z]\\) \u523b\u5ea6\u7cfb\u6570\u8bef\u5dee( K )\uff1aScale\u6807\u5ea6\u56e0\u6570 \\(\\mathbf{K}=\\begin{bmatrix}K_x\\\\\\\\ &K_y \\\\\\\\ &&K_z\\end{bmatrix}\\) \u5b89\u88c5\u8bef\u5dee( S ):\u7531\u4e8e\u52a0\u5de5\u5de5\u827a\u539f\u56e0\uff0c\u9640\u87ba\u4eea\u7684\u4e09\u4e2a\u8f74\u5e76\u4e0d\u6b63\u4ea4\uff0ceg.\u7ed5x\u65cb\u8f6c\u65f6\u5bf9z\u6709\u5206\u91cf \\(\\mathbf{S}=\\begin{bmatrix}0&S_{xy}&S_{xz}\\\\\\\\ S_{yx}&0&S_{yz} \\\\\\\\ S_{zx}&S_{zy}&0\\end{bmatrix}\\)","title":"\u60ef\u6027\u5668\u4ef6\u5185\u53c2\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_2","text":"\u8fa8\u8bc6\u65b9\u6cd5\u5305\u62ec: \u89e3\u6790\u6cd5\u6216\u6700\u5c0f\u4e8c\u4e58(\u9700\u8981\u8f6c\u53f0\u7b49\u83b7\u53d6\u5927\u91cf\u6570\u636e) \u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\u5982\u68af\u5ea6\u4e0b\u964d(\u4e0d\u9700\u8981\u8f6c\u53f0) Kalman\u6ee4\u6ce2(\u9488\u5bf9\u9ad8\u7cbe\u5668\u4ef6\u5982\u5149\u7ea4\u9640\u87ba)","title":"\u8bef\u5dee\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_3","text":"","title":"\u57fa\u4e8e\u8f6c\u53f0\u7684\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_4","text":"\u5c06\u6bcf\u4e2a\u8f74\u5206\u522b\u671d\u4e0b\uff086,8,12\u79cd\uff09\u6839\u636e\u5df2\u77e5\u91cd\u529b\u5411\u91cf\u6d4b\u91cf\u6bcf\u4e2a\u8f74\u4e0a\u52a0\u901f\u5ea6\u5206\u91cf \u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u5c06\u8bef\u5dee\u6a21\u578b\u8f6c\u6362\u6210 \\(\\mathbf{y=A\\theta}\\) \u7684\u5f62\u5f0f $$ \\begin{bmatrix}a_x\\\\ a_y \\\\ a_z\\end{bmatrix}= \\begin{bmatrix}K_x&S_{xy}&S_{xz}\\\\ S_{yx}&K_y&S_{yz} \\\\ S_{zx}&S_{zy}&K_z\\end{bmatrix} \\begin{bmatrix}g_x\\\\ g_y \\\\ g_z\\end{bmatrix}+ \\begin{bmatrix}b_x\\\\ b_y \\\\ b_z\\end{bmatrix} $$ $$ \\mathbf{y=x\\theta} $$ $$ \\begin{align} \\mathbf{y} &= \\begin{bmatrix}a_x\\\\ a_y \\\\ a_z\\end{bmatrix}, \\mathbf{x} = \\begin{bmatrix} g_x & 0 & 0 &g_y& g_z & 0 &0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & g_y & 0 &0 &0 &g_y & g_z& 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & g_z &0 &0 & 0 & 0 &g_x & g_y & 0 & 0 & 1 \\end{bmatrix} \\\\ \\mathbf{\\theta} &= \\begin{bmatrix} K_x & K_y& K_z & S_{xy} & S_{xz} & S_{yx} & S_{yz} & S_{zx} & S_{zy} & b_x & b_y & b_z \\end{bmatrix}^\\top \\end{align} $$ \u8f6c\u53f0\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b9\u7a0b\uff1a $$ \\mathbf{y_i=x_i\\theta} $$ \u6240\u6709\u4f4d\u7f6e\u5bf9\u5e94\u7684\u65b9\u7a0b\u8054\u7acb\u53ef\u5f97\uff1a $$ \\mathbf{Y=X\\theta} $$ \u53c2\u6570\u62df\u5408\u95ee\u9898\u7b49\u6548\u4e3a\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\uff0c\u5176\u89e3\u4e3a\uff1a $$ \\mathbf{\\theta=(X^\\top X)^{-1} X^\\top Y} $$","title":"\u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_5","text":"\u8f6c\u53f0\u4e00\u822c\u89d2\u901f\u5ea6\u4e0d\u5982\u89d2\u5ea6\u7cbe\u5ea6\u9ad8\uff0c\u56e0\u6b64\u4e0d\u662f\u76f4\u63a5\u4ee5\u89d2\u901f\u5ea6\u4f5c\u4e3a\u771f\u503c\uff0c\u800c\u662f\u4ee5\u79ef\u5206\u5f97\u5230\u7684\u89d2\u5ea6\u4f5c\u4e3a\u771f\u503c\u3002 \u4ee5z\u8f74\u65cb\u8f6c\u4e3a\u4f8b\uff1a $$ \\begin{bmatrix}w_x\\\\ w_y \\\\ w_z\\end{bmatrix}= \\begin{bmatrix}K_x&S_{xy}&S_{xz}\\\\ S_{yx}&K_y&S_{yz} \\\\ S_{zx}&S_{zy}&K_z\\end{bmatrix} \\begin{bmatrix}0\\\\ 0 \\\\ \\omega \\end{bmatrix}+ \\begin{bmatrix}b_x\\\\ b_y \\\\ b_z\\end{bmatrix} $$ \u5c55\u5f00\u540e\u5ffd\u7565\u4e8c\u9636\u5c0f\u91cf\uff1a $$ \\begin{cases} w_x = S_{xz}\\omega + b_x \\\\ w_y = S_{yz}\\omega + b_y \\\\ w_z = K_z\\omega + b_z \\end{cases} \\stackrel{\u4e24\u8fb9\u79ef\u5206}{\\Longrightarrow} \\begin{cases} \\theta_wx = S_{xz}\\theta + \\theta_bx \\\\ \\theta_wy = S_{yz}\\theta + \\theta_by \\\\ \\theta_wz = K_z\\theta + \\theta_bz \\end{cases} $$ \u591a\u6b21\u6d4b\u91cf\u5373\u53ef\u89e3\u51fa\u523b\u5ea6\u7cfb\u6570\u8bef\u5dee K \u548c\u5b89\u88c5\u8bef\u5dee S \u96f6\u504f b \u5728\u9759\u6b62\u65f6\u6d4b\u5f97","title":"\u9640\u87ba\u4eea\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_6","text":"","title":"\u65e0\u9700\u8f6c\u53f0\u7684\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_7","text":"\u4f18\u5316\u6a21\u578b $$ \\begin{align} A&=K(I+S_a)a+b \\\\ a&=(I+S_a)^{-1} K^{-1}(A-b), \\quad (I+S_a)^{-1} \\approx(I-S_a) \\\\ a&=(I-S_a) K_{inv}(A-b) \\end{align} $$ \u5f53\u5730\u91cd\u529b\u52a0\u901f\u5ea6g,\u6d4b\u5f97\u7684\u6570\u636e\u4e3aa\uff0c\u82e5\u6d4b\u91cf\u5b8c\u5168\u51c6\u786e\uff0c\u6709 \\(\\|g\\| = \\|a\\|\\) \u6b8b\u5dee\uff1a \\(f(\\theta)= \\|g\\|^2 - \\|a\\|^2\\) \u63a8\u5bfc\u96c5\u53ef\u6bd4\uff0c\u7528\u725b\u987f\u9ad8\u65af\u6cd5\u89e3\u5f97\u4f18\u5316\u89e3","title":"\u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a"},{"location":"Sensor-Fusion/%E6%83%AF%E6%80%A7%E5%AF%BC%E8%88%AA%E5%8E%9F%E7%90%86%E5%8F%8A%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/#_8","text":"\u9640\u87ba\u4eea\u5185\u53c2\u4f30\u8ba1\u5728\u52a0\u901f\u5ea6\u8ba1\u6807\u5b9a\u5b8c\u6210\u540e\u8fdb\u884c\uff0c\u56e0\u6b64\u8ba4\u4e3a\u6b64\u65f6\u52a0\u901f\u5ea6\u8ba1\u65e0\u8bef\u5dee 1. \u4f18\u5316\u6a21\u578b u \u4e3aIMU\u8f93\u51fa\uff0c\u5373\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u7684\u8f93\u51fa\u6784\u6210\u7684\u77e2\u91cf\u5728IMU\u5750\u6807\u7cfb\u4e0b\u7684\u8868\u793a\uff1a k\u65f6\u523b\uff1a \\(\\mathbf{u_{k}=R_{k}g}\\) k+1\u65f6\u523b\uff1a \\(\\mathbf{u_{k+1}=R_{k+1}g}\\) 2. \u6b8b\u5dee\uff1a \\(f(\\theta)= \\mathbf{u_{k+1}} - \\mathbf{u_{k}}\\) 3. \u63a8\u5bfc\u96c5\u53ef\u6bd4\uff0c\u7528\u725b\u987f\u9ad8\u65af\u6cd5\u89e3\u5f97\u4f18\u5316\u89e3 \u52a0\u901f\u5ea6\u8ba1\u6a21\u578b: $$ \\begin{align} y&=K(I+S_a)x+b \\\\ x&=(I+S_a)^{-1} K^{-1}(y-b)\\\\ &=\\begin{bmatrix} 1&0&0\\\\ -S_{1}&1&0\\\\ -S_{2}+S_{1}S_{3}&-S_{3}&1 \\end{bmatrix} \\begin{bmatrix} K_{inv1}&0&0\\\\ 0&K_{inv2}&0\\\\ 0&0&K_{inv3} \\end{bmatrix}\\begin{bmatrix} y_1-b_1\\\\ y_2-b_2\\\\ y_3-b_3 \\end{bmatrix}\\\\ &=SK(y-b)\\\\ &=\\begin{bmatrix} K_{inv1} (y_1 - b_1)\\\\ K_{inv2} (y_2 - b_2) + K_{inv1} S_1 (y_1 - b_1)\\\\ K_{inv3} (y_3 - b_3) - K_{inv2} S_3 (y_2 - b_2) - K_{inv1}(y_1 - b_1)(S_2 - S_1*S_3) \\end{bmatrix} \\end{align} $$ \u6b8b\u5dee\uff1a \\[ f(\\theta) = \\|\\mathbf{g}\\|^2-\\|\\mathbf{x}\\|^2 =g^2 - x^\\top x \\] \u96c5\u53ef\u6bd4\uff1a \\[ \\begin{align} \\frac{\\partial f(\\theta)}{\\partial \\theta} &=-2x^\\top\\frac{\\partial x}{\\partial \\theta}=-2x^\\top[\\frac{\\partial x}{\\partial S},\\frac{\\partial x}{\\partial K},\\frac{\\partial x}{\\partial b}]\\\\\\\\ \\frac{\\partial x}{\\partial S}&= \\begin{bmatrix} 0&0&0\\\\\\\\ -K_{inv1}(y_1 - b_1) &0&0\\\\\\\\ K_{inv1}S_3(y_1 - b_1)&-K_{inv1}(y_1 - b_1)&K_{inv1}S_1(y_1 - b_1)-K_{inv2}(y_2 - b_2) \\end{bmatrix}\\\\\\\\ \\frac{\\partial x}{\\partial K}&= \\begin{bmatrix} (y_1 - b_1)&0&0\\\\\\\\ -S_1 (y_1 - b_1)&(y_2 - b_2)&0\\\\\\\\ -(S_2-S_1S_3) (y_1 - b_1)&-S_3 (y_2 - b_2)&(y_3 - b_3) \\end{bmatrix}\\\\\\\\ \\frac{\\partial x}{\\partial b}&= \\begin{bmatrix} -K_{inv1} &0&0\\\\\\\\ K_{inv1} S_1&-K_{inv2}&0\\\\\\\\ K_{inv1} (S_2-S_1 S_3)&K_{inv2} S_3&-K_{inv3} \\end{bmatrix} \\end{align} \\]","title":"\u9640\u87ba\u4eea\u6807\u5b9a"},{"location":"tags/","text":"Tags \u00b6 Following is a list of relevant tags: ESKF \u00b6 ESKF\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u8bef\u5dee\u72b6\u6001\u6ee4\u6ce2\u5668","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#eskf","text":"ESKF\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u79bb\u6563\u52a8\u529b\u5b66\u65b9\u7a0b ESKF\u8bef\u5dee\u72b6\u6001\u6ee4\u6ce2\u5668","title":"ESKF"}]}